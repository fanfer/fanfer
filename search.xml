<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>RAG</title>
      <link href="/2024/12/12/RAG/"/>
      <url>/2024/12/12/RAG/</url>
      
        <content type="html"><![CDATA[<p>RAG（检索增强生成）通过提供对知识来源的访问来减少幻觉，这些知识来源为用户查询提供了额外的上下文，即LLM（如 Claude3.5、 GPT-4o）。它还旨在克服语言模型的上下文限制。</p><p>但是如果我们稍微简化一下，它就没有什么特别之处了。想问LLM 巴拉克·奥巴马的生日是什么？为什么不先找到奥巴马的维基百科页面（检索），将其添加到提示中（增强），然后让LLM回答问题（生成）。就这样！我们构建了我们第一个 RAG 系统。</p><p>在其核心，RAG 系统包含 2 个组件：一个检索器，用于从外部源文档中检索信息，以及一个生成器，使用检索到的信息生成响应。</p><p><img src="https://cdn-images-1.readmedium.com/v2/resize:fit:800/1*yhNrCt2gRVXYfk1YXKoVkg.png" alt="image.png"></p><p>RAG 常常与基于语义搜索或嵌入构建索引同时出现。</p><p>信息检索已经存在一个世纪了。在那些日子里，我们是如何检索相关文档的？没错，就是我们的好朋友 BM25。简单、快速且有效。基于词的检索解决方案如 BM25 也成功地为许多搜索引擎提供了动力。</p><p>虽然 RAG 在减少幻觉方面显示出希望，但它并非没有挑战。传统 RAG 系统中的一个关键问题是，在将文档分割成更小的块进行检索时，可能会丢失上下文。这就是 Anthropic 引入了“上下文检索”这一简单概念，为在 RAG 框架内保持更广泛的上下文提供了一个解决方案。</p><h2 id="contextual-retrieval-上下文检索"><strong>Contextual Retrieval 上下文检索</strong></h2><p>传统 RAG 通常将文档分割成更小的块以实现高效检索，但这可能导致上下文丢失。最近，Anthropic 在其论文中引入了“上下文嵌入”的概念，通过在每个嵌入之前添加相关上下文来解决缺乏上下文的问题。</p><p>可以使用LLM进行上下文检索。您可以开发一个针对LLM的提示，指示模型根据整体文档生成简洁的、针对特定块的内容，以便为每个块提供上下文信息。</p><p><img src="https://cdn-images-1.readmedium.com/v2/resize:fit:800/1*OJspQxehTykRxihdMkpkQQ.png" alt="image.png"></p><p>考虑一个关于特定公司季度收入增长的查询。一个相关的片段可能如下：“该公司的收入与前一个季度相比增长了 3%”，它包含了增长百分比，但缺乏关键细节，如公司名称或时间段。这种缺乏上下文可能会阻碍准确检索。</p><p>通过将整体文档发送到每个块上的LLM，我们得到如下语境化的块：</p><p><img src="https://cdn-images-1.readmedium.com/v2/resize:fit:800/1*OYiABIrjAciHQtNl8U4tVQ.png" alt="image.png"></p><p>这个‘contextualized_chunk’随后被发送到嵌入模型以创建该块的嵌入。</p><h2 id="hybrid-search-approach-混合搜索方法"><strong>Hybrid search approach 混合搜索方法</strong></h2><p>尽管这种上下文嵌入已经证明可以改进传统的语义搜索 RAG，但结合 BM25 的混合方法可以产生更好的结果。相同的块特定上下文也可以与 BM25 搜索结合使用，以进一步提高检索性能。</p><p>BM25 是一种算法，它解决了 TF-IDF 的一些缺点，这些缺点与词饱和度和文档长度有关。</p><p>如果一个文档包含 100 次“计算机”这个术语的出现，它真的比包含 50 次出现的文档相关性强两倍吗？我们希望控制当某个术语可能饱和时 TF 的贡献。BM25 通过引入一个控制饱和曲线形状的参数 k1 来解决此问题。参数 k1 可以被调整，使得当 TF 增加时，在某个点上，BM25 分数将饱和，这意味着 TF 的增加不再对分数有太大贡献。</p><p>如果文档非常短，并且只包含一次“计算机”，这可能已经是一个很好的相关性指标。但是，如果文档真的很长，而“计算机”这个术语只出现一次，那么很可能这份文档并不是关于计算机的。我们希望奖励与短文档的术语匹配，并惩罚长文档。</p><p>我们可以通过引入另一个参数 b 来平衡短文档和长文档之间的相关性。参数 b 控制惩罚的强度：b 的值越高，对长文档的惩罚就越高。另一方面，小于平均长度的文档会受到奖励并给出更高的分数。语料库的平均长度用作参考点。长文档就是指比语料库平均长度长的文档，而短文档则是指比语料库平均长度短的文档。</p><p>虽然 BM25 是一种强大的基于词项的检索方法，但它可能无法捕捉到文档的语义含义，从而错过相关文档。这就是基于嵌入的检索介入的地方。</p><h2 id="embedding-based-retrieval-dense-retrieval-基于嵌入的检索-密集检索"><strong>Embedding-based retrieval (Dense retrieval)基于嵌入的检索（密集检索）</strong></h2><p>密集检索技术将文本转换为嵌入表示——这听起来很复杂，其实是指我们可以用一大堆数字来表示文本（或图像、音频）。嵌入通常是一个向量，旨在保留原始数据的重要属性。在搜索时，查询被嵌入到相同的向量空间中，通过比较这两个向量之间的距离，可以识别出与查询嵌入最接近的嵌入（块/文档）。</p><p><img src="https://cdn-images-1.readmedium.com/v2/resize:fit:800/0*N7x-Cn17Jb-GNY50.gif" alt="image.png"></p><p>余弦相似度，通过两个向量之间的角度来观察它们有多接近，是密集检索中的一种流行指标。余弦相似度得分越高（意味着角度越小），与查询的语义重叠度越高，因此意义越接近。</p><p>例如，“The cat sits on a mat”的嵌入应该与“The dog plays on the grass”有更高的相似度，而不是与“The AI research is super fun”，因为前两个句子共享更多的语义元素。</p><p>在实践中，向量搜索通常被实现为最近邻搜索。给定一个查询，目标是找到最相似的 k 个向量。实现这一目标的一种直接方法是 k-最近邻（k-NN）算法：</p><ol><li>计算查询嵌入与所有存储向量的相似度得分，通常使用余弦相似度。</li><li>对这些向量根据它们的相似度得分进行排序。</li><li>选择得分最高的前 k 个向量。</li></ol><h2 id="hybrid-search-contextual-bm25-and-contextual-embeddings混合搜索：上下文-bm25-和上下文嵌入"><strong>Hybrid search: Contextual BM25 and contextual embeddings混合搜索：上下文 BM25 和上下文嵌入</strong></h2><p>Anthropic 也采用了一种混合方法，通过使用相互排名将上下文嵌入搜索和上下文 BM25 搜索的检索结果合并，以产生最终的排名得分。</p><p><img src="https://cdn-images-1.readmedium.com/v2/resize:fit:800/1*IfSn7ytBnj6UGsxsQNkPeQ.png" alt="image.png"></p><p>这种混合方法的有效性还取决于在互逆排名过程中分配给语义搜索和 BM25 搜索结果的相对权重。这些相对权重允许您控制每种检索方法对最终排名的影响程度。如果您为语义搜索选择更高的权重，为 BM25 选择较低的权重。在语义搜索（权重更高）中表现良好的块可能在最终结果中排名更高。例如，如果我们把 BM25 的权重设置为 0.2，嵌入权重为 0.8，那么嵌入的物品在排名#20 时的总贡献与 BM25 中排名#5 的物品相同。然而，在 BM25 搜索中也表现良好的块块获得额外的提升。结合上下文嵌入和上下文 BM25 将前 20 个块检索失败率降低了 49%（5.7% → 2.9%）。</p><p><strong>RAG evaluation RAG 评估</strong></p><p>你的LLM再好也没用，如果你的搜索不行，找不到相关片段。添加更多内容到上下文窗口并不总是能提高结果。过多的无关内容可能导致模型产生幻觉或遗忘信息（阅读“迷失在中途”效应）。这就是为什么评估你的搜索与评估你的LLMs一样重要。</p><p>Ragas 是一个帮助你评估你的 RAG 管道的框架。其中两个指标（忠实度和答案相关性）专注于评估生成质量，而接下来的两个指标则评估搜索。</p><ul><li>上下文召回：在所有与查询相关的文档中，检索到了多少百分比？</li></ul><p>这衡量了检索内容中是否包含回答问题所需的所有相关信息。低语境回忆表明需要改进您的搜索算法。</p><ul><li>上下文精确度：在检索到的所有文档中，有多少百分比与查询相关？</li></ul><p>此指标评估检索到的内容中有多少被实际用于生成答案。它将上下文与答案进行比较，以查看答案是否确实来自上下文。它告诉你添加更多上下文是否真正有助于检索答案。所以，如果你得到 95%的准确率，但只有 10%的上下文精确度，那么添加更多上下文可能对提高答案质量没有帮助。目标是提供最精确、最相关的内容片段。</p><p>More on RAG evaluation can be found <a href="https://docs.ragas.io/en/v0.0.17/concepts/metrics/context_precision.html">here</a>.</p>]]></content>
      
      
      <categories>
          
          <category> LLM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LLM </tag>
            
            <tag> RAG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QGControl 图像获取</title>
      <link href="/2024/12/04/QGControl/"/>
      <url>/2024/12/04/QGControl/</url>
      
        <content type="html"><![CDATA[<h1 id="documentation">Documentation</h1><h1 id="图像相关">图像相关</h1><blockquote><p>📘 ImageProtocolManager是一个用于处理MAVLink图像传输协议的类，主要用于接收和处理来自光流相机等设备的图像数据。以下是其主要工作流程：</p></blockquote><h3 id="1-基本组成">1. 基本组成</h3><ul><li>两个主要成员变量：<ul><li><code>_imageHandshake</code>: 存储图像传输握手信息</li><li><code>_imageBytes</code>: 存储接收到的图像数据</li></ul></li></ul><h3 id="2-图像接收流程">2. 图像接收流程</h3><ol><li><strong>握手阶段</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> MAVLINK_MSG_ID_DATA_TRANSMISSION_HANDSHAKE:</span><br></pre></td></tr></table></figure><ul><li>接收<code>DATA_TRANSMISSION_HANDSHAKE</code>消息</li><li>清空之前的图像数据</li><li>记录新图像的基本信息（类型、宽度、高度等）</li></ul><ol><li><strong>数据传输阶段</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> MAVLINK_MSG_ID_ENCAPSULATED_DATA:</span><br></pre></td></tr></table></figure><ul><li>接收<code>ENCAPSULATED_DATA</code>消息</li><li>根据序号(<code>seqnr</code>)将数据放入正确的位置</li><li>通过<code>_imageHandshake.packets</code>计数追踪传输完成情况</li><li>当所有数据包接收完成时，发出<code>imageReady</code>信号</li></ul><ol><li><strong>图像获取</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">QImage <span class="title">ImageProtocolManager::getImage</span><span class="params">(<span class="type">void</span>)</span></span></span><br></pre></td></tr></table></figure><p>支持多种图像格式：</p><ul><li>RAW8U/RAW32U：构建PGM格式</li><li>BMP/JPEG/PGM/PNG：直接加载</li><li>返回QImage对象</li></ul><h3 id="3-使用示例">3. 使用示例</h3><p>假设您要在代码中使用这个类：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建实例</span></span><br><span class="line">ImageProtocolManager* imageManager = <span class="keyword">new</span> <span class="built_in">ImageProtocolManager</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接信号</span></span><br><span class="line"><span class="built_in">connect</span>(imageManager, &amp;ImageProtocolManager::imageReady, <span class="keyword">this</span>, [=]() &#123;</span><br><span class="line">    QImage image = imageManager-&gt;<span class="built_in">getImage</span>();</span><br><span class="line">    <span class="comment">// 处理接收到的图像</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收MAVLink消息时</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">onMavlinkMessageReceived</span><span class="params">(<span class="type">mavlink_message_t</span> message)</span> </span>&#123;</span><br><span class="line">    imageManager-&gt;<span class="built_in">mavlinkMessageReceived</span>(message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-错误处理">4. 错误处理</h3><p>该类包含多个错误检查：</p><ul><li>检查是否有未完成的前序传输</li><li>验证数据包序号是否有效</li><li>检查图像数据完整性</li><li>支持的图像格式验证</li></ul><h3 id="5-注意事项">5. 注意事项</h3><ul><li>图像传输必须按照顺序：先握手，后数据</li><li>在调用<code>getImage()</code>之前确保图像传输完成</li><li>支持多种图像格式，但对于RAW格式需要特殊处理</li></ul><p>这个类的设计遵循了MAVLink图像传输协议规范</p><ol><li><strong>ImageProtocolManager的局限性</strong></li></ol><ul><li>ImageProtocolManager只是一个接收和处理图像数据的工具</li><li>它不能主动触发拍照操作</li><li>它只负责接收和处理MAVLink传输的图像数据</li></ul><ol><li><strong>正确的拍照流程</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">PhotoCapture</span> : <span class="keyword">public</span> QObject &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">PhotoCapture</span>(Vehicle* vehicle) &#123;</span><br><span class="line">        <span class="comment">// 1. 创建相机控制器（用于触发拍照）</span></span><br><span class="line">        _cameraControl = vehicle-&gt;<span class="built_in">cameraManager</span>()-&gt;<span class="built_in">currentCameraInstance</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 创建图像接收器（用于接收图像数据）</span></span><br><span class="line">        _imageManager = <span class="keyword">new</span> <span class="built_in">ImageProtocolManager</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 连接vehicle的消息到图像管理器</span></span><br><span class="line">        <span class="built_in">connect</span>(vehicle, &amp;Vehicle::mavlinkMessageReceived,</span><br><span class="line">                _imageManager, &amp;ImageProtocolManager::mavlinkMessageReceived);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. 处理接收到的图像</span></span><br><span class="line">        <span class="built_in">connect</span>(_imageManager, &amp;ImageProtocolManager::imageReady,</span><br><span class="line">                <span class="keyword">this</span>, &amp;PhotoCapture::handleImageReceived);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">capturePhoto</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (_cameraControl) &#123;</span><br><span class="line">            _cameraControl-&gt;<span class="built_in">takePhoto</span>();  <span class="comment">// 触发拍照</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">handleImageReceived</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        QImage image = _imageManager-&gt;<span class="built_in">getImage</span>();</span><br><span class="line">        <span class="keyword">if</span> (!image.<span class="built_in">isNull</span>()) &#123;</span><br><span class="line">            QString filename = <span class="built_in">QString</span>(<span class="string">&quot;photo_%1.jpg&quot;</span>)</span><br><span class="line">                .<span class="built_in">arg</span>(QDateTime::<span class="built_in">currentDateTime</span>().<span class="built_in">toString</span>(<span class="string">&quot;yyyyMMdd_hhmmss&quot;</span>));</span><br><span class="line">            image.<span class="built_in">save</span>(filename);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QGCCameraControl* _cameraControl;</span><br><span class="line">    ImageProtocolManager* _imageManager;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>为什么需要相机控制</strong></li></ol><ul><li>相机需要接收拍照命令才会开始拍照</li><li>相机控制器处理相机的状态和参数设置</li><li>相机控制器提供拍照反馈和状态更新</li></ul><ol><li><strong>完整的最小实现</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 最简单的拍照实现</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MinimalPhotoCapture</span> : <span class="keyword">public</span> QObject &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MinimalPhotoCapture</span>(Vehicle* vehicle) : _vehicle(vehicle) &#123;</span><br><span class="line">        <span class="comment">// 设置图像接收器</span></span><br><span class="line">        _imageManager = <span class="keyword">new</span> <span class="built_in">ImageProtocolManager</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 连接必要的信号</span></span><br><span class="line">        <span class="built_in">connect</span>(_vehicle, &amp;Vehicle::mavlinkMessageReceived,</span><br><span class="line">                _imageManager, &amp;ImageProtocolManager::mavlinkMessageReceived);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">connect</span>(_imageManager, &amp;ImageProtocolManager::imageReady,</span><br><span class="line">                <span class="keyword">this</span>, &amp;MinimalPhotoCapture::onImageReady);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">takePhoto</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 必须通过相机控制发送拍照命令</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">auto</span> camera = _vehicle-&gt;<span class="built_in">cameraManager</span>()-&gt;<span class="built_in">currentCameraInstance</span>()) &#123;</span><br><span class="line">            camera-&gt;<span class="built_in">takePhoto</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">onImageReady</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 保存接收到的图像</span></span><br><span class="line">        QImage image = _imageManager-&gt;<span class="built_in">getImage</span>();</span><br><span class="line">        <span class="keyword">if</span> (!image.<span class="built_in">isNull</span>()) &#123;</span><br><span class="line">            image.<span class="built_in">save</span>(<span class="string">&quot;captured_photo.jpg&quot;</span>);</span><br><span class="line">            <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;Photo saved successfully&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Vehicle* _vehicle;</span><br><span class="line">    ImageProtocolManager* _imageManager;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>使用示例</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用方法</span></span><br><span class="line">Vehicle* vehicle = ...;  <span class="comment">// 获取vehicle实例</span></span><br><span class="line">MinimalPhotoCapture* photoCapture = <span class="keyword">new</span> <span class="built_in">MinimalPhotoCapture</span>(vehicle);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拍照</span></span><br><span class="line">photoCapture-&gt;<span class="built_in">takePhoto</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所以总结来说：</p><ul><li>不能只使用ImageProtocolManager来完成拍照</li><li>需要通过相机控制器发送拍照命令</li><li>ImageProtocolManager负责接收和处理图像数据</li><li>两者配合才能完成完整的拍照流程</li></ul><p>建议：</p><ol><li>如果只需要简单拍照功能，可以使用上面的MinimalPhotoCapture实现</li><li>如果需要更多相机控制功能（如设置参数、模式等），则使用完整的相机控制系统</li><li>始终需要同时使用相机控制和ImageProtocolManager</li></ol><h1 id="多智能体">多智能体</h1><p>MultiVehicleManager是一个核心管理类，负责管理和协调多个车辆(Vehicle)。</p><h3 id="1-核心功能">1. 核心功能</h3><ol><li><strong>车辆管理</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MultiVehicleManager</span> : <span class="keyword">public</span> QGCTool &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QList&lt;Vehicle*&gt;    _vehicles;           <span class="comment">// 管理所有车辆</span></span><br><span class="line">    Vehicle*           _activeVehicle;      <span class="comment">// 当前活动车辆</span></span><br><span class="line">    <span class="type">bool</span>              _activeVehicleAvailable;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>通信管理</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> MultiVehicleManager::_sendGCSHeartbeat(<span class="type">void</span>) &#123;</span><br><span class="line">    <span class="comment">// 向所有连接的车辆发送心跳包</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;sharedLinks.<span class="built_in">count</span>(); i++) &#123;</span><br><span class="line">        LinkInterface* link = sharedLinks[i].<span class="built_in">get</span>();</span><br><span class="line">        <span class="keyword">if</span> (link-&gt;<span class="built_in">isConnected</span>()) &#123;</span><br><span class="line">            <span class="type">mavlink_message_t</span> message;</span><br><span class="line">            <span class="built_in">mavlink_msg_heartbeat_pack_chan</span>(...);</span><br><span class="line">            link-&gt;<span class="built_in">writeBytesThreadSafe</span>((<span class="type">const</span> <span class="type">char</span>*)buffer, len);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>编队控制协调</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> MultiVehicleManager::_mainWork(<span class="type">void</span>) &#123;</span><br><span class="line">    <span class="comment">// 处理不同编队模式</span></span><br><span class="line">    <span class="keyword">switch</span>(bs_multi_model) &#123;</span><br><span class="line">        <span class="keyword">case</span> Single:</span><br><span class="line">            <span class="comment">// 单船模式</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> Multi8:</span><br><span class="line">            <span class="comment">// 多船编队模式</span></span><br><span class="line">            <span class="keyword">if</span>(multi_start_flag) &#123;</span><br><span class="line">                <span class="comment">// 收集所有船只信息</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i&lt;_vehicles.<span class="built_in">count</span>(); i++) &#123;</span><br><span class="line">                    Vehicle *v = <span class="built_in">qobject_cast</span>&lt;Vehicle*&gt;(_vehicles[i]);</span><br><span class="line">                    LBAgent agent;</span><br><span class="line">                    agent.id = v-&gt;<span class="built_in">id</span>();</span><br><span class="line">                    agent.lat = v-&gt;lat;</span><br><span class="line">                    agent.lon = v-&gt;lon;</span><br><span class="line">                    <span class="comment">// ... 其他参数</span></span><br><span class="line">                    _allagent.<span class="built_in">push_back</span>(agent);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 执行编队控制</span></span><br><span class="line">                vector&lt;LBActor&gt; all_actor =</span><br><span class="line">                    _multiAgentController.<span class="built_in">FaultFormationControl2</span>(_allagent, formation_gap);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 分发控制指令</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i&lt;_vehicles.<span class="built_in">count</span>(); i++) &#123;</span><br><span class="line">                    Vehicle *v = <span class="built_in">qobject_cast</span>&lt;Vehicle*&gt;(_vehicles[i]);</span><br><span class="line">                    v-&gt;<span class="built_in">receiveMultiParameters</span>(control_data);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-关键职责">2. 关键职责</h3><ol><li><strong>状态管理</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 管理各种控制模式标志</span></span><br><span class="line"><span class="type">bool</span> _manipulate_connect_flag;  <span class="comment">// 操控模式</span></span><br><span class="line"><span class="type">bool</span> _logic_connect_flag;       <span class="comment">// 逻辑模式</span></span><br><span class="line"><span class="type">bool</span> _virtual_connect_flag;     <span class="comment">// 虚拟模式</span></span><br><span class="line"><span class="type">bool</span> multi_start_flag;          <span class="comment">// 编队启动标志</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>任务协调</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MultiVehicleManager::setMissionItems</span><span class="params">(<span class="type">const</span> QList&lt;MissionItem*&gt;&amp; items)</span> </span>&#123;</span><br><span class="line">    _allMissionItems = items;</span><br><span class="line">    set_mission_flag = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通知编队控制器</span></span><br><span class="line">    vector&lt;LBMission&gt; missions;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i&lt;_allMissionItems.<span class="built_in">count</span>(); i++) &#123;</span><br><span class="line">        MissionItem* item = _allMissionItems[i];</span><br><span class="line">        LBMission mis;</span><br><span class="line">        mis.lat = item-&gt;<span class="built_in">param5</span>();</span><br><span class="line">        mis.lon = item-&gt;<span class="built_in">param6</span>();</span><br><span class="line">        missions.<span class="built_in">push_back</span>(mis);</span><br><span class="line">    &#125;</span><br><span class="line">    _multiAgentController.<span class="built_in">MissionGet</span>(missions);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>模式切换管理</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MultiVehicleManager::switchControlMode</span><span class="params">(ControlMode mode)</span> </span>&#123;</span><br><span class="line">    bs_control_model = mode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 断开其他模式连接</span></span><br><span class="line">    <span class="keyword">if</span>(_manipulate_connect_flag) <span class="built_in">manipulateDisconnect</span>();</span><br><span class="line">    <span class="keyword">if</span>(_logic_connect_flag) <span class="built_in">logicDisconnect</span>();</span><br><span class="line">    <span class="keyword">if</span>(_virtual_connect_flag) <span class="built_in">virtualDisconnect</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 建立新模式连接</span></span><br><span class="line">    <span class="keyword">switch</span>(mode) &#123;</span><br><span class="line">        <span class="keyword">case</span> Manipulate:</span><br><span class="line">            <span class="built_in">manipulateConnect</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> Logic:</span><br><span class="line">            <span class="built_in">logicConnect</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> Virtual:</span><br><span class="line">            <span class="built_in">virtualConnect</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-使用示例">3. 使用示例</h3><ol><li><strong>初始化多船系统</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建管理器</span></span><br><span class="line">MultiVehicleManager* manager = <span class="keyword">new</span> <span class="built_in">MultiVehicleManager</span>(app, toolbox);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置编队模式</span></span><br><span class="line">manager-&gt;<span class="built_in">setMultiModel</span>(Multi8);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置控制模式</span></span><br><span class="line">manager-&gt;<span class="built_in">setControlModel</span>(Manipulate);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>执行编队任务</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置任务点</span></span><br><span class="line">QList&lt;MissionItem*&gt; missionItems;</span><br><span class="line"><span class="comment">// ... 添加任务点</span></span><br><span class="line">manager-&gt;<span class="built_in">setMissionItems</span>(missionItems);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动编队</span></span><br><span class="line">manager-&gt;<span class="built_in">startMultiFormation</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-重要接口">4. 重要接口</h3><ol><li><strong>车辆管理接口</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Vehicle* <span class="title">getVehicleById</span><span class="params">(<span class="type">int</span> vehicleId)</span></span>;</span><br><span class="line"><span class="function">Vehicle* <span class="title">activeVehicle</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">QList&lt;Vehicle*&gt; <span class="title">vehicles</span><span class="params">()</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>控制接口</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">setMultiModel</span><span class="params">(MultiModel model)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setControlModel</span><span class="params">(ControlModel model)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">startMultiFormation</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">stopMultiFormation</span><span class="params">()</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>状态监控接口</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isMultiFormationActive</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isVehicleAvailable</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">vehicleAdded</span><span class="params">(Vehicle* vehicle)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">vehicleRemoved</span><span class="params">(Vehicle* vehicle)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-注意事项">5. 注意事项</h3><ol><li>确保所有车辆都已正确连接和初始化</li><li>在切换模式前检查当前状态</li><li>处理通信延迟和丢失情况</li><li>保持心跳包的定期发送</li><li>正确处理异常情况和错误恢复</li></ol><p>MultiVehicleManager是整个多车辆系统的中枢，它协调各个子系统的工作，确保整个系统的正常运行。在进行编队控制时，它扮演着&quot;指挥官&quot;的角色，负责协调各个车辆的行动。</p><h1 id="编队控制">编队控制</h1><h3 id="1-核心类的功能">1. 核心类的功能</h3><ol><li><strong>MultiAgentFormation</strong></li></ol><ul><li>作为编队控制的主要接口类</li><li>管理不同类型的编队控制器</li><li>提供多种编队模式的切换功能</li></ul><ol><li><strong>VSFormationControl</strong></li></ol><ul><li>实现基础的编队控制算法</li><li>支持多种编队形状（方形、C字型、纵排、三角形等）</li><li>处理目标点计算和速度控制</li></ul><h3 id="2-编队模式">2. 编队模式</h3><p>从代码中可以看到多种编队模式：</p><ol><li><strong>基础编队模式</strong> (VSFormationControl::VSFormationCalculate)</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(formationModel) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>: <span class="comment">// 方形编队</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>: <span class="comment">// C字型编队</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>: <span class="comment">// 纵排编队</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>: <span class="comment">// 三角形编队</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>特殊编队模式</strong></li></ol><ul><li>HUSTMoveFormation: 移动编队</li><li>HUSTSearchFormation: 搜索编队</li><li>HUSTExpelFormation: 驱离编队</li><li>FaultFormation: 容错编队</li></ul><h3 id="3-编队切换方法">3. 编队切换方法</h3><p>要完成编队切换，需要：</p><ol><li><strong>设置编队模式</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在MultiVehicleManager中</span></span><br><span class="line"><span class="keyword">if</span>(bs_multi_model == Multi3) &#123;  <span class="comment">// 选择编队模式</span></span><br><span class="line">    <span class="comment">// 设置编队参数</span></span><br><span class="line">    control_data.work_model = Mission;</span><br><span class="line">    control_data.formation_flag = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用对应的编队控制器</span></span><br><span class="line">    all_missions = _multiAgentController.<span class="built_in">HUSTMoveFormationControl</span>(_allagent, formation_gap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>切换步骤</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 创建编队控制器</span></span><br><span class="line">MultiAgentFormation _multiAgentController;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 设置任务点</span></span><br><span class="line">vector&lt;LBMission&gt; missions;</span><br><span class="line"><span class="comment">// 添加任务点...</span></span><br><span class="line">_multiAgentController.<span class="built_in">MissionGet</span>(missions);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 选择编队模式并执行</span></span><br><span class="line"><span class="comment">// 例如切换到移动编队:</span></span><br><span class="line">vector&lt;vector&lt;LBMission&gt;&gt; all_missions = _multiAgentController.<span class="built_in">HUSTMoveFormationControl</span>(_allagent, formation_gap);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或切换到搜索编队:</span></span><br><span class="line">all_missions = _multiAgentController.<span class="built_in">HUSTSearchFormationControl</span>(_allagent, formation_gap);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-编队切换的关键参数">4. 编队切换的关键参数</h3><ol><li><strong>控制标志</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">control_data.work_model    <span class="comment">// 工作模式</span></span><br><span class="line">control_data.work_state   <span class="comment">// 工作状态</span></span><br><span class="line">control_data.formation_flag <span class="comment">// 编队标志</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>编队参数</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">formation_gap  <span class="comment">// 编队间距</span></span><br><span class="line">refreshFlag    <span class="comment">// 刷新标志</span></span><br><span class="line">multi_start_flag <span class="comment">// 编队启动标志</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-实际使用示例">5. 实际使用示例</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 切换到移动编队</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">switchToMoveFormation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 设置控制参数</span></span><br><span class="line">    control_data.work_model = Mission;</span><br><span class="line">    control_data.work_state = USVRun;</span><br><span class="line">    control_data.formation_flag = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 设置任务点</span></span><br><span class="line">    <span class="keyword">if</span>(set_mission_flag) &#123;</span><br><span class="line">        vector&lt;LBMission&gt; missions;</span><br><span class="line">        <span class="comment">// 添加任务点...</span></span><br><span class="line">        _multiAgentController.<span class="built_in">MissionGet</span>(missions);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 执行编队控制</span></span><br><span class="line">    vector&lt;vector&lt;LBMission&gt;&gt; all_missions =</span><br><span class="line">        _multiAgentController.<span class="built_in">HUSTMoveFormationControl</span>(_allagent, formation_gap);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4. 为每个船只分配任务</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; _vehicles.<span class="built_in">count</span>(); i++) &#123;</span><br><span class="line">        Vehicle *v = <span class="built_in">qobject_cast</span>&lt;Vehicle*&gt;(_vehicles[i]);</span><br><span class="line">        <span class="keyword">if</span>(all_missions.<span class="built_in">size</span>() &gt; i) &#123;</span><br><span class="line">            v-&gt;<span class="built_in">MissionGet</span>(<span class="built_in">convertToMissionItems</span>(all_missions[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        v-&gt;<span class="built_in">receiveMultiParameters</span>(control_data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="直接通过grabimage-方法实现">直接通过grabImage()方法实现</h1><p>可以直接使用VideoManager的grabImage()方法来获取图片。这个方法相对简单,不需要直接操作摄像头控制。</p><h3 id="1-grabimage-方法分析">1. grabImage() 方法分析</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">VideoManager::grabImage</span><span class="params">(<span class="type">const</span> QString&amp; imageFile)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 1. 检查视频接收器是否可用</span></span><br><span class="line">    <span class="keyword">if</span> (!_videoReceiver[<span class="number">0</span>] &amp;&amp; !_videoReceiver[<span class="number">2</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 设置保存路径</span></span><br><span class="line">    <span class="keyword">if</span> (imageFile.<span class="built_in">isEmpty</span>()) &#123;</span><br><span class="line">        <span class="comment">// 使用默认路径和文件名</span></span><br><span class="line">        _imageFile = <span class="built_in">qgcApp</span>()-&gt;<span class="built_in">toolbox</span>()-&gt;<span class="built_in">settingsManager</span>()-&gt;<span class="built_in">appSettings</span>()-&gt;<span class="built_in">photoSavePath</span>();</span><br><span class="line">        _imageFile += <span class="string">&quot;/&quot;</span> + QDateTime::<span class="built_in">currentDateTime</span>().<span class="built_in">toString</span>(<span class="string">&quot;yyyy-MM-dd_hh.mm.ss.zzz&quot;</span>) + <span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        _imageFile = imageFile;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">emit <span class="title">imageFileChanged</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 捕获图像</span></span><br><span class="line">    _videoReceiver[<span class="number">0</span>]-&gt;<span class="built_in">takeScreenshot</span>(_imageFile);</span><br><span class="line">    _videoReceiver[<span class="number">2</span>]-&gt;<span class="built_in">takeScreenshot</span>(_imageFile);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-使用示例">2. 使用示例</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在MultiVehicleManager中添加拍照方法</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MultiVehicleManager::captureImage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    VideoManager* videoManager = <span class="built_in">qgcApp</span>()-&gt;<span class="built_in">toolbox</span>()-&gt;<span class="built_in">videoManager</span>();</span><br><span class="line">    <span class="keyword">if</span> (videoManager) &#123;</span><br><span class="line">        <span class="comment">// 方式1: 使用默认路径</span></span><br><span class="line">        videoManager-&gt;<span class="built_in">grabImage</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方式2: 指定保存路径</span></span><br><span class="line">        QString customPath = <span class="string">&quot;path/to/your/photo.jpg&quot;</span>;</span><br><span class="line">        videoManager-&gt;<span class="built_in">grabImage</span>(customPath);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-使用注意事项">4. 使用注意事项</h3><ol><li><strong>确保视频流已启动</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!videoManager-&gt;<span class="built_in">streaming</span>()) &#123;</span><br><span class="line">    videoManager-&gt;<span class="built_in">startVideo</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>检查保存路径</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">QString photoPath = <span class="built_in">qgcApp</span>()-&gt;<span class="built_in">toolbox</span>()-&gt;<span class="built_in">settingsManager</span>()-&gt;<span class="built_in">appSettings</span>()-&gt;<span class="built_in">photoSavePath</span>();</span><br><span class="line"><span class="function">QDir <span class="title">dir</span><span class="params">(photoPath)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!dir.<span class="built_in">exists</span>()) &#123;</span><br><span class="line">    dir.<span class="built_in">mkpath</span>(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>处理错误情况</strong></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">connect</span>(videoManager, &amp;VideoManager::imageFileChanged, <span class="keyword">this</span>, [=]() &#123;</span><br><span class="line">    QString imageFile = videoManager-&gt;<span class="built_in">imageFile</span>();</span><br><span class="line">    <span class="keyword">if</span> (QFile::<span class="built_in">exists</span>(imageFile)) &#123;</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;Image saved successfully:&quot;</span> &lt;&lt; imageFile;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">qWarning</span>() &lt;&lt; <span class="string">&quot;Failed to save image&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-建议的完整实现">5. 建议的完整实现</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">PhotoCapture</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">PhotoCapture</span>() &#123;</span><br><span class="line">        _videoManager = <span class="built_in">qgcApp</span>()-&gt;<span class="built_in">toolbox</span>()-&gt;<span class="built_in">videoManager</span>();</span><br><span class="line">        <span class="built_in">connect</span>(_videoManager, &amp;VideoManager::imageFileChanged,</span><br><span class="line">                <span class="keyword">this</span>, &amp;PhotoCapture::_handleImageCaptured);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">capturePhoto</span><span class="params">(<span class="type">const</span> QString&amp; customPath = QString())</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!_videoManager) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 确保视频流已启动</span></span><br><span class="line">        <span class="keyword">if</span> (!_videoManager-&gt;<span class="built_in">streaming</span>()) &#123;</span><br><span class="line">            _videoManager-&gt;<span class="built_in">startVideo</span>();</span><br><span class="line">            <span class="comment">// 等待视频流启动</span></span><br><span class="line">            QTimer::<span class="built_in">singleShot</span>(<span class="number">1000</span>, <span class="keyword">this</span>, [=]() &#123;</span><br><span class="line">                _videoManager-&gt;<span class="built_in">grabImage</span>(customPath);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            _videoManager-&gt;<span class="built_in">grabImage</span>(customPath);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">void</span> _handleImageCaptured() &#123;</span><br><span class="line">        QString imageFile = _videoManager-&gt;<span class="built_in">imageFile</span>();</span><br><span class="line">        <span class="keyword">if</span> (QFile::<span class="built_in">exists</span>(imageFile)) &#123;</span><br><span class="line">            <span class="function">emit <span class="title">photoCaptured</span><span class="params">(imageFile)</span></span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            emit <span class="built_in">photoCaptureFailed</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    VideoManager* _videoManager;</span><br><span class="line"></span><br><span class="line">signals:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">photoCaptured</span><span class="params">(<span class="type">const</span> QString&amp; path)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">photoCaptureFailed</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这种方式比直接控制相机要简单得多,适合只需要获取当前视频画面的场景。</p>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LangGraph 核心概念</title>
      <link href="/2024/11/25/LangGraph0/"/>
      <url>/2024/11/25/LangGraph0/</url>
      
        <content type="html"><![CDATA[<h1 id="核心概念">核心概念</h1><p>LangGraph 的核心是将代理工作流程建模为图表。您可以使用三个关键组件定义代理的行为：</p><ol><li><a href="https://langchain-ai.github.io/langgraph/concepts/low_level/#state"><code>State</code></a>：表示应用程序当前快照的共享数据结构。它可以是任何 Python 类型，但通常是<code>TypedDict</code>或 Pydantic <code>BaseModel</code>。</li><li><a href="https://langchain-ai.github.io/langgraph/concepts/low_level/#nodes"><code>Nodes</code></a>：对代理逻辑进行编码的 Python 函数。它们接收当前值<code>State</code>作为输入，执行一些计算或副作用，并返回更新的<code>State</code>。</li><li>[<code>Edges](https://langchain-ai.github.io/langgraph/concepts/low_level/#edges)Node</code>：根据当前情况确定下一步执行哪个操作的 Python 函数<code>State</code>。它们可以是条件分支或固定转换。</li></ol><p>通过组合<code>Nodes</code>和<code>Edges</code>，您可以创建复杂的循环工作流，使工作流随时间推移而演变<code>State</code>。然而，真正的强大之处在于 LangGraph 如何管理工作流<code>State</code>。需要强调的是：<code>Nodes</code>和<code>Edges</code>只不过是 Python 函数 - 它们可以包含 LLM 或只是好的 Python 代码。</p><h2 id="状态">状态<a href="https://langchain-ai.github.io/langgraph/concepts/low_level/#state">¶</a></h2><p>定义图形时要做的第一件事是定义<code>State</code>图形的。<code>State</code>由<a href="https://langchain-ai.github.io/langgraph/concepts/low_level/#schema">图形的模式</a>以及指定如何将更新应用于状态的<a href="https://langchain-ai.github.io/langgraph/concepts/low_level/#reducers"><code>reducer</code>函数</a><code>State</code>组成。模式将是图形中所有<code>Nodes</code>和的输入模式<code>Edges</code>，可以是<code>TypedDict</code>或<code>Pydantic</code>模型。</p><p>输入输出可以是不同的类型</p><p>首先创建一个<code>StateGraph</code>。<code>StateGraph</code>对象将我们的聊天机器人的结构定义为“状态图”。我们将添加<code>nodes</code>以表示我们的聊天机器人可以调用的 llm 和函数，并<code>edges</code>指定机器人应如何在这些函数之间转换。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Annotated</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> typing_extensions <span class="keyword">import</span> TypedDict</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> langgraph.graph <span class="keyword">import</span> StateGraph, START, END</span><br><span class="line"><span class="keyword">from</span> langgraph.graph.message <span class="keyword">import</span> add_messages</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">State</span>(<span class="title class_ inherited__">TypedDict</span>):</span><br><span class="line">    <span class="comment"># Messages have the type &quot;list&quot;. The `add_messages` function</span></span><br><span class="line">    <span class="comment"># in the annotation defines how this state key should be updated</span></span><br><span class="line">    <span class="comment"># (in this case, it appends messages to the list, rather than overwriting them)</span></span><br><span class="line">    messages: Annotated[<span class="built_in">list</span>, add_messages]</span><br><span class="line"></span><br><span class="line">graph_builder = StateGraph(State)</span><br></pre></td></tr></table></figure><p>Reducer 是理解节点更新如何应用于<code>State</code> 的关键。 中的每个键<code>State</code>都有自己独立的 Reducer 函数。 如果未明确指定 Reducer 函数，则假定对该键的所有更新都应覆盖它。 Reducer 有几种不同的类型，首先是默认类型的 Reducer：</p><h3 id="默认-reducer"><strong>默认 Reducer<a href="https://langchain-ai.github.io/langgraph/concepts/low_level/#default-reducer">¶</a></strong></h3><p>这两个示例展示了如何使用默认的 Reducer：</p><p><strong>示例 A：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing_extensions <span class="keyword">import</span> TypedDict</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">State</span>(<span class="title class_ inherited__">TypedDict</span>):</span><br><span class="line">    foo: <span class="built_in">int</span></span><br><span class="line">    bar: <span class="built_in">list</span>[<span class="built_in">str</span>]</span><br></pre></td></tr></table></figure><p>在此示例中，未为任何键指定任何 Reducer 函数。我们假设图的输入是<code>&#123;&quot;foo&quot;: 1, &quot;bar&quot;: [&quot;hi&quot;]&#125;</code>。然后我们假设第一个<code>Node</code>返回<code>&#123;&quot;foo&quot;: 2&#125;</code>。这被视为对状态的更新。请注意，<code>Node</code>不需要返回整个<code>State</code>架构 - 只需返回更新。应用此更新后，<code>State</code>将是<code>&#123;&quot;foo&quot;: 2, &quot;bar&quot;: [&quot;hi&quot;]&#125;</code>。如果第二个节点返回，<code>&#123;&quot;bar&quot;: [&quot;bye&quot;]&#125;</code>则将<code>State</code>是<code>&#123;&quot;foo&quot;: 2, &quot;bar&quot;: [&quot;bye&quot;]&#125;</code></p><p><strong>示例 B：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Annotated</span><br><span class="line"><span class="keyword">from</span> typing_extensions <span class="keyword">import</span> TypedDict</span><br><span class="line"><span class="keyword">from</span> operator <span class="keyword">import</span> add</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">State</span>(<span class="title class_ inherited__">TypedDict</span>):</span><br><span class="line">    foo: <span class="built_in">int</span></span><br><span class="line">    bar: Annotated[<span class="built_in">list</span>[<span class="built_in">str</span>], add]</span><br></pre></td></tr></table></figure><p>在这个例子中，我们使用了Annotated类型为第二个键（bar）指定一个归约函数（operator.add）。注意，第一个键保持不变。假设图的输入是{“foo”: 1, “bar”: [“hi”]}。然后假设第一个节点返回{“foo”: 2}。这被视为对状态的更新。请注意，节点不需要返回整个State模式——只需更新即可。在应用此更新后，状态将变为{“foo”: 2, “bar”: [“hi”]}。如果第二个节点返回{“bar”: [“bye”]}，那么状态将变为{“foo”: 2, “bar”: [“hi”, “bye”]}。这里要注意的是，通过将两个列表相加来更新bar键。</p><p>add_messages(left: Messages, right: Messages) -&gt; Messages ¶<br>合并两条消息列表，通过ID更新现有消息。</p><p>默认情况下，这确保状态是“仅追加”，除非新消息与现有消息具有相同的ID。</p><p>参数：</p><p>left (Messages) – 基础消息列表。<br>right (Messages) – 要合并到基础列表中的消息（或单个消息）列表。<br>返回值：</p><p>Messages – 一个新的消息列表，其中包含从right合并到left的消息。<br>Messages – 如果right中的一条信息与left中的一条信息具有相同的ID，<br>Messages – 则来自right的信息将替换来自left的信息。</p><h2 id="节点">节点<a href="https://langchain-ai.github.io/langgraph/concepts/low_level/#nodes">¶</a></h2><p>在 LangGraph 中，节点通常是 Python 函数（sync 或<code>async</code>），其中<strong>第一个</strong>位置参数是<a href="https://langchain-ai.github.io/langgraph/concepts/low_level/#state">状态</a>，并且（可选）<strong>第二个</strong>位置参数是“config”，包含可选的<a href="https://langchain-ai.github.io/langgraph/concepts/low_level/#configuration">可配置参数</a>（例如<code>thread_id</code>）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain_anthropic <span class="keyword">import</span> ChatAnthropic</span><br><span class="line"></span><br><span class="line">llm = ChatAnthropic(model=<span class="string">&quot;claude-3-5-sonnet-20240620&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">chatbot</span>(<span class="params">state: State</span>):</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;messages&quot;</span>: [llm.invoke(state[<span class="string">&quot;messages&quot;</span>])]&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># The first argument is the unique node name</span></span><br><span class="line"><span class="comment"># The second argument is the function or object that will be called whenever</span></span><br><span class="line"><span class="comment"># the node is used.</span></span><br><span class="line">graph_builder.add_node(<span class="string">&quot;chatbot&quot;</span>, chatbot)</span><br></pre></td></tr></table></figure><p>在后台，函数被转换为<a href="https://api.python.langchain.com/en/latest/runnables/langchain_core.runnables.base.RunnableLambda.html#langchain_core.runnables.base.RunnableLambda">RunnableLambda</a></p><p><code>Runnable</code> 对象的特点包括：</p><ol><li><strong>可执行性</strong>：<code>Runnable</code> 对象可以被调用来执行某些操作。</li><li><strong>类型多样性</strong>：可以是同步函数、异步函数、生成器函数、异步生成器函数等。</li><li><strong>工具绑定</strong>：可以绑定工具来扩展其功能。</li><li><strong>链式操作</strong>：可以通过管道操作符 <code>|</code> 将多个 <code>Runnable</code> 对象组合在一起。</li><li><strong>配置支持</strong>：可以接受配置参数来定制其行为。</li></ol><p>以下是一个示例代码，展示了如何定义和使用 <code>Runnable</code> 对象：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain_core.runnables <span class="keyword">import</span> Runnable, RunnableLambda</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Callable</span>, <span class="type">Any</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个简单的同步函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">simple_function</span>(<span class="params"><span class="built_in">input</span>: <span class="type">Any</span></span>) -&gt; <span class="type">Any</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;Processed: <span class="subst">&#123;<span class="built_in">input</span>&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将函数转换为 Runnable 对象</span></span><br><span class="line">simple_runnable = RunnableLambda(simple_function)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用 Runnable 对象</span></span><br><span class="line">result = simple_runnable.invoke(<span class="string">&quot;Test Input&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)  <span class="comment"># 输出: Processed: Test Input</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个示例展示了如何将一个简单的函数转换为 <code>Runnable</code> 对象，并调用它来处理输入。</p><p>补充</p><h3 id="同步函数">同步函数</h3><p>同步函数是最常见的函数类型，它们按顺序执行代码，直到完成所有操作。调用同步函数时，程序会等待函数执行完毕后再继续执行后续代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sync_function</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;This is a synchronous function&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="异步函数">异步函数</h3><p>异步函数使用 <code>async</code> 关键字定义，允许在执行过程中暂停并等待其他操作完成（例如 I/O 操作），而不阻塞整个程序。调用异步函数时，返回一个 <code>coroutine</code> 对象，需要使用 <code>await</code> 关键字等待其完成。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">async_function</span>():</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;This is an asynchronous function&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="生成器函数">生成器函数</h3><p>生成器函数使用 <code>yield</code> 关键字返回一个生成器对象，可以在迭代过程中逐步生成值，而不是一次性返回所有值。生成器函数在每次 <code>yield</code> 时暂停，并在下一次迭代时继续执行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">generator_function</span>():</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">&quot;This is&quot;</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="string">&quot;a generator&quot;</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="string">&quot;function&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="异步生成器函数">异步生成器函数</h3><p>异步生成器函数结合了异步函数和生成器函数的特性，使用 <code>async</code> 和 <code>yield</code> 关键字定义。它们可以在异步迭代过程中逐步生成值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">async_generator_function</span>():</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">&quot;This is&quot;</span></span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">&quot;an asynchronous&quot;</span></span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">&quot;generator function&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="边">边<a href="https://langchain-ai.github.io/langgraph/concepts/low_level/#edges">¶</a></h2><p>边定义了逻辑的路由方式以及图决定停止的方式。这是代理如何工作以及不同节点如何相互通信的重要组成部分。有几种主要的边类型：</p><ul><li>普通边：直接从一个节点到下一个节点。</li><li>条件边：调用一个函数来确定下一步要去哪个节点。</li><li>入口点：用户输入到达时首先调用哪个节点。</li><li>条件入口点：调用一个函数来确定当用户输入到达时首先调用哪个节点。</li></ul><p>一个节点可以有多个传出边。如果一个节点有多个传出边，则<strong>所有</strong>这些目标节点都将作为下一个超级步骤的一部分并行执行。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> LLM </tag>
            
            <tag> LangGraph </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐系统学习笔记：召回</title>
      <link href="/2024/10/04/recsys1/"/>
      <url>/2024/10/04/recsys1/</url>
      
        <content type="html"><![CDATA[<h1 id="推荐系统学习笔记：召回">推荐系统学习笔记：召回</h1><h1 id="1-基于物品的协同过滤itemcf">1 基于物品的协同过滤ItemCF</h1><h2 id="1-1-itemcf的原理">1.1 ItemCF的原理</h2><p><a href="https://picture.fanfer.top/recsys/image_JSfOuoA4D3.png"><img src="https://picture.fanfer.top/recsys/image_JSfOuoA4D3.png" alt=""></a></p><p>推荐系统如何知道《笑傲江湖》与《鹿鼎记》相似？</p><ol><li>看过《笑傲江湖》的用户也看过《⿅⿍记》</li><li>给《笑傲江湖》好评的用户也给《⿅⿍记》好评</li></ol><h2 id="1-2-itemcf的实现">1.2 ItemCF的实现</h2><p><a href="https://picture.fanfer.top/recsys/image_PpDTNAaz9C.png"><img src="https://picture.fanfer.top/recsys/image_PpDTNAaz9C.png" alt=""></a></p><p>预估用户对候选物品的兴趣：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mo>∑</mo><mi>j</mi></munder><mi>l</mi><mi>i</mi><mi>k</mi><mi>e</mi><mo stretchy="false">(</mo><mi>u</mi><mi>s</mi><mi>e</mi><mi>r</mi><mo separator="true">,</mo><mi>i</mi><mi>t</mi><mi>e</mi><msub><mi>m</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>×</mo><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mi>i</mi><mi>t</mi><mi>e</mi><msub><mi>m</mi><mi>j</mi></msub><mo separator="true">,</mo><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">∑_jlike(user,item_j)×sim(item_j,item)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.463782em;vertical-align:-1.413777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8723309999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.413777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span></span></p><blockquote><p>左边是用户对物品的兴趣，右边是两个物品之间的相似度</p></blockquote><p>根据上面的公式进行计算即可得到：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>0.1</mn><mo>+</mo><mn>1</mn><mo>×</mo><mn>0.4</mn><mo>+</mo><mn>4</mn><mo>×</mo><mn>0.2</mn><mo>+</mo><mn>3</mn><mo>×</mo><mn>0.6</mn><mo>=</mo><mn>3.2</mn></mrow><annotation encoding="application/x-tex">2×0.1+1×0.4+4×0.2+3×0.6=3.2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">.</span><span class="mord">2</span></span></span></span></span></p><p>表示用户对候选物品的兴趣，比如有多个候选物品，则可以计算用户对每一个物品的候选分数，然后选出分数较高的几个物品。</p><h2 id="1-3-物品的相似度">1.3 物品的相似度</h2><p>两个物品的受众重合度越⾼，两个物品越相似。例如，喜欢《射雕英雄传》和《神雕侠侣》的读者重合度很⾼，则可以认为《射雕英雄传》和《神雕侠侣》相似。</p><blockquote><p>两个物品不相似：红色物品和绿色物品的用户之间没有交集</p></blockquote><p><a href="https://picture.fanfer.top/recsys/image_JUdf5r8sIG.png"><img src="https://picture.fanfer.top/recsys/image_JUdf5r8sIG.png" alt=""></a></p><blockquote><p>两个物品相似：红色物品和绿色物品的用户之间有交集</p></blockquote><p><a href="https://picture.fanfer.top/recsys/image_X-nZu9_nl1.png"><img src="https://picture.fanfer.top/recsys/image_X-nZu9_nl1.png" alt=""></a></p><h3 id="1-3-1-计算物品相似度">1.3.1 计算物品相似度</h3><p>喜欢物品 i1 的用户记作集合 W1 ，喜欢物品 i2 的用户记作集合 W2，定义交集 V=W1∩W2，则两个物品的相似度：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mi>i</mi><mn>1</mn><mo separator="true">,</mo><mi>i</mi><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>W</mi><mn>1</mn><mi mathvariant="normal">∣</mi><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi>W</mi><mn>2</mn><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">sim(i1,i2)=|V||W1|⋅|W2|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord">1</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord">2</span><span class="mord">∣</span></span></span></span></span></p><blockquote><p>注： 公式没有考虑喜欢的程度 like(user,item)，喜欢就记为1，不喜欢就记为0</p></blockquote><p>考虑用户喜欢物品的程度：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mi>i</mi><mn>1</mn><mo separator="true">,</mo><mi>i</mi><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>v</mi><mo>∈</mo><mi>V</mi></mrow></munder><mi>l</mi><mi>i</mi><mi>k</mi><mi>e</mi><mo stretchy="false">(</mo><mi>v</mi><mo separator="true">,</mo><msub><mi>i</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>⋅</mo><mi>l</mi><mi>i</mi><mi>k</mi><mi>e</mi><mo stretchy="false">(</mo><mi>v</mi><mo separator="true">,</mo><msub><mi>i</mi><mn>2</mn></msub><mo stretchy="false">)</mo><munder><mo>∑</mo><mrow><msub><mi>u</mi><mn>1</mn></msub><mo>∈</mo><msub><mi>W</mi><mn>1</mn></msub></mrow></munder><mi>l</mi><mi>i</mi><mi>k</mi><mi>e</mi><mn>2</mn><mo stretchy="false">(</mo><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>i</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>⋅</mo><munder><mo>∑</mo><mrow><msub><mi>u</mi><mn>2</mn></msub><mo>∈</mo><msub><mi>W</mi><mn>2</mn></msub></mrow></munder><mi>l</mi><mi>i</mi><mi>k</mi><mi>e</mi><mn>2</mn><mo stretchy="false">(</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>i</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">sim(i1,i2)=∑_{v∈V}like(v,i_1)⋅like(v,i_2)∑_{u_1∈W_1}like2(u_1,i_1)⋅∑_{u_2∈W_2}like2(u_2,i_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3717110000000003em;vertical-align:-1.321706em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.4444410000000003em;vertical-align:-1.394436em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.394436em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">e</span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.4444410000000003em;vertical-align:-1.394436em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.394436em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">e</span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>上述公式就是余弦相似度，把每个物品表示为一个向量，向量的每个元素表示每个用户的兴趣分数。</p><h2 id="1-4-小结">1.4 小结</h2><p>ItemCF 的基本思想 是根据物品之间的相似度做推荐。即如果用户喜欢物品 item1，⽽且物品 item1 与 item2 相似，那么用户很可能喜欢物品 item2。</p><p>所以需要预估用户对候选物品的兴趣：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mo>∑</mo><mi>j</mi></munder><mi>l</mi><mi>i</mi><mi>k</mi><mi>e</mi><mo stretchy="false">(</mo><mi>u</mi><mi>s</mi><mi>e</mi><mi>r</mi><mo separator="true">,</mo><mi>i</mi><mi>t</mi><mi>e</mi><msub><mi>m</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>×</mo><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mi>i</mi><mi>t</mi><mi>e</mi><msub><mi>m</mi><mi>j</mi></msub><mo separator="true">,</mo><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">∑_jlike(user,item_j)×sim(item_j,item)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.463782em;vertical-align:-1.413777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8723309999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.413777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span></span></p><p>计算两个物品的相似度：把每个物品表示为⼀个稀疏向量，向量每个元素对应⼀个用户。相似度 sim 就是两个向量夹角的余弦。</p><h2 id="1-5-itemcf-召回的完整流程">1.5 ItemCF 召回的完整流程</h2><h3 id="1-5-1-事先做离线计算">1.5.1 事先做离线计算</h3><p>建⽴“用户 → 物品”的索引：</p><p>记录每个用户最近点击、交互过的物品 ID<br>给定任意用户 ID，可以找到他近期感兴趣的物品列表</p><p><a href="https://picture.fanfer.top/recsys/image_3xYvOBHZfB.png"><img src="https://picture.fanfer.top/recsys/image_3xYvOBHZfB.png" alt=""></a></p><p>建⽴“物品 → 物品”的索引：</p><p>计算物品之间两两相似度<br>对于每个物品，索引它最相似的 k 个物品<br>给定任意物品 ID，可以快速找到它最相似的 k 个物品</p><p><a href="https://picture.fanfer.top/recsys/image_5Foi9x3EcG.png"><img src="https://picture.fanfer.top/recsys/image_5Foi9x3EcG.png" alt=""></a></p><h3 id="1-5-2-线上做召回">1.5.2 线上做召回</h3><p>可以按照以下步骤线上做推荐：</p><ol><li>给定用户 ID，通过“用户 → 物品”索引，找到用户近期感兴趣的物品列表（last-n）</li><li>对于 last-n 列表中每个物品，通过“物品 → 物品”的索引，找到 top-k 相似物品</li><li>对于取回的相似物品（最多有 nk 个），用公式预估用户对物品的兴趣分数</li><li>返回分数最⾼的 100 个物品，作为推荐结果</li></ol><p>索引的意义在于避免枚举所有的物品。用索引离线计算量⼤，线上计算量⼩。</p><p><a href="https://picture.fanfer.top/recsys/image_4K4c3CZNCD.png"><img src="https://picture.fanfer.top/recsys/image_4K4c3CZNCD.png" alt=""></a></p><h2 id="1-6-总结">1.6 总结</h2><h3 id="1-6-1-itemcf的原理">1.6.1 ItemCF的原理</h3><p>用户喜欢物品 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>i</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">i_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，那么用户喜欢与物品 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>i</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">i_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 相似的物品 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>i</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">i_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>物品相似度： 如果喜欢 i1、i2的用户有很大的重叠，那么 i1 与 i2 相似。公式如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>i</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>i</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><msub><mi>W</mi><mn>1</mn></msub><mo>∩</mo><msub><mi>W</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>W</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><mo>⋅</mo><mi mathvariant="normal">∣</mi><msub><mi>W</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">sim(i_1,i_2)=|W_1∩W_2||W_1|⋅|W_2|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p><h3 id="1-6-2-itemcf召回通道">1.6.2 ItemCF召回通道</h3><p>维护两个索引：</p><ol><li>用户 → 物品列表：用户最近交互过的 n 个物品</li><li>物品 → 物品列表：相似度最⾼的 k 个物品</li></ol><p>线上做召回：</p><ol><li>利用两个索引，每次取回 nk 个物品</li><li>预估用户对每个物品的兴趣分数：</li></ol><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mo>∑</mo><mi>j</mi></munder><mi>l</mi><mi>i</mi><mi>k</mi><mi>e</mi><mo stretchy="false">(</mo><mi>u</mi><mi>s</mi><mi>e</mi><mi>r</mi><mo separator="true">,</mo><mi>i</mi><mi>t</mi><mi>e</mi><msub><mi>m</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>×</mo><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mi>i</mi><mi>t</mi><mi>e</mi><msub><mi>m</mi><mi>j</mi></msub><mo separator="true">,</mo><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">∑_jlike(user,item_j)×sim(item_j,item)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.463782em;vertical-align:-1.413777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8723309999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.413777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span></span></p><ol><li>返回分数最高的100个物品，作为召回结果</li></ol><hr><h1 id="2-swing-召回通道">2 Swing 召回通道</h1><h2 id="2-1-原理介绍">2.1 原理介绍</h2><p>Swing 模型的原理就是给用户设置权重，解决小圈子问题。</p><p>喜欢物品 u1 的用户记作集合 J1，喜欢物品 u2 的用户记作集合 J2，定义两个用户的重合度：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>l</mi><mi>a</mi><mi>p</mi><mo stretchy="false">(</mo><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><msub><mi>J</mi><mn>1</mn></msub><mo>∩</mo><msub><mi>J</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">overlap(u_1,u_2)=|J_1∩J_2|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p><p>用户 u1 和 u2 的重合度⾼，则他们可能来⾃⼀个⼩圈⼦，要降低他们的权重。</p><p>喜欢物品 i1 的用户记作集合 W1，喜欢物品 i2 的用户记作集合 W2，定义交集 V=W1∩W2，则两个物品的相似度：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>i</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>i</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>u</mi><mn>1</mn><mo>∈</mo><mi>V</mi></mrow></munder><munder><mo>∑</mo><mrow><msub><mi>u</mi><mn>2</mn></msub><mo>∈</mo><msub><mi>V</mi><mn>1</mn></msub></mrow></munder><mi>α</mi><mo>+</mo><mi>o</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>l</mi><mi>a</mi><mi>p</mi><mo stretchy="false">(</mo><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">sim(i_1,i_2)=∑_{u1∈V}∑_{u_2∈V_1}α+overlap(u_1,u_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4444410000000003em;vertical-align:-1.394436em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mtight">1</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.394436em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h2 id="2-2-总结">2.2 总结</h2><p><code>Swing</code> 与 <code>ItemCF</code> 唯⼀的区别在于 物品相似度 。</p><p>ItemCF： 两个物品重合的用户⽐例⾼，则判定两个物品相似。<br>Swing： 额外考虑重合的用户是否来⾃⼀个⼩圈⼦。</p><p>同时喜欢两个物品的用户记作集合 V，对于 V 中的用户 u1 和 u2，重合度记作 overlap(u1,u2)。两个用户重合度大，则可能来自一个小圈子，权重降低。</p><hr><h1 id="3-基于用户的协同过滤-usercf">3 基于用户的协同过滤 UserCF</h1><p><a href="https://picture.fanfer.top/recsys/image_ZljfSvUGwd.png"><img src="https://picture.fanfer.top/recsys/image_ZljfSvUGwd.png" alt=""></a></p><p>推荐系统如何找到跟我兴趣非常相似的网友呢？</p><ol><li>⽅法⼀：点击、点赞、收藏、转发的笔记有很⼤的重合。</li><li>⽅法⼆：关注的作者有很⼤的重合。</li></ol><h2 id="3-1-usercf-的实现">3.1 UserCF 的实现</h2><p><a href="https://picture.fanfer.top/recsys/image_qV5IKglIkG.png"><img src="https://picture.fanfer.top/recsys/image_qV5IKglIkG.png" alt=""></a></p><p>预估用户对候选物品的兴趣：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mo>∑</mo><mi>j</mi></munder><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mi>u</mi><mi>s</mi><mi>e</mi><mi>r</mi><mo separator="true">,</mo><mi>u</mi><mi>s</mi><mi>e</mi><msub><mi>r</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>×</mo><mi>l</mi><mi>i</mi><mi>k</mi><mi>e</mi><mo stretchy="false">(</mo><mi>u</mi><mi>s</mi><mi>e</mi><msub><mi>r</mi><mi>j</mi></msub><mo separator="true">,</mo><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">∑_jsim(user,user_j)×like(user_j,item)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.463782em;vertical-align:-1.413777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8723309999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.413777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span></span></p><p>根据上述公式计算的结果如下，表示左边用户对右边物品的兴趣。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.9</mn><mo>×</mo><mn>0</mn><mo>+</mo><mn>0.7</mn><mo>×</mo><mn>1</mn><mo>+</mo><mn>0.7</mn><mo>×</mo><mn>3</mn><mo>+</mo><mn>0.4</mn><mo>×</mo><mn>0</mn><mo>=</mo><mn>2.8</mn></mrow><annotation encoding="application/x-tex">0.9×0+0.7×1+0.7×3+0.4×0=2.8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">8</span></span></span></span></span></p><h2 id="3-2-用户之间的相似度">3.2 用户之间的相似度</h2><blockquote><p>两个用户不相似：喜欢的物品没有重合</p></blockquote><p><a href="https://picture.fanfer.top/recsys/image_X-Q_f_8YFo.png"><img src="https://picture.fanfer.top/recsys/image_X-Q_f_8YFo.png" alt=""></a></p><blockquote><p>两个用户相似：喜欢的物品有重合</p></blockquote><p><a href="https://picture.fanfer.top/recsys/image_6zG73OGyFP.png"><img src="https://picture.fanfer.top/recsys/image_6zG73OGyFP.png" alt=""></a></p><h3 id="3-2-1-计算用户相似度">3.2.1 计算用户相似度</h3><p>喜欢物品 u1 的用户记作集合 J1，喜欢物品 u2 的用户记作集合 J2，定义交集 I=J1∩J2。定义两个用户的重合度：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mi>u</mi><mn>1</mn><mo separator="true">,</mo><mi>u</mi><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mi>I</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>J</mi><mn>1</mn><mi mathvariant="normal">∣</mi><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi>J</mi><mn>2</mn><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">sim(u1,u2)=|I||J1|⋅|J2|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mord">1</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mord">2</span><span class="mord">∣</span></span></span></span></span></p><h3 id="3-2-2-降低热门物品权重">3.2.2 降低热门物品权重</h3><p>越热门的物品，对于计算用户相似度是没有价值的。反过来，重合的物品越冷门，说明两个人兴趣更加相似。所以需要降低热门物品的权重。</p><p>修改相似度计算公式如下：</p><blockquote><p>为什么这里要用 log 呢？</p></blockquote><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>l</mi><mo>∈</mo><mi>I</mi><mn>1</mn></mrow></munder><mi>l</mi><mi>o</mi><mi>g</mi><mtext>⁡</mtext><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msub><mi>n</mi><mi>l</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msub><mi>J</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><mo>⋅</mo><mi mathvariant="normal">∣</mi><msub><mi>J</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">sim(u_1,u_2)=∑_{l∈I1}log⁡(1+n_l)|J_1|⋅|J_2|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3794880000000003em;vertical-align:-1.329483em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.329483em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord">⁡</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">n_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ：喜欢物品 l 的用户数量，反映物品的热门程度</p><h2 id="3-3-usercf完整召回流程">3.3 UserCF完整召回流程</h2><h3 id="3-3-1-事先做离线计算">3.3.1 事先做离线计算</h3><p>建⽴“用户 → 物品”的索引 ：</p><p>记录每个用户最近点击、交互过的物品 ID<br>给定任意用户 ID，可以找到他近期感兴趣的物品列表</p><p><a href="https://picture.fanfer.top/recsys/image_ch8L7Vpfu5.png"><img src="https://picture.fanfer.top/recsys/image_ch8L7Vpfu5.png" alt=""></a></p><p>建⽴“用户 → 用户”的索引 ：</p><p>对于每个用户，索引他最相似的 k 个用户<br>给定任意用户 ID，可以快速找到他最相似的 k 个用户</p><p><a href="https://picture.fanfer.top/recsys/image_Hk8aaNPO5z.png"><img src="https://picture.fanfer.top/recsys/image_Hk8aaNPO5z.png" alt=""></a></p><h3 id="3-3-2-线上做召回">3.3.2 线上做召回</h3><ol><li>给定用户 ID，通过“用户 → 用户”索引，找到 top-k 相似用户</li><li>对于每个 top-k 相似用户，通过“用户 → 物品”索引，找到用户近期感兴趣的物品列表（last-n）</li><li>对于取回的 nk 个相似物品，用公式预估用户对每个物品的兴趣分数</li><li>返回分数最⾼的 100 个物品，作为召回结果</li></ol><p><a href="https://picture.fanfer.top/recsys/image_rTwrj0ruku.png"><img src="https://picture.fanfer.top/recsys/image_rTwrj0ruku.png" alt=""></a></p><h2 id="3-4-总结">3.4 总结</h2><p>UserCF 的基本思想： 用户 u1 跟用户 u2 相似，而且 u2 喜欢某物品，那么 u1 也可能喜欢该物品。</p><p>用户相似度： 如果用户 u1 跟用户 u2 喜欢的物品有很大重叠，那么 u1 和 u2 相似，计算公式为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><msub><mi>J</mi><mn>1</mn></msub><mo>∩</mo><msub><mi>J</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>J</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><mo>⋅</mo><mi mathvariant="normal">∣</mi><msub><mi>J</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">sim(u_1,u_2)=|J_1∩J_2||J_1|⋅|J_2|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p><hr><h1 id="4-离散特征的处理">4 离散特征的处理</h1><p>离散特征在推荐系统中很常见，常见的离散特征如下：</p><ol><li>性别：男、⼥两种类别。</li><li>国籍：中国、美国、印度等200个国家。</li><li>英⽂单词：常见的英文单词有几万个。</li><li>物品ID：小红书有几亿篇笔记，每篇笔记有⼀个ID。</li><li>用户ID：小红书有几亿个用户，每个用户有⼀个ID。</li></ol><p>离散特征的处理分两步：</p><ol><li>建立字典 ：把类别映射成序号。</li><li>向量化 ：把序号映射成向量。<br>One-hot 编码：把序号映射成⾼维稀疏向量<br>Embedding：把序号映射成低维稠密向量</li></ol><h2 id="4-1-独热编码">4.1 独热编码</h2><p>独热编码是用和物品类别数量一样维数的向量表示来类别，例如使用2维向量来表示性别：</p><p>未知 → 0 → [0, 0]<br>男 → 1 → [1, 0]<br>女 → 2 → [0, 1]</p><h3 id="4-1-1-优点">4.1.1 优点</h3><ol><li>解决分类数据处理问题： 独热编码将离散分类特征转换为机器学习算法易于处理的二进制格式，提高了算法对离散特征的处理能力。</li><li>避免引入数值偏误： 通过将每个类别映射到独立的二进制向量，独热编码消除了类别间可能存在的错误数值关系，从而避免了算法基于这些关系做出不准确的预测。</li></ol><h3 id="4-1-2-缺点">4.1.2 缺点</h3><ol><li>维度增加： 当类别数量较多时，独热编码会显著增加特征空间的维度，可能导致计算复杂性和过拟合问题。</li><li>信息损失风险： 独热编码可能无法充分捕捉类别间的潜在关系或顺序信息，从而在某些情况下导致有用信息的丢失。</li></ol><h2 id="4-2-embedding">4.2 Embedding</h2><p><a href="https://picture.fanfer.top/recsys/image_-LkqBiMHPZ.png"><img src="https://picture.fanfer.top/recsys/image_-LkqBiMHPZ.png" alt=""></a></p><p>Embedding 把每个序号映射成一个低维向量，参数数量计算如下：</p><p>参数数量向量维度类别数量参数数量=向量维度×类别数量</p><p>例如，设 Embedding 得到的向量都是 4 维的，一共有200个国籍，那么参数数量为 4×200=800。</p><h3 id="4-2-1-embedding得到的向量的物理意义">4.2.1 Embedding得到的向量的物理意义</h3><p><a href="https://picture.fanfer.top/recsys/image_lR517m69Na.png"><img src="https://picture.fanfer.top/recsys/image_lR517m69Na.png" alt=""></a></p><p>图中的一个点是每个物品的 Embedding，相邻的点关系越接近。可以通过将两个无法比较的文字映射成向量，接下来就能实现对他们的计算。</p><h2 id="4-3-总结">4.3 总结</h2><p>离散特征处理有两种方法：独热编码和词嵌入。而当类别很大的时候，使用词嵌入。</p><hr><h1 id="5-矩阵补充">5 矩阵补充</h1><h2 id="5-1-模型结构">5.1 模型结构</h2><p><a href="https://picture.fanfer.top/recsys/image_7iyIgycPzI.png"><img src="https://picture.fanfer.top/recsys/image_7iyIgycPzI.png" alt=""></a></p><p>上面这个图展示了如何使用 Embedding 做推荐，模型的输入是一个用户 ID 和物品 ID，模型的输出是一个实数，是用户对物品兴趣的预估值。这个数越大，表示用户对物品越感兴趣。这个模型就是矩阵补充模型。</p><h2 id="5-2-模型训练">5.2 模型训练</h2><p>开始训练之前，要准备一个数据集：（用户 ID，物品 ID，兴趣分数）的集合，记作 Ω=(u,i,y)。</p><p>数据集中的兴趣分数是系统记录的，分数最低是 0 分，最高是 4 分，比如：</p><p>曝光但是没有点击记 0 分<br>点击、点赞、收藏、转发各记 1 分</p><p>之后把用户 ID 和物品 ID 映射成向量，例如第 u 号用户映射为向量 au，第 i 号物品映射为向量 bi。就变成了一个优化问题的求解，得到参数 A 和 B：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><msub><mi>n</mi><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi></mrow></msub><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>i</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∈</mo><mi mathvariant="normal">Ω</mi></mrow></munder><mo stretchy="false">(</mo><mi>y</mi><mtext>−</mtext><mo stretchy="false">⟨</mo><mi>a</mi><mi>u</mi><mo separator="true">,</mo><mi>b</mi><mi>i</mi><mo stretchy="false">⟩</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">min_{A,B}∑_{(u,i,y)∈Ω}(y−⟨au,bi⟩)^2.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.5660100000000003em;vertical-align:-1.516005em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight">Ω</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">−</span><span class="mopen">⟨</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mclose">⟩</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord">.</span></span></span></span></span></p><h2 id="5-3-为什么是矩阵补充">5.3 为什么是矩阵补充</h2><p><a href="https://picture.fanfer.top/recsys/image_oKXXZXCBXg.png"><img src="https://picture.fanfer.top/recsys/image_oKXXZXCBXg.png" alt=""></a></p><p>可以上述上述内容看成一个矩阵，其中绿色位置表示曝光给用户的物品；灰色位置表示没有曝光。之后可以计算出还未曝光的物品对于用户的吸引力，从而进行推荐。</p><p>但是矩阵补充方法在实践中的效果并不是很好，原因如下：</p><ol><li><p>仅用 ID embedding，没利用物品、用户属性。</p><p>物品属性有类⽬、关键词、地理位置、作者信息；<br>用户属性有性别、年龄、地理定位、感兴趣的类⽬；</p><p>双塔模型可以看做矩阵补充的升级版。</p></li><li><p>负样本的选取方式不对。</p><p>样本是用户—物品的二元组，记作 (u,i)。</p><p>正样本：曝光之后，有点击、交互等行为（正确的做法）；<br>负样本：曝光之后，没有点击、交互（错误的做法）；</p></li><li><p>做训练的方法不好。</p><p>做向量的内积 ⟨a1,bj⟩ 不如余弦相似度，用均方损失（回归），不如用交叉熵损失（分类）。</p></li></ol><h2 id="5-4-线上服务">5.4 线上服务</h2><p>在训练好模型之后，可以把模型用作推荐系统中的召回通道。做完训练之后，要把模型存储在正确的地方，便于做召回。</p><p>训练得到矩阵 A 和 B：</p><ol><li>A 的每一列对应一个用户</li><li>B 的每一列对应一个物品</li></ol><p>把矩阵 A 的列存储到 key-value 表，其中 key 是用户 ID，value 是 A 的一列，给定用户 ID，返回一个向量（用户的 embedding）。而矩阵 B 的存储和索引比较复杂。</p><p>之后可以做线上服务，具体来说，把用户 ID 作为 key，查询 key-value 表，得到该用户的向量，记作 a。查找用户 a 最有可能感兴趣的 k 各物品，作为召回结果。</p><p>其中第 i 号物品的 embedding 向量记作 bi，内积 ⟨a,bi⟩ 是用户对第 i 号物品兴趣的预估，并计算返回内积最大的 k 个物品。</p><blockquote><p>如果枚举所有物品，时间复杂度正比于物品数量</p></blockquote><h2 id="5-5-近似最近邻查找">5.5 近似最近邻查找</h2><p>在用户向量 a 作为 query，查找使得 ⟨a,bi⟩ 最大化的物品 i 时，暴力枚举速度太慢，实践中使用近似最近邻查找（Approximate Nearest Neighbor Search）。</p><p>Milvus、Faiss、HnswLib 等向量数据库均支持近似最近邻查找。</p><p><a href="https://picture.fanfer.top/recsys/image_eFQa1u_QlR.png"><img src="https://picture.fanfer.top/recsys/image_eFQa1u_QlR.png" alt=""></a></p><p>在对数据上线之前，先对数据做预处理，把数据划分为很多区域，至于如何划分，取决于衡量距离的方法。划分后每个区域用一个向量表示，这些向量的长度都是1，并建立索引，把每个区域的向量作为 key，区域中所有点作为 value。给定一个向量，可以快速取回这个向量中所有的点。</p><p><a href="https://picture.fanfer.top/recsys/image_yY7g1kfwyL.png"><img src="https://picture.fanfer.top/recsys/image_yY7g1kfwyL.png" alt=""></a></p><p>给定一个向量 a，可以把 a 和区域中所有向量做对比，并计算他们的相似度，这一步的计算开销不大。找出最相似的一个向量，并把这个向量所有点给取出来，再和向量 a 计算相似度。</p><p><a href="https://picture.fanfer.top/recsys/image_S8I2UBtOQf.png"><img src="https://picture.fanfer.top/recsys/image_S8I2UBtOQf.png" alt=""></a></p><p>最后找到最相似的 k 个物品，那么这 k 个物品就是最近邻查找的结果，并进行返回。</p>]]></content>
      
      
      <categories>
          
          <category> 推荐系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书生·浦语大模型实战营（七）：OpenCompass 大模型评测实战</title>
      <link href="/2024/04/22/InternLM2OpenCompass%20/"/>
      <url>/2024/04/22/InternLM2OpenCompass%20/</url>
      
        <content type="html"><![CDATA[<p>课程文档：<a href="https://github.com/InternLM/Tutorial/blob/camp2/opencompass/readme.md">https://github.com/InternLM/Tutorial/blob/camp2/opencompass/readme.md</a></p><p>视频：<a href="https://www.bilibili.com/video/BV1Pm41127jU/?spm_id_from=333.788&amp;vd_source=3194af3e77968cb10b1d50711d07106a">https://www.bilibili.com/video/BV1Pm41127jU/?spm_id_from=333.788&amp;vd_source=3194af3e77968cb10b1d50711d07106a</a></p><h2 id="opencompass"><strong>OpenCompass</strong></h2><p>上海人工智能实验室科学家团队正式发布了大模型开源开放评测体系 “司南” (OpenCompass2.0)，用于为大语言模型、多模态模型等提供一站式评测服务。其主要特点如下：</p><ul><li>开源可复现：提供公平、公开、可复现的大模型评测方案</li><li>全面的能力维度：五大维度设计，提供 70+ 个数据集约 40 万题的的模型评测方案，全面评估模型能力</li><li>丰富的模型支持：已支持 20+ HuggingFace 及 API 模型</li><li>分布式高效评测：一行命令实现任务分割和分布式评测，数小时即可完成千亿模型全量评测</li><li>多样化评测范式：支持零样本、小样本及思维链评测，结合标准型或对话型提示词模板，轻松激发各种模型最大性能</li><li>灵活化拓展：想增加新模型或数据集？想要自定义更高级的任务分割策略，甚至接入新的集群管理系统？OpenCompass 的一切均可轻松扩展！</li></ul><p><img src="https://picture.fanfer.top/img/intern72.png" alt="Untitled"></p><ul><li>模型层：大模型评测所涉及的主要模型种类，OpenCompass以基座模型和对话模型作为重点评测对象。</li><li>能力层：OpenCompass从本方案从通用能力和特色能力两个方面来进行评测维度设计。在模型通用能力方面，从语言、知识、理解、推理、安全等多个能力维度进行评测。在特色能力方面，从长文本、代码、工具、知识增强等维度进行评测。</li><li>方法层：OpenCompass采用客观评测与主观评测两种评测方式。客观评测能便捷地评估模型在具有确定答案（如选择，填空，封闭式问答等）的任务上的能力，主观评测能评估用户对模型回复的真实满意度，OpenCompass采用基于模型辅助的主观评测和基于人类反馈的主观评测两种方式。</li><li>工具层：OpenCompass提供丰富的功能支持自动化地开展大语言模型的高效评测。包括分布式评测技术，提示词工程，对接评测数据库，评测榜单发布，评测报告生成等诸多功能。</li></ul><p><img src="https://picture.fanfer.top/img/intern73.png" alt="Untitled"></p><p>在 OpenCompass 中评估一个模型通常包括以下几个阶段：配置 -&gt; 推理 -&gt; 评估 -&gt; 可视化。</p><ul><li>配置：这是整个工作流的起点。您需要配置整个评估过程，选择要评估的模型和数据集。此外，还可以选择评估策略、计算后端等，并定义显示结果的方式。</li><li>推理与评估：在这个阶段，OpenCompass 将会开始对模型和数据集进行并行推理和评估。推理阶段主要是让模型从数据集产生输出，而评估阶段则是衡量这些输出与标准答案的匹配程度。这两个过程会被拆分为多个同时运行的“任务”以提高效率，但请注意，如果计算资源有限，这种策略可能会使评测变得更慢。如果需要了解该问题及解决方案，可以参考 FAQ: 效率。</li><li>可视化：评估完成后，OpenCompass 将结果整理成易读的表格，并将其保存为 CSV 和 TXT 文件。你也可以激活飞书状态上报功能，此后可以在飞书客户端中及时获得评测状态报告。 接下来，我们将展示 OpenCompass 的基础用法，展示书生浦语在 <code>C-Eval</code> 基准任务上的评估。它们的配置文件可以在 <code>configs/eval_demo.py</code> 中找到。</li></ul><h2 id="作业">作业</h2><p><img src="https://picture.fanfer.top/img/intern71.png" alt="untitled"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> InternLM2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书生·浦语大模型实战营（六）：Lagent &amp; AgentLego 智能体应用搭建</title>
      <link href="/2024/04/22/InternLM2Agent/"/>
      <url>/2024/04/22/InternLM2Agent/</url>
      
        <content type="html"><![CDATA[<p>文档：<a href="https://github.com/InternLM/Tutorial/tree/camp2/agent">https://github.com/InternLM/Tutorial/tree/camp2/agent</a></p><p>视频：<a href="https://www.bilibili.com/video/BV1Xt4217728/?spm_id_from=333.788&amp;vd_source=3194af3e77968cb10b1d50711d07106a">https://www.bilibili.com/video/BV1Xt4217728/?spm_id_from=333.788&amp;vd_source=3194af3e77968cb10b1d50711d07106a</a></p><p>仓库：</p><p><a href="https://github.com/InternLM/Lagent">https://github.com/InternLM/Lagent</a></p><p><a href="https://github.com/InternLM/AgentLego">https://github.com/InternLM/AgentLego</a></p><blockquote><p><strong>什么是智能体</strong><br>1.可以感知环境中的动态条件。<br>(perception of dynamic conditions in the environment)<br>2.能采取动作影响环境。<br>(action to affect conditions in the environment)<br>3.能运用推理能力理解信息、解决问题、产生推断、决定动作。<br>(reasoning to interpret perceptions, solve problems, draw inferences, and determine actions)<br>—Hayes-Roth 1995<br>An Architecture for Adaptive Intelligent Systems</p></blockquote><p>大脑：作为控制器，承担记忆、思考和决策任务。接受来自感知模块的信息，并采取相应动作。</p><hr><p>感知：对外部环境的多模态信息进行感知和处理。包括但不限于图像、音频、视频、传感器等。</p><hr><p>动作：利用并执行工具以影响环境。工具可能包括文本的检索、调用相关 API、操控机械臂等。</p><hr><h2 id="lagent">Lagent</h2><p>Lagent 是一个轻量级开源智能体框架，旨在让用户可以高效地构建基于大语言模型的智能体。同时它也提供了一些典型工具以增强大语言模型的能力。</p><p>Lagent 目前已经支持了包括 AutoGPT、ReAct 等在内的多个经典智能体范式，也支持了如下工具：</p><ul><li>Arxiv 搜索</li><li>Bing 地图</li><li>Google 学术搜索</li><li>Google 搜索</li><li>交互式 IPython 解释器</li><li>IPython 解释器</li><li>PPT</li><li>Python 解释器</li></ul><h2 id="agentlego">AgentLego</h2><p>AgentLego 是一个提供了多种开源工具 API 的多模态工具包，旨在像是乐高积木一样，让用户可以快速简便地拓展自定义工具，从而组装出自己的智能体。通过 AgentLego 算法库，不仅可以直接使用多种工具，也可以利用这些工具，在相关智能体框架（如 Lagent，Transformers Agent 等）的帮助下，快速构建可以增强大语言模型能力的智能体。</p><p>AgentLego 目前提供了如下工具：</p><table><thead><tr><th>通用能力</th><th>语音相关</th><th>图像处理</th><th>AIGC</th></tr></thead><tbody><tr><td>• 计算器</td><td></td><td></td><td></td></tr><tr><td>• 谷歌搜素</td><td>• 文本 -&gt; 音频（TTS）</td><td></td><td></td></tr><tr><td>• 音频 -&gt; 文本（STT）</td><td>• 描述输入图像</td><td></td><td></td></tr></tbody></table><p>• 识别文本（OCR）<br>• 视觉问答（VQA）<br>• 人体姿态估计<br>• 人脸关键点检测<br>• 图像边缘提取（Canny）<br>• 深度图生成<br>• 生成涂鸦（Scribble）<br>• 检测全部目标<br>• 检测给定目标<br>• SAM<br>◦ 分割一切<br>◦ 分割给定目标 | • 文生图<br>• 图像拓展<br>• 删除给定对象<br>• 替换给定对象<br>• 根据指令修改<br>• ControlNet 系列<br>◦ 根据边缘+描述生成<br>◦ 根据深度图+描述生成<br>◦ 根据姿态+描述生成<br>◦ 根据涂鸦+描述生成<br>• ImageBind 系列<br>◦ 音频生成图像<br>◦ 热成像生成图像<br>◦ 音频+图像生成图像<br>◦ 音频+文本生成图像 |</p><p>两者之间的关系可以用下图来表示：</p><p><img src="https://picture.fanfer.top/img/intern61.png" alt="截屏2024-04-22 11.37.35.png"></p><h2 id="作业">作业</h2><p><img src="https://picture.fanfer.top/img/intern62.png" alt="Untitled"></p><p><img src="https://picture.fanfer.top/img/intern63.png" alt="Untitled"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> InternLM2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书生·浦语大模型实战营（五）：LMDeploy 量化</title>
      <link href="/2024/04/20/InternLM2LMDeploy/"/>
      <url>/2024/04/20/InternLM2LMDeploy/</url>
      
        <content type="html"><![CDATA[<p>文档：<a href="https://github.com/InternLM/Tutorial/tree/camp2/lmdeploy">https://github.com/InternLM/Tutorial/tree/camp2/lmdeploy</a></p><p>视频：<a href="https://www.bilibili.com/video/BV1tr421x75B/?spm_id_from=333.788&amp;vd_source=3194af3e77968cb10b1d50711d07106a">https://www.bilibili.com/video/BV1tr421x75B/?spm_id_from=333.788&amp;vd_source=3194af3e77968cb10b1d50711d07106a</a></p><h3 id="模型部署">模型部署</h3><ul><li>定义<ul><li>将训练好的模型在特定软硬件环境中启动的过程，使模型能够接收输入并返回预测结果</li><li>为了满足性能和效率的需求，常常需要对模型进行优化，例如模型压缩和硬件加速</li></ul></li><li>产品形态<ul><li>云端、边缘计算端、移动端</li></ul></li><li>计算设备<ul><li>CPU、GPU、NPU、TPU 等</li></ul></li></ul><h3 id="大模型特点">大模型特点</h3><ul><li>内存开销巨大<ul><li>庞大的参数量。7B模型仅权重就需要 14+G 内存</li><li>采用自回归生成 token，需要缓存 Attention 的 k/v，带来巨大的内存开销</li></ul></li><li>动态 shape<ul><li>请求数不固定</li><li>Token 逐个生成，且数量不定</li></ul></li><li>相对视觉模型，LLM 结构简单<ul><li>Transformers 结构，大部分是 decoder-only</li></ul></li></ul><h3 id="大模型部署挑战">大模型部署挑战</h3><ul><li>设备<ul><li>如何应对巨大的存储问题？低存储设备（消费级显卡、手机等）如何部署？</li></ul></li><li>推理<ul><li>如何加速 token 的生成速度</li><li>如何解决动态 shape，让推理可以不间断</li><li>如何有效管理和利用内存</li></ul></li><li>服务如何提升系统整体吞吐量？</li><li>对于个体用户，如何降低响应时间？</li></ul><h3 id="大模型部署方案">大模型部署方案</h3><ul><li>技术点<ul><li>模型并行</li><li>低比特量化</li><li>Page Attention</li><li>transformer 计算和访存优化</li><li>Continuous Batch</li><li>…</li></ul></li><li>方案<ul><li>huggingface transformers</li><li>专门的推理加速框架<ul><li>云端<ul><li>lmdeploy</li><li>vllm</li><li>tensorrt-llm</li><li>deepspeed</li><li>…</li></ul></li><li>移动端<ul><li>llama.cpp</li><li>mlc-llm</li><li>…</li></ul></li></ul></li></ul></li></ul><h2 id="lmdeploy-简介">LMDeploy 简介</h2><p>LMDeploy 是 LLM 在英伟达设备上部署的全流程解决方案。包括模型轻量化、推理和服务。项目地址： <a href="https://github.com/InternLM/lmdeploy">https://github.com/InternLM/lmdeploy</a></p><p>LMDeploy 提供以下核心功能（细节详见官方仓库，这里不做赘述）：</p><ul><li><strong>高效推理引擎 TurboMind</strong>：开发了 Persistent Batch(即 Continuous Batch)，Blocked K/V Cache，动态拆分和融合，张量并行，高效的计算 kernel等重要特性，保障了 LLMs 推理时的高吞吐和低延时。</li><li><strong>有状态推理</strong>：通过缓存多轮对话过程中 attention 的 k/v，记住对话历史，从而避免重复处理历史会话。显著提升长文本多轮对话场景中的效率。</li><li><strong>量化</strong>：LMDeploy 支持多种量化方式和高效的量化模型推理。在不同规模的模型上，验证了量化的可靠性。</li></ul><p><strong>HuggingFace</strong></p><p><a href="https://huggingface.co/">HuggingFace</a>是一个高速发展的社区，包括Meta、Google、Microsoft、Amazon在内的超过5000家组织机构在为HuggingFace开源社区贡献代码、数据集和模型。可以认为是一个针对深度学习模型和数据集的在线托管社区，如果你有数据集或者模型想对外分享，网盘又不太方便，就不妨托管在HuggingFace。</p><p>托管在HuggingFace社区的模型通常采用HuggingFace格式存储，简写为<strong>HF格式</strong>。</p><p>但是HuggingFace社区的服务器在国外，国内访问不太方便。国内可以使用阿里巴巴的<a href="https://www.modelscope.cn/home">MindScope</a>社区，或者上海AI Lab搭建的<a href="https://openxlab.org.cn/home">OpenXLab</a>社区，上面托管的模型也通常采用<strong>HF格式</strong>。</p><p><strong>TurboMind</strong></p><p>TurboMind是LMDeploy团队开发的一款关于LLM推理的高效推理引擎，它的主要功能包括：LLaMa 结构模型的支持，continuous batch 推理模式和可扩展的 KV 缓存管理器。</p><p>TurboMind推理引擎仅支持推理TurboMind格式的模型。因此，TurboMind在推理HF格式的模型时，会首先自动将HF格式模型转换为TurboMind格式的模型。<strong>该过程在新版本的LMDeploy中是自动进行的，无需用户操作。</strong></p><p>几个容易迷惑的点：</p><ul><li>TurboMind与LMDeploy的关系：LMDeploy是涵盖了LLM 任务全套轻量化、部署和服务解决方案的集成功能包，TurboMind是LMDeploy的一个推理引擎，是一个子模块。LMDeploy也可以使用pytorch作为推理引擎。</li><li>TurboMind与TurboMind模型的关系：TurboMind是推理引擎的名字，TurboMind模型是一种模型存储格式，TurboMind引擎只能推理TurboMind格式的模型。</li></ul><h2 id="量化">量化</h2><p>总的来说，量化是一种以参数或计算中间结果精度下降换空间节省（以及同时带来的性能提升）的策略。</p><p>正式介绍 LMDeploy 量化方案前，需要先介绍两个概念：</p><ul><li>计算密集（compute-bound）: 指推理过程中，绝大部分时间消耗在数值计算上；针对计算密集型场景，可以通过使用更快的硬件计算单元来提升计算速度。</li><li>访存密集（memory-bound）: 指推理过程中，绝大部分时间消耗在数据读取上；针对访存密集型场景，一般通过减少访存次数、提高计算访存比或降低访存量来优化。</li></ul><p>常见的 LLM 模型由于 Decoder Only 架构的特性，实际推理时大多数的时间都消耗在了逐 Token 生成阶段（Decoding 阶段），是典型的访存密集型场景。</p><p>那么，如何优化 LLM 模型推理中的访存密集问题呢？ 我们可以使用<strong>KV8量化</strong>和<strong>W4A16</strong>量化。KV8量化是指将逐 Token（Decoding）生成过程中的上下文 K 和 V 中间结果进行 INT8 量化（计算时再反量化），以降低生成过程中的显存占用。W4A16 量化，将 FP16 的模型权重量化为 INT4，Kernel 计算时，访存量直接降为 FP16 模型的 1/4，大幅降低了访存成本。Weight Only 是指仅量化权重，数值计算依然采用 FP16（需要将 INT4 权重反量化）。</p><h2 id="作业">作业</h2><p><img src="https://picture.fanfer.top/img/intern51.png" alt="截屏2024-04-22 13.20.58.png"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> InternLM2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书生·浦语大模型实战营（四）：XTuner 微调 LLM：1.8B、多模态、Agent</title>
      <link href="/2024/04/18/InternLM2XTurn/"/>
      <url>/2024/04/18/InternLM2XTurn/</url>
      
        <content type="html"><![CDATA[<p>视频：<a href="https://www.bilibili.com/video/BV15m421j78d/?vd_source=3194af3e77968cb10b1d50711d07106a">https://www.bilibili.com/video/BV15m421j78d/?vd_source=3194af3e77968cb10b1d50711d07106a</a></p><p>文档：<a href="https://github.com/InternLM/Tutorial/blob/camp2/xtuner/readme.md">https://github.com/InternLM/Tutorial/blob/camp2/xtuner/readme.md</a></p><h2 id="笔记">笔记</h2><p>两种Finetune范式<br>LLM 的下游应用中，增量预训练和指令跟随是经常会用到两种的微调模式</p><p><strong>增量预训练微调</strong><br>使用场景：让基座模型学习到一些新知识，如某个垂类领域的常识训练数据：文章、书籍、代码等<br><strong>指令跟随微调</strong><br>使用场景：让模型学会对话模板，根据人类指令进行对话训练数据：高质量的对话、问答数据</p><p><img src="https://picture.fanfer.top/img/intern41.png" alt="Untitled"></p><p><img src="https://picture.fanfer.top/img/intern42.png" alt="截屏2024-04-22 10.55.29.png"></p><h2 id="xturn">XTurn</h2><h3 id="lora-qlora">LoRA &amp; QLoRA</h3><h3 id="lora-low-rank-adaptation-of-large-language-models">LoRA: Low-Rank Adaptation of Large Language Models</h3><ul><li>LLM 的参数量主要集中在模型中的 Linear, 训练这些参数会耗费大量的显存</li><li>LoRA 通过在原本的 Linear 旁，新增一个支路，包含两个连续的小 linear，新增的这个支路通常叫做 Adapter</li><li>Adapter 参数量远小于原本的 Linear，能大幅降低训练的显存消耗</li></ul><h3 id="qlora-quantized-llms-with-low-rank-adapters">QLoRA: Quantized LLMs with Low-Rank Adapters</h3><ul><li>4位NormalFloat量化：这是一种改进量化的方法，确保每个量化仓中有相同数量的值，这避免了计算问题和异常值的错误。</li><li>双量化：对量化常量再次量化以节省额外内存的过程。</li><li>统一内存分页：它依赖于NVIDIA统一内存管理，自动处理CPU和GPU之间的页到页传输，它可以保证GPU处理无错，特别是在GPU可能耗尽内存的情况下。</li></ul><p><img src="https://picture.fanfer.top/img/intern43.png" alt="Untitled"></p><p>XTuner 一个大语言模型&amp;多模态模型微调工具箱。<em>由</em> <em>MMRazor</em> <em>和</em> <em>MMDeploy</em> <em>联合开发。</em></p><ul><li>🤓 <strong>傻瓜化：</strong> 以 配置文件 的形式封装了大部分微调场景，<strong>0基础的非专业人员也能一键开始微调</strong>。</li><li>🍃 <strong>轻量级：</strong> 对于 7B 参数量的LLM，<strong>微调所需的最小显存仅为 8GB</strong> ： <strong>消费级显卡✅，colab✅</strong></li></ul><p><img src="https://picture.fanfer.top/img/intern44.png" alt="Untitled"></p><p><img src="https://picture.fanfer.top/img/intern45.png" alt="Untitled"></p><h3 id="ms-agent-数据集">MS-Agent 数据集</h3><p>这个数据集比较有意思，能够赋予大模型调用api的agent能力，原理：</p><ul><li>模型的回复中会包括插件调用代码和执行代码<ul><li>调用代码是 LLM 生成的</li><li>执行代码是需要调用服务来生成结果的，这里我们需要给 <code>xtuner chat</code> 增加 <code>-lagent</code> 参数来实现</li></ul></li></ul><h2 id="作业">作业</h2><p><img src="https://picture.fanfer.top/img/intern46.png" alt="Untitled"></p><p><img src="https://picture.fanfer.top/img/intern47.png" alt="Untitled"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> InternLM2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书生·浦语大模型实战营（三）：InternLM RAG</title>
      <link href="/2024/04/11/InternLM2RAG/"/>
      <url>/2024/04/11/InternLM2RAG/</url>
      
        <content type="html"><![CDATA[<p>视频：<a href="https://www.bilibili.com/video/BV1QA4m1F7t4/?vd_source=3194af3e77968cb10b1d50711d07106a">https://www.bilibili.com/video/BV1QA4m1F7t4/?vd_source=3194af3e77968cb10b1d50711d07106a</a></p><p>教程：<a href="https://github.com/InternLM/Tutorial/blob/camp2/huixiangdou/readme.md">https://github.com/InternLM/Tutorial/blob/camp2/huixiangdou/readme.md</a></p><p>茴香豆：<a href="https://github.com/InternLM/HuixiangDou">https://github.com/InternLM/HuixiangDou</a></p><p>LLM的局限性：</p><ul><li>知识时效性受限：如何让LLM能够获取最新的知识</li><li>专业能力有限：如何打造垂域大模型</li><li>定制化成本高：如何打造个人专属的LLM应</li></ul><p>两种开发范式：<br>RAG：检索增强生成</p><p>外挂知识库，从知识库中匹配到相应文档，然后和提问一起交给LLM</p><p>低成本、可以实时更新、收到几座影响、单次回答知识有限</p><p>Finetune：微调</p><p>可以个性化微调、知识覆盖面广、成本高昂、无法实时更新</p><h2 id="rag：">RAG：</h2><p>RAG（Retrieval Augmented Generation）技术，通过检索与用户输入相关的信息片段，并结合<em><strong>外部知识库</strong></em>来生成更准确、更丰富的回答。解决 LLMs 在处理知识密集型任务时可能遇到的挑战, 如幻觉、知识过时和缺乏透明、可追溯的推理过程等。提供更准确的回答、降低推理成本、实现外部记忆。</p><p><img src="https://picture.fanfer.top/img/internLM31.png" alt="Untitled"></p><h2 id="langchain">LangChain</h2><p>LangChain 框架是一个开源工具，通过为各种LLM 提供通用接口来简化应用程序的开发流程，帮助开发者自由构建LLM应用。</p><p>LangChain 的核心组成模块：</p><ul><li><p>链（Chains）：将组件组合实现端到端应用，通过一个对象封装实现一系列<br>LLM 操作</p></li><li><p>Eg. 检索问答链，覆盖实现了 RAG（检索增强生成）的全部流</p><p><img src="https://picture.fanfer.top/img/internLM32.png" alt="截屏2024-03-29 17.44.19.png"></p></li></ul><h3 id="构建向量数据库">构建向量数据库</h3><h3 id="加载源文件">加载源文件</h3><ul><li>确定源文件类型，针对不同类型的源文件选用不同的加载器<ul><li>核心在于将带格式的文本转化为无格式的字符串</li></ul></li></ul><h3 id="文档分块">文档分块</h3><ul><li>由于单个文档往往超过模型上下文上限，我们需要对加载的文档进行切分<ul><li>一般按字符串长度进行分割</li><li>可以手动控制分割块的长度和重叠区间长度</li></ul></li></ul><h3 id="文档向量化">文档向量化</h3><ul><li>使用向量数据库来支持语义检索，需要将文档向量化存入向量数据库<ul><li>可以使用任意一种 Embedding 模型来进行向量化</li><li>可以使用多种支持语义检索的向量数据库，一般使用轻量级的 Chroma</li></ul></li></ul><h3 id="搭建知识库助手">搭建知识库助手</h3><h3 id="将-internlm-接入-langchain">将 InternLM 接入 LangChain</h3><ul><li>LangChain 支持自定义 LLM，可以直接接入到框架中</li><li>我们只需将 InternLM 部署在本地，并封装一个自定义 LLM 类，调用本地 InternLM 即可</li></ul><h3 id="构建检索问答链">构建检索问答链</h3><ul><li>LangChain 提供了检索问答链模版，可以自动实现知识检索、Prompt 嵌入、LLM 问答的全部流程</li><li>将基于 InternLM 的自定义 LLM 和已构建的向量数据库接入到检索问答链的上游</li><li>调用检索问答链，即可实现知识库助手的核心功能</li></ul><p>!<a href="https://picture.fanfer.top/img/internLM33.webp">https://picture.fanfer.top/img/internLM33.webp</a></p><ul><li>基于RAG的问答系统性能核心受限于：<ul><li>检索精度</li><li>Prompt性能</li></ul></li><li>一些可能的优化点：<ul><li>检索方面：<ul><li>基于语义进行分割，保证每一个chunk的语义完整</li><li>给每一个chunk生成概括性索引，检索时匹配索引</li></ul></li></ul></li></ul><p>Prompt方面：迭代优化Prompt策略</p><p><img src="https://picture.fanfer.top/img/internLM34.png" alt="Untitled"></p><p><a href=""></a></p><p><img src="https://picture.fanfer.top/img/internLM35.png" alt="Untitled"></p><p><img src="https://picture.fanfer.top/img/internLM36.png" alt="Untitled"></p><p><img src="https://picture.fanfer.top/img/internLM37.png" alt="Untitled"></p><p><img src="https://picture.fanfer.top/img/internLM38.png" alt="Untitled"></p><p><img src="https://picture.fanfer.top/img/internLM39.png" alt="Untitled"></p><p><img src="https://picture.fanfer.top/img/internLM310.png" alt="Untitled"></p><p>作业：</p><p><img src="https://picture.fanfer.top/img/internLM311.png" alt="截屏2024-04-11 19.09.41.png"></p><p><img src="https://picture.fanfer.top/img/internLM3111.png" alt="截屏2024-04-11 19.09.41.png"></p><p><img src="https://picture.fanfer.top/img/internLM312.png" alt="截屏2024-04-11 19.09.41.png"></p><p><img src="https://picture.fanfer.top/img/internLM313.png" alt="截屏2024-04-11 19.09.41.png"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> InternLM2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书生·浦语大模型实战营（二）：InternLM Demo</title>
      <link href="/2024/04/01/InternLM2Demo/"/>
      <url>/2024/04/01/InternLM2Demo/</url>
      
        <content type="html"><![CDATA[<p>github：<a href="https://github.com/InternLM/Tutorial/blob/camp2/helloworld/hello_world.md">https://github.com/InternLM/Tutorial/tree/camp2</a></p><p>视频地址：<a href="https://www.bilibili.com/video/BV1AH4y1H78d/">https://www.bilibili.com/video/BV1AH4y1H78d/</a></p><h2 id="工具记录">工具记录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 从本地使用 ssh 连接 studio 端口</span><br><span class="line"># 将下方端口号 38374 替换成自己的端口号</span><br><span class="line">ssh -CNg -L 6006:127.0.0.1:6006 root@ssh.intern-ai.org.cn -p 38374</span><br></pre></td></tr></table></figure><p><strong>模型下载</strong></p><p><strong>6.2.1 Hugging Face</strong></p><p>使用 <code>Hugging Face</code> 官方提供的 <code>huggingface-cli</code> 命令行工具。安装依赖:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -U huggingface_hub</span><br></pre></td></tr></table></figure><p>然后新建 <code>python</code> 文件，填入以下代码，运行即可。</p><ul><li>resume-download：断点续下</li><li>local-dir：本地存储路径。</li></ul><p>其中 linux 环境下需要填写绝对路径.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"># 下载模型</span><br><span class="line">os.system(&#x27;huggingface-cli download --resume-download internlm/internlm2-chat-7b --local-dir your_path&#x27;)</span><br></pre></td></tr></table></figure><p>以下内容将展示使用 <code>huggingface_hub</code> 下载模型中的部分文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">from huggingface_hub import hf_hub_download  # Load model directly</span><br><span class="line"></span><br><span class="line">hf_hub_download(repo_id=&quot;internlm/internlm2-7b&quot;, filename=&quot;config.json&quot;)</span><br></pre></td></tr></table></figure><p><strong>6.2.2 ModelScope</strong></p><p>使用 <code>modelscope</code> 中的 <code>snapshot_download</code> 函数下载模型，第一个参数为模型名称，参数 <code>cache_dir</code> 为模型的下载路径。</p><p>注意：<code>cache_dir</code> 最好为绝对路径。</p><p>安装依赖：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install modelscope==1.9.5</span><br><span class="line">pip install transformers==4.35.2</span><br></pre></td></tr></table></figure><p>在当前目录下新建 <code>python</code> 文件，填入以下代码，运行即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line">from modelscope import snapshot_download, AutoModel, AutoTokenizer</span><br><span class="line">import os</span><br><span class="line">model_dir = snapshot_download(&#x27;Shanghai_AI_Laboratory/internlm2-chat-7b&#x27;, cache_dir=&#x27;your path&#x27;, revision=&#x27;master&#x27;)</span><br></pre></td></tr></table></figure><p><strong>6.2.3 OpenXLab</strong></p><p><code>OpenXLab</code> 可以通过指定模型仓库的地址，以及需要下载的文件的名称，文件所需下载的位置等，直接下载模型权重文件，使用 <code>download</code>函数导入模型中心的模型。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line">import os</span><br><span class="line">from transformers import AutoModelForCausalLM, AutoTokenizer, AutoModel</span><br><span class="line">base_path = &#x27;./local_files&#x27;</span><br><span class="line">os.system(&#x27;apt install git&#x27;)</span><br><span class="line">os.system(&#x27;apt install git-lfs&#x27;)</span><br><span class="line">os.system(f&#x27;git clone https://code.openxlab.org.cn/Usr_name/repo_name.git &#123;base_path&#125;&#x27;)</span><br><span class="line">os.system(f&#x27;cd &#123;base_path&#125; &amp;&amp; git lfs pull&#x27;)</span><br></pre></td></tr></table></figure><p><strong>6.3 （可选参考）软链接清除方法</strong></p><p>当我们建立安全链接之后，如果想要将其删除可以选择以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unlink link_name</span><br></pre></td></tr></table></figure><p>我们举一个例子，当我想删除软链接 <code>/root/demo/internlm2-chat-7b</code> 时：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root/demo/</span><br><span class="line">unlink internlm2-chat-7b</span><br></pre></td></tr></table></figure><h2 id="作业">作业</h2><p>chat：</p><p><img src="https://picture.fanfer.top/img/Intern12.png" alt="Untitled"></p><h2 id="lagent">Lagent</h2><p>Lagent 是一个轻量级、开源的基于大语言模型的智能体（agent）框架，支持用户快速地将一个大语言模型转变为多种类型的智能体，并提供了一些典型工具为大语言模型赋能。它的整个框架图如下:</p><p>!<a href="https://github.com/InternLM/Tutorial/raw/camp2/helloworld/images/Lagent-1.png">https://github.com/InternLM/Tutorial/raw/camp2/helloworld/images/Lagent-1.png</a></p><p>Lagent 的特性总结如下：</p><ul><li>流式输出：提供 stream_chat 接口作流式输出，本地就能演示酷炫的流式 Demo。</li><li>接口统一，设计全面升级，提升拓展性，包括：<ul><li>Model : 不论是 OpenAI API, Transformers 还是推理加速框架 LMDeploy 一网打尽，模型切换可以游刃有余；</li><li>Action: 简单的继承和装饰，即可打造自己个人的工具集，不论 InternLM 还是 GPT 均可适配；</li><li>Agent：与 Model 的输入接口保持一致，模型到智能体的蜕变只需一步，便捷各种 agent 的探索实现；</li></ul></li><li>文档全面升级，API 文档全覆盖。</li></ul><p>调用数据分析：<br><img src="https://picture.fanfer.top/img/Intern11.png" alt="Untitled"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> InternLM2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书生·浦语大模型实战营（一）：书生·浦语大模型全链路开源体系</title>
      <link href="/2024/03/28/InternLM2/"/>
      <url>/2024/03/28/InternLM2/</url>
      
        <content type="html"><![CDATA[<h1 id="书生-浦语大模型实战营-一-：书生-浦语大模型全链路开源体系"><strong>书生·浦语大模型实战营（一）：书生·浦语大模型全链路开源体系</strong></h1><p>github：<a href="https://github.com/InternLM/Tutorial/tree/camp2">https://github.com/InternLM/Tutorial/tree/camp2</a></p><p>InternLM2 报告：<a href="https://arxiv.org/pdf/2403.17297.pdf">https://arxiv.org/pdf/2403.17297.pdf</a></p><p>视频地址：<a href="https://www.bilibili.com/video/BV1Vx421X72D/">https://www.bilibili.com/video/BV1Vx421X72D/</a></p><p><img src="https://picture.fanfer.top/img/Intern1.jpeg" alt="Untitled"></p><p>模型到应用的典型流程：</p><p>对于机器人领域，构建智能体应该更能满足应用场景的要求。</p><p>项目案例：</p><p><a href="https://github.com/BestAnHongjun/InternDog">https://github.com/BestAnHongjun/InternDog</a></p><p>针对水面无人艇而言，在设计的过程中，应该有较好的顶层设计，哪些信息从外界API获取，哪些功能通过调用API执行，同时要注意工具是备选，应该是通过选择工作，完成指令，而不是变成分类任务，机械地调用</p><p>同时，针对特定情境下，应该通过代码生成，从而构建新的内部API</p><p><img src="https://picture.fanfer.top/img/Intern2.jpeg" alt="Untitled"></p><p><img src="https://picture.fanfer.top/img/Intern3.jpeg" alt="Untitled"></p><p>Lagent，借助AutoGPT等方式，实现更好的工具选择。</p><p>同时使用更加丰富的多模态智能体工具箱，多模态的信息输入对于机器人而言应该是很重要的信息补充</p><p><img src="https://picture.fanfer.top/img/Intern4.jpeg" alt="Untitled"></p><p>关于微调：</p><p>增量训练的目的是了解垂类领域的知识</p><p>有监督微调的目的是完成高质量的生成，在计算能力不足的时候，对部分参数进行微调</p><p><img src="https://picture.fanfer.top/img/Intern5.jpeg" alt="Untitled"></p><p>部署：不太了解，感觉涉及到更多的底层。</p><p>如何将模型轻量化，从而能实现端侧部署，应该是一个可以看的点</p><p><img src="https://picture.fanfer.top/img/Intern6.jpeg" alt="Untitled"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> InternLM2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连不上一些网站的解决方案</title>
      <link href="/2024/02/05/%E8%BF%9E%E4%B8%8D%E4%B8%8A%E4%B8%80%E4%BA%9B%E7%BD%91%E7%AB%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2024/02/05/%E8%BF%9E%E4%B8%8D%E4%B8%8A%E4%B8%80%E4%BA%9B%E7%BD%91%E7%AB%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<p>如果是从 <a href="http://huggingface.co/">huggingface.co</a> 下载模型，由于国内不能访问，所以建议先配置一下环境变量，<br>通过访问国内镜像站点 <a href="https://hf-mirror.xn--com-128di84bv9wbmeb04g/">https://hf-mirror.com来下载模型</a>。</p><p>使用<strong>huggingface 官方提供的 <code>[huggingface-cli</code>](<a href="https://hf-mirror.com/docs/huggingface_hub/guides/download#download-from-the-cli">https://hf-mirror.com/docs/huggingface_hub/guides/download#download-from-the-cli</a>) 命令行工具。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -U huggingface_hub</span><br></pre></td></tr></table></figure><p>基本命令示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HF_ENDPOINT=https://hf-mirror.com</span><br><span class="line">huggingface-cli download --resume-download --local-dir-use-symlinks False bigscience/bloom-560m --local-dir bloom-560m</span><br></pre></td></tr></table></figure><p>PS：详情参考<a href="https://fanfer.top/2024/01/18/HuggingFace-%E4%B8%8B%E8%BD%BD%E6%A8%A1%E5%9E%8B/">https://fanfer.top/2024/01/18/HuggingFace-下载模型/</a>和<a href="https://hf-mirror.com/">https://hf-mirror.com</a></p><p>如果是国内想要通过OpenAI API访问GPT</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> openai <span class="keyword">import</span> OpenAI</span><br><span class="line"></span><br><span class="line">client = OpenAI(</span><br><span class="line">    base_url=<span class="string">&#x27;https://api.openai-proxy.org/v1&#x27;</span>,</span><br><span class="line">    api_key=<span class="string">&#x27;sk-xxxxxxxx&#x27;</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">chat_completion = client.chat.completions.create(</span><br><span class="line">    messages=[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">            <span class="string">&quot;content&quot;</span>: <span class="string">&quot;Say hi&quot;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    model=<span class="string">&quot;gpt-3.5-turbo&quot;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><aside>❗ 注意配置api_base时，应该加上一个/v1的后缀，而不是只有域名，要不然会报404错误</aside><p>如使用LangChain，可以使用closeai提供的代理进行访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> OPENAI_API_BASE=https://api.openai-proxy.org/v1</span><br><span class="line"><span class="built_in">export</span> OPENAI_API_KEY=sk-xxxxxxxx</span><br></pre></td></tr></table></figure><aside>❗ 注意配置环境变量时，langchain的`OPENAI_API_BASE`应该加上一个`/v1`的后缀，而不是只有域名，要不然会报404错误。</aside>]]></content>
      
      
      
        <tags>
            
            <tag> LLM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HuggingFace-下载模型</title>
      <link href="/2024/01/18/HuggingFace-%E4%B8%8B%E8%BD%BD%E6%A8%A1%E5%9E%8B/"/>
      <url>/2024/01/18/HuggingFace-%E4%B8%8B%E8%BD%BD%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="hugging-face保存模型">Hugging Face保存模型</h1><h1 id="cache-setup">Cache setup</h1><p>如果本地和缓存中均没有模型的话，那么运行<code>model.fromPretrained</code>会从huggingface官网中下载模型，保存到本地的默认路径<code>~/.cache/huggingface/hub</code>.下</p><p>因此可以从<code>~/.cache/huggingface/hub</code>下进入删除你不再需要的模型参数</p><h1 id="offline-mode">Offline mode</h1><p>如果在有防火墙或者离线的情况下使用Huggingface在cache file中保存的文件，通过设置环境变量</p><p><code>TRANSFORMERS_OFFLINE=1</code>.如果要使用本地的数据集，设置<code>HF_DATASETS_OFFLINE=1</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HF_DATASETS_OFFLINE=1 TRANSFORMERS_OFFLINE=1 \</span><br><span class="line">python examples/pytorch/translation/run_translation.py --model_name_or_path t5-small --dataset_name wmt16 --dataset_config ro-en ...</span><br></pre></td></tr></table></figure><p>上述指令就不会尝试从huggingface在线的加载模型</p><p>同时也可以选**<a href="https://huggingface.co/docs/transformers/v4.34.0/en/main_classes/model#transformers.PreTrainedModel.from_pretrained">from_pretrained()</a>**在模型加载的时候传递一个参数<code>local_files_only</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from transformers import T5Model</span><br><span class="line"></span><br><span class="line">model = T5Model.from_pretrained(<span class="string">&quot;./path/to/local/directory&quot;</span>, local_files_only=True)</span><br></pre></td></tr></table></figure><h1 id="离线保存模型参数">离线保存模型参数</h1><ul><li>从**<a href="https://huggingface.co/models">Model Hub</a>下载**</li><li>使**<a href="https://huggingface.co/docs/transformers/v4.34.0/en/main_classes/model#transformers.PreTrainedModel.from_pretrained">PreTrainedModel.from_pretrained()</a>** 和**<a href="https://huggingface.co/docs/transformers/v4.34.0/en/main_classes/model#transformers.PreTrainedModel.save_pretrained">PreTrainedModel.save_pretrained()</a>：**</li></ul><p>1.提前下载模型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**from transformers import AutoTokenizer, AutoModelForSeq2SeqLM</span><br><span class="line"></span><br><span class="line">tokenizer = AutoTokenizer.from_pretrained(<span class="string">&quot;bigscience/T0_3B&quot;</span>)</span><br><span class="line">model = AutoModelForSeq2SeqLM.from_pretrained(<span class="string">&quot;bigscience/T0_3B&quot;</span>)**</span><br></pre></td></tr></table></figure><p>2.将模型保存到指定的文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tokenizer.save_pretrained(<span class="string">&quot;./your/path/bigscience_t0&quot;</span>)</span><br><span class="line">model.save_pretrained(<span class="string">&quot;./your/path/bigscience_t0&quot;</span>)</span><br></pre></td></tr></table></figure><p>3.之后就可以从本地文件夹中提取模型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tokenizer = AutoTokenizer.from_pretrained(<span class="string">&quot;./your/path/bigscience_t0&quot;</span>)</span><br><span class="line">model = AutoModel.from_pretrained(<span class="string">&quot;./your/path/bigscience_t0&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>使用**<a href="https://github.com/huggingface/huggingface_hub/tree/main/src/huggingface_hub">huggingface_hub</a>**</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install huggingface_hub</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from huggingface_hub import hf_hub_download</span><br><span class="line"></span><br><span class="line">hf_hub_download(repo_id=<span class="string">&quot;bigscience/T0_3B&quot;</span>, filename=<span class="string">&quot;config.json&quot;</span>, cache_dir=<span class="string">&quot;./your/path/bigscience_t0&quot;</span>)</span><br></pre></td></tr></table></figure><p>以上代码就是从T0模型中下载了config.json文件到了指定文件夹</p><h1 id="使用镜像网站">使用镜像网站</h1><p>本站域名 <a href="http://hf-mirror.com">hf-mirror.com</a>，用于镜像 <a href="http://huggingface.co">huggingface.co</a> 域名。</p><p>更多用法（多线程加速等）详见这篇文章。简介：</p><p>方法一：使用huggingface 官方提供的 huggingface-cli 命令行工具。</p><p>(1) 安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python pip install -U huggingface_hub</span><br></pre></td></tr></table></figure><p>(2) 基本命令示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HF_ENDPOINT=https://hf-mirror.com</span><br><span class="line">huggingface-cli download --resume-download --local-dir-use-symlinks False bigscience/bloom-560m --local-dir bloom-560m</span><br></pre></td></tr></table></figure><p>(3) 下载需要登录的模型（Gated Model）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请添加--token hf_***参数，其中hf_***是 access token，请在huggingface官网这里获取。示例：</span><br><span class="line">huggingface-cli download --token hf_*** --resume-download --local-dir-use-symlinks False meta-llama/Llama-2-7b-hf --local-dir Llama-2-7b-hf</span><br></pre></td></tr></table></figure><p>方法二：使用url直接下载时，将 <a href="http://huggingface.co">huggingface.co</a> <a href="http://xn--hf-mirror-fp6nr62ckzktv1b10az18awua995s5wo.com">直接替换为本站域名hf-mirror.com</a>。使用浏览器或者 wget -c、curl -L、aria2c 等命令行方式即可。<br>下载需登录的模型需命令行添加 --header hf_*** 参数，token 获取具体参见上文。<br>方法三：(非侵入式，能解决大部分情况)huggingface 提供的包会获取系统变量，所以可以使用通过设置变量来解决。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HF_ENDPOINT=https://hf-mirror.com python your_script.py</span><br></pre></td></tr></table></figure><p>不过有些数据集有内置的下载脚本，那就需要手动改一下脚本内的地址来实现了</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> HuggingFace </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> HuggingFace </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VoxPoser</title>
      <link href="/2023/11/23/VoxPoser/"/>
      <url>/2023/11/23/VoxPoser/</url>
      
        <content type="html"><![CDATA[<p>VoxPoser：使用语言模型的可组合三维价值地图进行机器人操纵</p><p>author：<em>Wenlong Huang, Chen Wang, Ruohan Zhang, Yunzhu Li , Jiajun Wu, Li Fei-Fei</em></p><h1 id="abstract">Abstract</h1><p>大型语言模型（LLMs）显示出具有可操作知识的丰富性，可以通过推理和规划的形式提取用于机器人操纵的知识。尽管取得了进展，但大多数仍然<em>依赖预定义的运动原语来进行与环境的物理交互</em>，这仍然是一个主要瓶颈。在这项工作中，我们旨在合成机器人轨迹，即一系列密集的6自由度末端执行器路径点，用于各种操纵任务，并给定开放式指令和开放式对象。我们首先观察到LLMs在根据自由形式语言指令推断能力和约束方面表现出色。更重要的是，通过利用它们编写代码的能力，它们可以与视觉-语言模型（VLM）交互以组合3D价值地图将知识落实到代理者所观测到空间中。然后，在基于模型的规划框架中使用组合后的价值地图来零样本综合闭环机器人轨迹，并对动态扰动具有鲁棒性。我们进一步演示了所提出框架如何从在线经验中受益，并有效学习涉及接触丰富交互场景下的动力学模型。我们在模拟和真实机器人环境中对所提出方法进行了大规模研究，展示了能够执行各种以自由形式自然语言指定的日常操纵任务的能力。<a href="https://voxposer.github.io">视频和代码请访问voxposer.github.io。</a></p><p><strong>关键词：操纵，大型语言模型，基于模型的规划</strong></p><p><img src="https://picture.fanfer.top/img/VoxPoser1.png" alt="截屏2023-11-08 16.45.06.png"></p><h1 id="instruction"><strong>Instruction</strong></h1><p>语言是人类用来提炼和传达对世界的知识和经验的一种压缩媒介。大型语言模型（LLMs）已经成为捕捉这种抽象、通过语言空间投影来代表世界的一种有前途的方法。尽管这些模型被认为能够以文本形式内化可概括的知识，但如何利用它们来使具体agent（如机器人）在现实世界中实际行动仍是一个问题。</p><p>我们研究的问题是如何将抽象的语言指令（例如“布置桌子”）转化为机器人动作。以往的工作利用词汇分析来解析指令，而最近则使用语言模型将指令分解为一系列文本步骤。然而，为了使机器人与环境进行物理互动，现有方法通常依赖于一系列预定义的动作原语（即技能），这些原语可能由LLM或规划器调用，而依赖于单独技能获取通常被认为是系统的一个主要瓶颈，因为缺乏大规模的机器人数据。那么问题来了：我们如何利用LLM内化的知识，甚至在细粒度的动作层面，为机器人提供帮助，而无需进行繁琐的数据收集或为每个单独的原语手动设计？</p><p>在解决这个挑战时，我们首先注意到LLM直接以文本输出控制动作是不切实际的，因为这些控制动作通常由高频控制信号在高维空间中驱动。然而，我们发现LLM擅长推断语言条件下的可用性和限制，并且通过利用它们的编写代码能力，它们可以组成密集的3D体素地图，将这些知识植入视觉空间，通过协调感知调用（例如通过CLIP或开放词汇检测器）和数组操作（例如通过NumPy）。</p><p>例如，给定一个指令“打开顶部抽屉并注意花瓶”，LLM可以被提示推断：</p><p>1）应该抓住顶部抽屉的把手；</p><p>2）把手需要向外平移；</p><p>3）机器人应该远离花瓶。</p><p>通过生成Python代码调用感知API，LLM可以获得相关对象或部件的空间-几何信息，然后操纵3D体素，在观察空间中的相关位置规定奖励或成本（例如，把手区域被赋予高值，而花瓶周围被赋予低值）。最后，组成的价值地图可以作为运动规划器的目标函数，直接合成实现给定指令的机器人轨迹，无需为每个任务或LLM提供额外的训练数据。图1中展示了一个示意图和我们考虑的一些任务。</p><p>我们将这种方法称为VOXPOSER，它从LLMs中提取可供性和约束，以在观察空间中组合3D价值地图，用于指导机器人的交互。与通常依赖数量有限或变化有限的机器人数据不同，该方法利用LLMs进行开放世界推理，并利用VLMs进行可泛化的视觉基础定位，在基于模型的规划框架中直接实现物理机器人动作。我们展示了其对各种日常操作任务具有零样本泛化能力，包括使用开放集对象的开放集指令。我们进一步展示了VoxPoser如何通过有限在线交互来高效学习涉及接触丰富交互的动力学模型。</p><h1 id="method"><strong><strong><strong><strong><strong><strong><strong><strong>Method</strong></strong></strong></strong></strong></strong></strong></strong></h1><p>3.1首先提供了VoxPoser的优化问题表述</p><p>3.2然后我们描述了如何将VoxPoser用作通用的零样本框架，将语言指令映射到3D value map</p><p>3.3我们展示了如何闭环合成机器人操作的轨迹</p><p>3.4虽然是零样本学习，但我们展示了VoxPoser如何从在线交互中学习以高效解决富有接触性质的任务。</p><p><strong>3.2 生成3D Map</strong></p><p><img src="https://picture.fanfer.top/img/VoxPoser2.png" alt="截屏2023-11-23 16.46.11.png"></p><p>我们提供了一个关键观察结果，即大量任务可以通过机器人观测空间中的体素值图V ∈ Rw×h×d来描述，该图引导场景中“感兴趣实体”的运动，例如机器人末端执行器、物体或物体部分。</p><p>例如，考虑任务“打开顶层抽屉”及其第一个子任务“抓住顶部抽屉手柄”（由LLMs推断）在图2中。 “感兴趣的实体”是机器人末端执行器，并且体素值映射应反映对抽屉手柄的吸引力。通过进一步命令“小心花瓶”，地图也可以更新以反映对花瓶的排斥力。</p><p>值得注意的是，我们观察到大型语言模型通过在互联网规模的数据上进行预训练，不仅能够识别“感兴趣的实体”，还能够编写Python程序来准确反映任务指令。具体而言，在代码中给出指令作为注释时，可以提示LLMs执行以下操作：1）调用感知API（调用视觉语言模型（VLM），如开放词汇检测器[13-15]）获取相关对象的空间几何信息；2）生成NumPy操作以操纵3D数组；3）在相关位置处指定精确值。我们将这种方法称为VOXPOSER。具体而言，我们旨在通过提示LLM并通过Python解释器执行代码来获得一个体素值图Vti = VoxPoser(ot, ℓi)，其中ot是时间t处的RGB-D观察结果，ℓi是当前指令。此外，由于V通常是稀疏的，我们通过平滑操作使体素图变得密集化，因为它们鼓励运动规划者优化更平滑的轨迹。</p><p>附加轨迹参数化。上述的VoxPoser公式使用LLMs来组合V：N3 → R，将离散坐标映射到实值“成本”，我们可以用它来优化仅由位置项组成的路径。为了扩展到SE(3)姿态，我们还可以使用LLMs在与任务目标相关的坐标处组合旋转图像Vr：N3 → SO(3)（例如，“末端执行器应该面向手柄支撑法线”）。同样地，我们进一步组合夹爪图像Vg：N3 → {0, 1}以控制夹爪开闭和速度图像Vv：N3 → R以指定目标速度。请注意，虽然这些附加的轨迹参数化没有映射到实值“成本”，但它们也可以在优化过程中进行因子分解（方程1）以对轨迹进行参数化。</p><p><strong>LLMs和提示。</strong></p><p>我们遵循Liang等人的提示结构[75]，该结构通过递归调用其自动生成的代码来调用LLMs，其中每个语言模型程序（LMP）负责唯一的功能（例如处理感知呼叫）。我们使用OpenAI API中的GPT-4 [2]。对于每个LMP，我们将5-20个示例查询和相应的响应作为提示的一部分包含在内。图2中可以找到一个示例（为了清晰起见进行了简化）。完整的提示请参见附录。</p><p><em><strong>补充</strong></em></p><p><em>J. Liang, W. Huang, F. Xia, P. Xu, K. Hausman, B. Ichter, P. Florence, and A. Zeng. Code as<br>policies: Language model programs for embodied control. arXiv preprint arXiv:2209.07753,<br>2022.</em></p><p><img src="https://picture.fanfer.top/img/VoxPoser3.png" alt="截屏2023-11-23 16.58.14.png"></p><p>编写代码的LLMs可以重新用于编写机器人策略代码，给定自然语言命令。具体而言，策略代码可以表达处理感知输出（例如来自物体检测器[2]、[3]）和参数化控制原始API的函数或反馈循环。当以几个示例语言命令（格式为注释）作为输入，并通过少量提示提供相应的策略代码时，LLMs可以接受新命令并自主地重新组合API调用以生成新的策略代码。通过链接经典逻辑结构和引用第三方库（例如NumPy、Shapely）进行算术运算，在此方式下使用的LLMs可以编写机器人策略：展示空间几何推理、泛化到新指令，并根据上下文（即行为常识）对模糊描述(“更快”)提供精确值（例如速度）。</p><p><strong>VLMs和感知。</strong></p><p>给定LLMs的对象/部分查询，我们首先调用开放词汇检测器OWL-ViT [15]来获取一个边界框，然后将其输入Segment Anything [118]以获取一个掩码，并最终使用视频跟踪器XMEM [119]跟踪该掩码。使用RGB-D观察重建对象/部分点云。</p><p><strong>价值地图组合。</strong></p><p>我们定义以下类型的价值地图：可行性、避免、末端执行器速度、末端执行器旋转和夹爪动作。每种类型使用不同的LMP，它接收指令并输出形状为（100, 100, 100, k）的体素地图，其中k对于每个价值地图都不同（例如，对于可行性和避免来说k = 1表示成本，而对于旋转来说k = 4表示SO(3)）。我们将欧几里得距离变换应用于可行性地图，并对避免地图应用高斯滤波器。在价值地图LMP之上，我们定义了两个高级LMP来协调它们的行为：规划者以用户指令L作为输入（例如，“打开抽屉”），并输出一系列子任务ℓ1:N；组合者接收子任务ℓi并使用详细语言参数化调用相关的价值地图LMPs。</p><h1 id="related-works"><strong>Related Works</strong></h1><p>端到端成本预测器通过监督学习优化以将自然语言指令映射到2D成本地图上，在碰撞自由方式下引导运动规划生成首选轨迹。</p><p><em>P. Sharma, B. Sundaralingam, V. Blukis, C. Paxton, T. Hermans, A. Torralba, J. Andreas,</em><br><em>and D. Fox. Correcting robot plans with natural language feedback. arXiv preprint</em><br><em>arXiv:2204.05186, 2022.</em></p><p>为了使语言模型能够感知物理环境，可以提供场景的文本描述[39、11、59]或感知API [75]</p><p><em>W. Huang, F. Xia, T. Xiao, H. Chan, J. Liang, P. Florence, A. Zeng, J. Tompson, I. Mordatch,</em><br><em>Y. Chebotar, P. Sermanet, N. Brown, T. Jackson, L. Luu, S. Levine, K. Hausman, and</em><br><em>B. Ichter. Inner monologue: Embodied reasoning through planning with language models. In</em><br><em>arXiv preprint arXiv:2207.05608, 2022</em></p><p>需要利用视觉方法，生成结构化的Scene文本，但是他的文本仅包含类别</p><p><img src="https://picture.fanfer.top/img/VoxPoser4.png" alt="截屏2023-11-23 16.28.30.png"></p><p><em>I. Singh, V. Blukis, A. Mousavian, A. Goyal, D. Xu, J. Tremblay, D. Fox, J. Thomason, and</em><br><em>A. Garg. Progprompt: Generating situated robot task plans using large language models.</em><br><em>arXiv preprint arXiv:2209.11302, 2022.   <strong>ICRA2023</strong></em></p><p>我们提出了一个编程式LLM提示结构，使其能够在具体环境、机器人能力和任务之间实现功能性计划生成。我们主要思路是用类似程序的方式向LLM提示可用行动和物体在环境中以及可执行示例程序。</p><p><img src="https://picture.fanfer.top/img/VoxPoser5.png" alt="截屏2023-11-23 16.32.32.png"></p><p><em>A. Zeng, A. Wong, S. Welker, K. Choromanski, F. Tombari, A. Purohit, M. Ryoo, V. Sindhwani,</em><br><em>J. Lee, V. Vanhoucke, et al. Socratic models: Composing zero-shot multimodal reasoning</em><br><em>with language. arXiv preprint arXiv:2204.00598, 2022.</em></p><p>或者采用多模态输入</p><p><em>D. Driess, F. Xia, M. S. Sajjadi, C. Lynch, A. Chowdhery, B. Ichter, A. Wahid, J. Tompson,</em><br><em>Q. Vuong, T. Yu, et al. Palm-e: An embodied multimodal language model. arXiv preprint</em><br><em>arXiv:2303.03378, 2023.</em></p><p>提出了具有体验性的语言模型，将真实世界的连续传感器模态直接融入到语言模型中，并建立单词和感知之间的联系。我们所提出的体验性语言模型输入是多模式句子，交替包含视觉、连续状态估计和文本输入编码。(训练了一个526B参数大小的模型)</p><p><img src="https://picture.fanfer.top/img/VoxPoser6.png" alt="Untitled"></p><p><em>OpenAI. Gpt-4 technical report. arXiv, 2023.</em></p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为杯数模小记</title>
      <link href="/2023/11/15/%E5%8D%8E%E4%B8%BA%E6%9D%AF%E6%95%B0%E6%A8%A1%E5%B0%8F%E8%AE%B0/"/>
      <url>/2023/11/15/%E5%8D%8E%E4%B8%BA%E6%9D%AF%E6%95%B0%E6%A8%A1%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>今天下午在实验室摸鱼的时候，听到隔壁组说华为杯出结果了，心下一惊，去官网查了一下结果，出乎意料地竟然拿了国一(还有一个小插曲，在excel表里搜我名字的时候搜到了国三，结果发现是同名同姓的一位老哥)。简单记录一下数模的经历，给之后像我一样第一次参加的同学一些经验。</p><h1 id="赛前">赛前</h1><p>第一次参加数模类的竞赛，赛前抱着学习和积累经验的想法报的名，也没做啥准备，找到了一个相关的b站视频，结果那段时间太忙了一集也没看，最后就截了一页各类问题适合的模型。剩下的倒是在知乎看了不少经验贴，不过感觉也没学到什么有用的东西。</p><p>总的来说，因为我在队里主要负责编程和模型部分，虽然真的打起比赛来完全没有按照分工进行，但是因为自己是计算机出身，又是学人工智能的，所以对于常见的机器学习的模型，都还算了解，再加上python各种库都有，所以其实真的做起来感觉编程的压力不算很大。</p><h1 id="开赛">开赛</h1><p>因为我是一个人住在宿舍，所以我的宿舍就成了我们打比赛的场地，赛前我专门买了一张小桌子，后来成了我们开会讨论和聚在一起吃外卖的餐桌，还有一个同学的办公桌。</p><p>第一天开赛的时候，我们很快就决定了做E题，一道医学的数据分析的题，倒不是因为其他什么原因，纯粹是我们一遍看下来只能看得懂这道题，果然这道题也是绝大多数人的选择。</p><p>其实刚开赛拿到题目，我就感觉这很像我本科做的一些机器学习的大作业，感觉这不就是一个泰坦尼克号生存概率的问题和洛杉矶房价预测的综合吗？不过是各种各样的参数多了一些，要好好地根据问题做一些特征工程，问题更加复杂一些，不能用简单的线性回归去拟合了，后面还得加一些和问题相关的聚类和分析。</p><p>我们开赛后就没有按照最先预计地分成编程、论文和模型三个人分别做，主要是这样大家没办法同步开展工作，而且大家都是电信、计算机专业，拿着也都能做，所以最后变成了一个人主要负责一个大题，各自开展工作。</p><h1 id="赛中">赛中</h1><p>我主要负责数据的处理和后续建模做二分类、多分类、概率预测，这些问题基本上都是机器学习入门的练习，只不过这道题有很多特殊性。</p><p>从数据处理上来说，数据量很小，而且样本的分布又特别不均匀，数据的特征特别多，这些特征之间又有很强的关联性，数据分布在多个表格中，不同表格中的数据还存在冲突矛盾。总之数据处理就是一件繁琐、重复又很关键的工作。其实我们最后也没有从理论山找到一个较好的选取特征的方法，但是数据中有很多肿瘤的形态学参数，肯定要做数据降维，最后我们用相关性分析做了一些简单的筛选，总体来看有一定的效果。</p><p>毕竟是建模大赛，模型的选取其实很重要，但是我们之前都没有数模的经验，而且平时都是做深度学习的，最这些机器学习的模型了解，但不多，而且题目里过小的数据量完全杜绝了上深度学习的可能性，所以最后我们选择了最简单但是很有效的方法，把常见的机器学习模型都拿来试一遍，做多折的交叉验证，什么模型的效果好，就拿什么模型做。</p><p>最后试了各种各样的模型，每个模型又试了好多参数，最终选出了几个效果还不错的模型，再做一点组合、投票决策之类的，就算完工。</p><p>其他队友还做了拟合、聚类的工作，不过因为我自己没做那一部分，就不详细展开了。</p><h1 id="论文">论文</h1><p>其实感觉对于数模来讲，最重要的还是要论文写得好，起码图和表要做的丰富且好看。因为我们三个人都要写论文，所以overleaf整起来，语言上尽量学术，结构上有一条主线贯穿每一个章节，每个小章节内用一个流程图讲清楚做了什么工作，是怎么做的。</p><p>其实我们倒也没有刻意地堆字数，写着写着就写了五十多页，不过我个人还是觉得清晰的结构，章节内明确的流程，精美的图标才是关键。</p><h1 id="小结">小结</h1><p>其实总体来说，我们组因为三个人都还挺负责的，大家都从头做到尾坚持了下来，中间除了有一天三个人都有必须去上的课没工作，最后一天熬到了早上六点通宵赶了论文外，都是正常的工作时间，一个情绪稳定、踏实干活的队内氛围还是很重要的。</p><p>最后感谢一下我的两位队友，很开心的一次经历。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python多线程</title>
      <link href="/2023/10/31/python%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
      <url>/2023/10/31/python%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>最近用到python的多线程，因此整理了一下，仅做记录。</p><h1 id="创建多线程">创建多线程</h1><p>要创建一个简单的多线程程序，其中一个线程从API中获取订单信息，另一个线程将订单分配给无人机群，我们可以使用Python的**<code>threading</code>**模块。这里我们模拟API调用和无人机分配，因为没有具体的API和无人机群实现细节。</p><ol><li><strong>获取订单的线程</strong>：模拟从API中获取新订单，实际使用中，这里应替换为真实的API调用。</li><li><strong>分配订单的线程</strong>：获取到新订单后，模拟分配这些订单到无人机上。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟的订单队列</span></span><br><span class="line">order_queue = queue.Queue()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟从API获取订单</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fetch_orders</span>():</span><br><span class="line">    order_id = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 模拟API调用的延时</span></span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        order_id += <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;获取到新订单: <span class="subst">&#123;order_id&#125;</span>&quot;</span>)</span><br><span class="line">        order_queue.put(order_id)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟将订单分配给无人机</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">assign_orders</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 等待新订单</span></span><br><span class="line">        new_order = order_queue.get()</span><br><span class="line">        <span class="comment"># 模拟分配订单到无人机的处理时间</span></span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;订单 <span class="subst">&#123;new_order&#125;</span> 已分配到无人机&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建并启动线程</span></span><br><span class="line">threading.Thread(target=fetch_orders, daemon=<span class="literal">True</span>).start()</span><br><span class="line">threading.Thread(target=assign_orders, daemon=<span class="literal">True</span>).start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为了示例，我们让主线程持续运行10秒</span></span><br><span class="line">time.sleep(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;程序完成&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="控制线程结束">控制线程结束</h1><p><strong>控制当分配完10个订单后，获取订单的程序关闭，分配的线程分配完所有的订单后关闭</strong></p><ol><li><strong>控制订单获取数量</strong>：获取订单的线程在获取到一定数量（比如10个）的订单后停止。</li><li><strong>完成订单分配后关闭分配线程</strong>：分配线程在队列为空且获取订单的线程已经结束时停止。</li></ol><p>为此，我们引入几个改变：</p><ul><li>使用一个共享变量（如**<code>threading.Event</code>**）来通知分配线程，订单获取线程已经停止。</li><li>分配线程在队列变空且收到订单获取线程停止的通知后结束。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"></span><br><span class="line">order_queue = queue.Queue()</span><br><span class="line">max_orders = <span class="number">10</span>  <span class="comment"># 最大订单数</span></span><br><span class="line">orders_fetched = threading.Event()  <span class="comment"># 用于通知订单获取已完成</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟从API获取订单</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fetch_orders</span>(<span class="params">api_id</span>):</span><br><span class="line">    <span class="keyword">for</span> order_id <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, max_orders + <span class="number">1</span>):</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[API <span class="subst">&#123;api_id&#125;</span>] 获取到新订单: <span class="subst">&#123;order_id&#125;</span>&quot;</span>)</span><br><span class="line">        order_queue.put(order_id)</span><br><span class="line">    orders_fetched.<span class="built_in">set</span>()  <span class="comment"># 设置事件，通知订单获取已完成</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟将订单分配给无人机</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">assign_orders</span>(<span class="params">drone_id</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> (orders_fetched.is_set() <span class="keyword">and</span> order_queue.empty()):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            new_order = order_queue.get(timeout=<span class="number">3</span>)  <span class="comment"># 设置超时，避免无限等待</span></span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[无人机 <span class="subst">&#123;drone_id&#125;</span>] 订单 <span class="subst">&#123;new_order&#125;</span> 已分配&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> queue.Empty:</span><br><span class="line">            <span class="comment"># 如果等待时间过长没有订单，检查是否应该退出</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[无人机 <span class="subst">&#123;drone_id&#125;</span>] 所有订单已分配完毕，线程关闭。&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动线程</span></span><br><span class="line">threading.Thread(target=fetch_orders, args=(<span class="number">1</span>,), daemon=<span class="literal">True</span>).start()</span><br><span class="line">threading.Thread(target=assign_orders, args=(<span class="number">1</span>,), daemon=<span class="literal">False</span>).start()</span><br></pre></td></tr></table></figure><ul><li><strong><code>fetch_orders</code></strong> 函数在处理指定数量（<strong><code>max_orders</code></strong>）的订单后会退出循环，并通过**<code>orders_fetched.set()</code>**通知其他线程。</li><li><strong><code>assign_orders</code></strong> 线程会检查两个条件：是否接收到了结束通知，以及队列是否为空。当两个条件同时满足时，表示所有订单都已经分配完毕，线程可以安全退出。</li></ul><p>这种设计模式可以确保所有的订单被处理后，程序才完全结束运行。其中**<code>queue.Empty</code><strong>异常处理是为了防止在</strong><code>order_queue.get()</code>**调用中无限期地阻塞，尤其是在获取订单的线程已经停止的情况下。通过设置一个合理的超时时间，我们可以在队列空闲时周期性地检查队列状态。</p><h1 id="多线程共享单一资源">多线程共享单一资源</h1><p>把无人机的订单处理时间作为参数传入分配函数，用与模拟不同无人机的能力不同</p><p>我们可以将处理时间作为一个参数传递给**<code>assign_orders</code>**函数。这样，每个无人机线程可以根据自己的处理速度来模拟订单的处理时间。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"></span><br><span class="line">order_queue = queue.Queue()</span><br><span class="line">max_orders = <span class="number">10</span></span><br><span class="line">orders_fetched = threading.Event()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟从API获取订单</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fetch_orders</span>(<span class="params">api_id</span>):</span><br><span class="line">    <span class="keyword">for</span> order_id <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, max_orders + <span class="number">1</span>):</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[API <span class="subst">&#123;api_id&#125;</span>] 获取到新订单: <span class="subst">&#123;order_id&#125;</span>&quot;</span>)</span><br><span class="line">        order_queue.put(order_id)</span><br><span class="line">    orders_fetched.<span class="built_in">set</span>()  <span class="comment"># 通知订单获取完毕</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟将订单分配给无人机</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">assign_orders</span>(<span class="params">drone_id, processing_time</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> (orders_fetched.is_set() <span class="keyword">and</span> order_queue.empty()):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            new_order = order_queue.get(timeout=<span class="number">3</span>)</span><br><span class="line">            time.sleep(processing_time)  <span class="comment"># 根据无人机的处理能力进行等待</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[无人机 <span class="subst">&#123;drone_id&#125;</span>] 订单 <span class="subst">&#123;new_order&#125;</span> 已分配&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> queue.Empty:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[无人机 <span class="subst">&#123;drone_id&#125;</span>] 所有订单已分配完毕，线程关闭。&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动线程</span></span><br><span class="line">threading.Thread(target=fetch_orders, args=(<span class="number">1</span>,), daemon=<span class="literal">True</span>).start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建不同处理能力的三个无人机分配线程</span></span><br><span class="line">drones = [(<span class="number">1</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">2</span>), (<span class="number">3</span>, <span class="number">1.5</span>)]  <span class="comment"># (无人机ID, 处理时间)</span></span><br><span class="line"><span class="keyword">for</span> drone_id, processing_time <span class="keyword">in</span> drones:</span><br><span class="line">    threading.Thread(target=assign_orders, args=(drone_id, processing_time), daemon=<span class="literal">False</span>).start()</span><br></pre></td></tr></table></figure><ul><li>每个无人机线程通过**<code>processing_time</code><strong>参数接收了一个处理时间的值，这模拟了不同无人机的处理能力。例如，</strong><code>processing_time</code><strong>为1的无人机会比</strong><code>processing_time</code>**为2的无人机更快地处理订单。</li><li>我们创建了三个无人机线程，每个线程都有其自己的处理时间。例如，无人机1处理时间为1秒，无人机2处理时间为2秒，无人机3处理时间为1.5秒。</li></ul><ol><li><strong><code>fetch_orders</code></strong> 函数仍然负责生成最多**<code>max_orders</code><strong>个订单，并在完成后设置</strong><code>orders_fetched</code>**事件。</li><li>我们创建了三个无人机线程（<strong><code>assign_orders</code></strong>），每个线程代表一个不同的无人机（无人机ID从1到3）。这些线程会并发地从**<code>order_queue</code>**中获取并处理订单。</li><li>每个无人机线程在处理时，都会尝试从队列中获取订单。如果队列为空，它将会等待一段时间（这里设置为3秒），然后再次检查是否还有订单。如果没有新的订单并且已知所有订单都已获取（即**<code>orders_fetched</code>**被设置），则线程将退出。</li></ol><p><strong>安全访问</strong></p><p>代码示例中，由于使用了**<code>queue.Queue</code><strong>，这种情况不会发生。</strong><code>queue.Queue</code>** 是线程安全的，这意味着在任何时候只有一个线程能够从队列中取出一个特定的元素。当一个线程从队列中获取一个项目时，该项目会被标记为已删除，其他线程无法再次获取到它。</p><p>这个特性是通过内部锁实现的。当一个线程调用**<code>get()</code><strong>方法并从队列中取出一个项目时，任何其他试图访问该队列的线程将会被阻塞，直到该项目被成功处理（即线程完成了对</strong><code>get()</code>**的调用）。这就确保了即使多个线程试图同时从队列中获取项目，每个项目也只会被一个线程处理。</p><p>因此，在这个代码中，三个无人机线程将会安全地、独立地从队列中获取并处理订单，而不会发生两个线程处理同一个订单的情况。每个订单一旦被一个无人机线程获取，就会从队列中移除，不会再被其他无人机线程访问到。</p><h1 id="多个发布源">多个发布源</h1><p>使用两个订单发布API，且让它们以不同的频率发布订单，我们可以对**<code>fetch_orders</code>**函数稍作调整，使其接受一个表示发布频率的参数。这个参数将决定API获取订单的间隔时间。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"></span><br><span class="line">order_queue = queue.Queue()</span><br><span class="line">max_orders = <span class="number">10</span></span><br><span class="line">orders_fetched = threading.Event()</span><br><span class="line">order_count = <span class="number">0</span>  <span class="comment"># 记录获取的订单总数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 锁对象，用于同步对共享变量order_count的访问</span></span><br><span class="line">count_lock = threading.Lock()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟从API获取订单</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fetch_orders</span>(<span class="params">api_id, fetch_interval</span>):</span><br><span class="line">    <span class="keyword">global</span> order_count</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">with</span> count_lock:</span><br><span class="line">            <span class="keyword">if</span> order_count &gt;= max_orders:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            order_count += <span class="number">1</span></span><br><span class="line">            order_id = order_count</span><br><span class="line"></span><br><span class="line">        time.sleep(fetch_interval)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[API <span class="subst">&#123;api_id&#125;</span>] 获取到新订单: <span class="subst">&#123;order_id&#125;</span>&quot;</span>)</span><br><span class="line">        order_queue.put(order_id)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查是否所有订单都已获取</span></span><br><span class="line">    <span class="keyword">with</span> count_lock:</span><br><span class="line">        <span class="keyword">if</span> order_count &gt;= max_orders:</span><br><span class="line">            orders_fetched.<span class="built_in">set</span>()  <span class="comment"># 通知订单获取完毕</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟将订单分配给无人机</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">assign_orders</span>(<span class="params">drone_id, processing_time</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> (orders_fetched.is_set() <span class="keyword">and</span> order_queue.empty()):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            new_order = order_queue.get(timeout=<span class="number">3</span>)</span><br><span class="line">            time.sleep(processing_time)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[无人机 <span class="subst">&#123;drone_id&#125;</span>] 订单 <span class="subst">&#123;new_order&#125;</span> 已分配&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> queue.Empty:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[无人机 <span class="subst">&#123;drone_id&#125;</span>] 所有订单已分配完毕，线程关闭。&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动线程</span></span><br><span class="line">threading.Thread(target=fetch_orders, args=(<span class="number">1</span>, <span class="number">2</span>), daemon=<span class="literal">True</span>).start()  <span class="comment"># API 1，间隔2秒</span></span><br><span class="line">threading.Thread(target=fetch_orders, args=(<span class="number">2</span>, <span class="number">3</span>), daemon=<span class="literal">True</span>).start()  <span class="comment"># API 2，间隔3秒</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建不同处理能力的三个无人机分配线程</span></span><br><span class="line">drones = [(<span class="number">1</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">2</span>), (<span class="number">3</span>, <span class="number">1.5</span>)]</span><br><span class="line"><span class="keyword">for</span> drone_id, processing_time <span class="keyword">in</span> drones:</span><br><span class="line">    threading.Thread(target=assign_orders, args=(drone_id, processing_time), daemon=<span class="literal">False</span>).start()</span><br></pre></td></tr></table></figure><ol><li>**<code>fetch_orders</code><strong>函数现在接受一个</strong><code>fetch_interval</code>**参数，它决定了API获取订单的间隔时间。这样我们可以为两个API线程设置不同的获取频率。</li><li>使用了全局变量**<code>order_count</code><strong>来记录已获取的订单数量，并使用</strong><code>count_lock</code><strong>来确保在修改</strong><code>order_count</code>**时的线程安全。</li><li>当**<code>order_count</code><strong>达到或超过</strong><code>max_orders</code><strong>时，两个API线程都会停止获取订单，并通过</strong><code>orders_fetched.set()</code>**来通知订单处理线程可以结束了。</li></ol><p>这个设计允许两个API线程以不同的频率工作，模拟了更为复杂的现实场景，其中不同的数据源可能以不同的速率提供数据。同时，引入锁是为了确保在多线程环境中，对共享资源（<strong><code>order_count</code></strong>）的访问是安全的。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenAI-API-中文版</title>
      <link href="/2023/10/18/openai-api/"/>
      <url>/2023/10/18/openai-api/</url>
      
        <content type="html"><![CDATA[<h1 id="openai-api-中文版">OpenAI-API-中文版</h1><h2 id="一-introduction-介绍">一. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fintroduction">Introduction</a> 介绍</h2><p>如果你想使用我们的API，你可以通过 <strong>HTTP</strong> 请求从任何语言与 API 进行交互，也可以使用我们的官方 Python 绑定、官方 Node.js库 或 <strong><a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Flibraries%2Fcommunity-libraries">社区维护的库</a></strong>。</p><p>若要安装官方 Python 绑定，请运行以下命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install openai</span><br></pre></td></tr></table></figure><p>要安装官方的 Node.js 库，请在您的 Node.js 项目目录中运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install openai</span><br></pre></td></tr></table></figure><h2 id="二-authentication-认证">二. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fauthentication">Authentication</a> 认证</h2><h3 id="1-openai-api-key">1. OpenAI-API-KEY</h3><p><strong>OpenAI API</strong> 使用 API密钥 进行身份验证。请访问您的 <strong><a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Faccount%2Fapi-keys">API密钥</a></strong> 页面以检索您在请求中使用的API密钥。</p><p><strong>请记住，您的API密钥是机密的！</strong> 不要与他人分享它或在任何客户端代码（浏览器、应用程序）中公开它。生产请求必须通过您自己的后端服务器路由，其中您的 API密钥 可以从环境变量或密钥管理服务中安全加载。</p><p>所有API请求都应在 <code>Authorization</code> HTTP标头中包含您的API密钥，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ht</span><br><span class="line"># 注意Bearer OPENAI_API_KEY，Bearer的后面是有一个空格的</span><br><span class="line">Authorization: Bearer OPENAI_API_KEY</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-openai-organization">2. OpenAI-Organization</h3><p><strong>Requesting organization 请求组织</strong></p><p>对于属于多个组织的用户，您可以传递一个 <strong>表头</strong> 来指定用于 API请求 的组织。这些 API请求 的使用将计入指定组织的订阅配额。</p><p>示例 <strong>curl</strong> 命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/models \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -H &quot;OpenAI-Organization: org-gth0C8mT2wnKealyCkSRrpQk&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用 <strong>openai Python包</strong> 的示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> openai</span><br><span class="line">openai.organization = <span class="string">&quot;org-gth0C8mT2wnKealyCkSRrpQk&quot;</span>openai.api_key = os.getenv(<span class="string">&quot;OPENAI_API_KEY&quot;</span>)</span><br><span class="line">openai.Model.<span class="built_in">list</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用 <strong>openai Node.js包</strong> 的示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import &#123; Configuration, OpenAIApi &#125; from &quot;openai&quot;;</span><br><span class="line">const configuration = new Configuration(&#123;</span><br><span class="line">    organization: &quot;org-gth0C8mT2wnKealyCkSRrpQk&quot;,</span><br><span class="line">    apiKey: process.env.OPENAI_API_KEY,</span><br><span class="line">&#125;);</span><br><span class="line">const openai = new OpenAIApi(configuration);</span><br><span class="line">const response = await openai.listEngines();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以在 <strong><a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Faccount%2Forg-settings">组织设置</a></strong> 页面上找到 <strong>组织ID</strong></p><h2 id="三-making-requests-提出请求">三. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fmaking-requests">Making requests</a> 提出请求</h2><p>您可以将下面的命令粘贴到您的终端中，以运行您的第一个 API请求。请确保将 <strong>$OPENAI_API_KEY</strong> 替换为您的 <strong>API密钥</strong>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/chat/completions \</span><br><span class="line">  -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -d &#x27;&#123;</span><br><span class="line">     &quot;model&quot;: &quot;gpt-3.5-turbo&quot;,</span><br><span class="line">     &quot;messages&quot;: [&#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Say this is a test!&quot;&#125;],</span><br><span class="line">     &quot;temperature&quot;: 0.7</span><br><span class="line">   &#125;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>此请求查询 <code>gpt-3.5-turbo模型</code>，以完成从提示“Say this is a test”开始的文本。您应该会收到类似以下内容的响应：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="string">&quot;id&quot;</span>:<span class="string">&quot;chatcmpl-abc123&quot;</span>,</span><br><span class="line">   <span class="string">&quot;object&quot;</span>:<span class="string">&quot;chat.completion&quot;</span>,</span><br><span class="line">   <span class="string">&quot;created&quot;</span>:<span class="number">1677858242</span>,</span><br><span class="line">   <span class="string">&quot;model&quot;</span>:<span class="string">&quot;gpt-3.5-turbo-0301&quot;</span>,</span><br><span class="line">   <span class="string">&quot;usage&quot;</span>:&#123;</span><br><span class="line">      <span class="string">&quot;prompt_tokens&quot;</span>:<span class="number">13</span>,</span><br><span class="line">      <span class="string">&quot;completion_tokens&quot;</span>:<span class="number">7</span>,</span><br><span class="line">      <span class="string">&quot;total_tokens&quot;</span>:<span class="number">20</span></span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="string">&quot;choices&quot;</span>:[</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="string">&quot;message&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;role&quot;</span>:<span class="string">&quot;assistant&quot;</span>,</span><br><span class="line">            <span class="string">&quot;content&quot;</span>:<span class="string">&quot;\n\nThis is a test!&quot;</span></span><br><span class="line">         &#125;,</span><br><span class="line">         <span class="string">&quot;finish_reason&quot;</span>:<span class="string">&quot;stop&quot;</span>,</span><br><span class="line">         <span class="string">&quot;index&quot;</span>:<span class="number">0</span></span><br><span class="line">      &#125;</span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在您已经生成了第一个聊天完成。我们可以看到 <code>finish_reason</code> 是 <code>stop</code>，这意味着API返回了模型生成的完整完成。在上面的请求中，我们只生成了一条消息，但您可以将 <code>n</code> 参数设置为生成多个消息选项。在此示例中，<code>gpt-3.5-turbo</code> 被用于更传统的 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fcompletion%2Fintroduction">文本完成任务</a>。该模型也针对 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fchat">聊天应用</a> 进行了优化。</p><h2 id="四-models-模型">四. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fmodels">Models</a> 模型</h2><p>列出并描述 API 中可用的各种模型。您可以参考 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fmodels">模型文档</a> 以了解可用的模型以及它们之间的差异。</p><h3 id="1-list-models-列出模型">1. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fmodels%2Flist">List models</a> 列出模型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET</span><br><span class="line">https://api.openai.com/v1/models</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>列出当前可用的模型，并提供有关每个模型的基本信息，例如所有者和可用性。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/models \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;model-id-0&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;model&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;owned_by&quot;</span><span class="punctuation">:</span> <span class="string">&quot;organization-owner&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;permission&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>...<span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;model-id-1&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;model&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;owned_by&quot;</span><span class="punctuation">:</span> <span class="string">&quot;organization-owner&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;permission&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>...<span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;model-id-2&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;model&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;owned_by&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openai&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;permission&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>...<span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="2-retrieve-model-检索模型">2. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fmodels%2Fretrieve">Retrieve model</a> 检索模型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET</span><br><span class="line">https://api.openai.com/v1/models/&#123;model&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>检索模型实例，提供有关模型的基本信息，例如所有者和权限。</p><p>其中，<code>model</code> 为必填的字符串类型，用于此请求的模型的 ID。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/models/text-davinci-003 \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text-davinci-003&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;model&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;owned_by&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openai&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;permission&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>...<span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="五-completions-完成">五. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fcompletions">Completions</a> 完成</h2><p>给定一个提示，模型将返回一个或多个预测的完成，并且还可以在每个位置返回替代令牌的概率。</p><h3 id="1-create-completion">1. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fcompletions%2Fcreate">Create completion</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST</span><br><span class="line">https://api.openai.com/v1/completions</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>为提供的提示和参数创建完成。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/completions \</span><br><span class="line">  -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -d &#x27;&#123;</span><br><span class="line">    &quot;model&quot;: &quot;text-davinci-003&quot;,</span><br><span class="line">    &quot;prompt&quot;: &quot;Say this is a test&quot;,</span><br><span class="line">    &quot;max_tokens&quot;: 7,</span><br><span class="line">    &quot;temperature&quot;: 0</span><br><span class="line">  &#125;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmpl-uqkvlQyYK7bGYrRHQ0eXlWi7&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text_completion&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created&quot;</span><span class="punctuation">:</span> <span class="number">1589478378</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text-davinci-003&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;choices&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n\nThis is indeed a test&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;logprobs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;finish_reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;length&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;usage&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prompt_tokens&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;completion_tokens&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;total_tokens&quot;</span><span class="punctuation">:</span> <span class="number">12</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="request-body-入参详解">Request body(入参详解)</h3><blockquote><p>model （string，必填）</p><p>要使用的模型的 ID。可以使用 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fmodels%2Flist">列表模型API</a>  (GET <a href="https://link.juejin.cn/?target=https%3A%2F%2Fapi.openai.com%2Fv1%2Fmodels">api.openai.com/v1/models</a>) 查看所有可用模型，或参阅 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fmodels%2Foverview">模型概述</a> 了解它们的描述。</p><ul><li><strong><code>prompt</code> （string or array，选填，Defaults to &lt;|endoftext|&gt;）</strong></li></ul><p>用于生成完成、编码为字符串、字符串数组、标记数组或标记数组数组的提示。</p><p>注意 |endoftext| 是模型在训练期间看到的文档分隔符，因此如果未指定提示，模型将生成，就像从新文档的开头一样。</p><ul><li><strong><code>suffix</code> （string，选填，Defaults to null）</strong></li></ul><p>完成插入文本后的后缀。</p><ul><li><strong><code>max_tokens</code> （integer，选填，Defaults to 16）</strong></li></ul><p>完成时要生成的最大 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Ftokenizer">token</a> 数。</p><p>提示 <code>max_tokens</code> 的 token 计数不能超过模型的上下文长度。大多数模型的上下文长度为 2048 个令牌（最新模型除外，它支持 4096）</p><ul><li><strong><code>temperature</code> （number，选填，Defaults to 1）</strong></li></ul><p>使用哪个采样温度，在 <strong>0和2之间</strong>。</p><p>较高的值，如0.8会使输出更随机，而较低的值，如0.2会使其更加集中和确定性。</p><p>我们通常建议修改这个（<code>temperature</code> ）为 <code>top_p</code> 但两者不能同时存在，二选一。</p><ul><li><strong><code>top_p</code> （number，选填，Defaults to 1）</strong></li></ul><p>一种替代温度采样的方法叫做核心采样，模型会考虑到具有 top_p 概率质量的标记结果。因此，0.1 表示只有占前 10% 概率质量的标记被考虑。</p><p>我们通常建议修改这个（<code>top_p</code> ）或者 <code>temperature</code>，但不要同时修改两者。</p><ul><li><strong><code>n</code> （integer，选填，Defaults to 1）</strong></li></ul><p>每个 <code>prompt</code> 生成的完成次数。</p><p>注意：由于此参数会生成许多完成，因此它会快速消耗您的令牌配额。小心使用，并确保对 <code>max_tokens</code> 和 <code>stop</code> 进行合理的设置。</p><ul><li><strong><code>stream</code> （boolean，选填，Defaults to false）</strong></li></ul><p>是否返回部分进度流。如果设置，令牌将作为数据服务器推送事件随着它们变得可用而发送，流通过 <code>data: [DONE]</code> 消息终止。</p><ul><li><strong><code>logprobs</code> （integer，选填，Defaults to null）</strong></li></ul><p>在 <code>logprobs</code> 返回的最有可能的标记列表中，包括所选标记和对应的对数概率。</p><p>例如，如果 <code>logprobs</code> 为 5，则 API 将返回一个由 5 个最有可能的标记组成的列表。API 总是会返回采样标记的对数概率，因此响应中可能会有多达 <code>logprobs+1</code> 个元素。</p><p><code>logprobs</code> 的最大值为 5。如果您需要更多，请通过我们的 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fhelp.openai.com%2Fen%2F">帮助中心</a> 联系我们并描述您的用例。</p><ul><li><strong><code>echo</code> （boolean，选填，Defaults to false）</strong></li></ul><p>除了完成之外，还回显提示</p><ul><li><strong><code>stop</code> （string or array，选填，Defaults to null）</strong></li></ul><p>最多生成4个序列，API将停止生成更多的标记。返回的文本不包含停止序列。</p><ul><li><strong><code>presence_penalty</code> （number，选填，Defaults to 0）</strong></li></ul><p>介于 <strong>-2.0 和 2.0 之间</strong>的数字。正值会根据它们是否出现在文本中迄今为止来惩罚新令牌，从而增加模型谈论新主题的可能性。</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fparameter-details">请参阅有关频率和状态惩罚的更多信息</a></p><ul><li><strong><code>frequency_penalty</code> （number，选填，Defaults to 0）</strong></li></ul><p>介于-2.0和2.0之间的数字。正值会根据文本中新令牌的现有频率对其进行惩罚，从而降低模型重复相同行的可能性。</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fparameter-details">请参阅有关频率和存在惩罚的更多信息</a></p><ul><li><strong><code>best_of</code> （integer，选填，Defaults to 1）</strong></li></ul><p>在生成服务器端生成 <code>best_of</code> 完成，并返回“最佳”（每个标记具有最高对数概率的那一个）。结果无法流式传输。</p><p>当与 <code>n</code> 一起使用时，<code>best_of</code> 控制候选完成的数量，<code>n</code> 指定要返回多少个 - <code>best_of</code> 必须大于 <code>n</code>。</p><p>注意：由于此参数生成许多完成，因此可能会快速消耗您的令牌配额。请小心使用并确保 <code>max_tokens</code> 和 <code>stop</code> 设置合理。</p><ul><li><strong><code>logit_bias</code> （map，选填，Defaults to null）</strong></li></ul><p>修改指定标记在完成中出现的可能性。</p><p>接受一个JSON对象，将标记（由GPT分词器中的标记ID指定）映射到从 -100 到 100 的相关偏差值。您可以使用此 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Ftokenizer%3Fview%3Dbpe">分词器工具</a>（适用于GPT-2和GPT-3）将文本转换为令牌ID。数学上，在采样之前，模型生成的 logits 会添加偏差。确切的效果因模型而异，但是介于-1和1之间的值应该会减少或增加选择的可能性；像 -100 或 100 这样的值应该会导致相关令牌被禁止或独占选择。</p><p>例如，您可以传递 <code>&#123;&quot;50256&quot;: -100&#125;</code> 来防止生成</p><ul><li><strong><code>user</code> （string，选填）</strong></li></ul><p>一个唯一的标识符，代表您的终端用户，可以帮助OpenAI监测和检测滥用。<a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fsafety-best-practices%2Fend-user-ids">了解更多信息</a>。</p></blockquote><h2 id="六-chat-聊天">六. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fchat">Chat</a> 聊天</h2><p>给定一组描述对话的消息列表，模型将返回一个回复。</p><h3 id="1-create-chat-completion">1. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fchat%2Fcreate">Create chat completion</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST</span><br><span class="line">https://api.openai.com/v1/chat/completions</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>为给定的聊天对话创建模型响应。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/chat/completions \</span><br><span class="line">  -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -d &#x27;&#123;</span><br><span class="line">    &quot;model&quot;: &quot;gpt-3.5-turbo&quot;,</span><br><span class="line">    &quot;messages&quot;: [&#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;&#125;]</span><br><span class="line">  &#125;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;chatcmpl-123&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;chat.completion&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created&quot;</span><span class="punctuation">:</span> <span class="number">1677652288</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;choices&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assistant&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n\nHello there, how may I assist you today?&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;finish_reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stop&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;usage&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prompt_tokens&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;completion_tokens&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;total_tokens&quot;</span><span class="punctuation">:</span> <span class="number">21</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>Request body(入参详解)</strong><br>• <strong><code>model</code> （string，必填）</strong><br>要使用的模型ID。有关哪些模型适用于Chat API的详细信息，请查看 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fmodels%2Fmodel-endpoint-compatibility">模型端点兼容性表</a><br>• <strong><code>messages</code> （array，必填）</strong><br>迄今为止描述对话的消息列表<br>◦ <strong><code>role</code> （string，必填）</strong><br>此消息的作者角色。<code>system</code> 、<code>user</code> 或 <code>assistant</code> 之一<br>◦ <strong><code>content</code> （string，必填）</strong><br>消息的内容<br>◦ <strong><code>name</code> （string，选填）</strong><br>此消息的作者的姓名。可以包含 a-z、A-Z、0-9 和下划线，最大长度为 64 个字符<br>• <strong><code>temperature</code> （number，选填，Defaults to 1）</strong><br>使用哪个采样温度，在 <strong>0和2之间</strong>。<br>较高的值，如0.8会使输出更随机，而较低的值，如0.2会使其更加集中和确定性。<br>我们通常建议修改这个（<code>temperature</code> ）为 <code>top_p</code> 但两者不能同时存在，二选一。<br>• <strong><code>top_p</code> （number，选填，Defaults to 1）</strong><br>一种替代温度采样的方法叫做核心采样，模型会考虑到具有 top_p 概率质量的标记结果。因此，0.1 表示只有占前 10% 概率质量的标记被考虑。<br>我们通常建议修改这个（<code>top_p</code> ）或者 <code>temperature</code>，但不要同时修改两者。<br>• <strong><code>n</code> （integer，选填，Defaults to 1）</strong><br>每个输入消息要生成多少聊天完成选项数<br>• <strong><code>stream</code> （boolean，选填，Defaults to false）</strong><br>如果设置了，将发送部分消息增量，就像在 ChatGPT 中一样。令牌将作为数据 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FAPI%2FServer-sent_events%2FUsing_server-sent_events%23event_stream_format">服务器推送事件</a> 随着它们变得可用而被发送，流通过 <code>data: [DONE]</code> 消息终止。请参阅OpenAI Cookbook 以获取 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fopenai%2Fopenai-cookbook%2Fblob%2Fmain%2Fexamples%2FHow_to_stream_completions.ipynb">示例代码</a>。<br>• <strong>stop （string or array，选填，Defaults to null）</strong><br>最多生成4个序列，API将停止生成更多的标记。<br>• <strong><code>max_tokens</code> （integer，选填，Defaults to inf）</strong><br>在聊天完成中生成的最大 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Ftokenizer">tokens</a> 数。<br>输入令牌和生成的令牌的总长度受模型上下文长度的限制。<br>• <strong><code>presence_penalty</code> （number，选填，Defaults to 0）</strong><br>介于 <strong>-2.0 和 2.0 之间</strong>的数字。正值会根据它们是否出现在文本中迄今为止来惩罚新令牌，从而增加模型谈论新主题的可能性。<br><a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fparameter-details">请参阅有关频率和状态惩罚的更多信息</a><br>• <strong><code>frequency_penalty</code> （number，选填，Defaults to 0）</strong><br>介于-2.0和2.0之间的数字。正值会根据文本中新令牌的现有频率对其进行惩罚，从而降低模型重复相同行的可能性。<br><a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fparameter-details">请参阅有关频率和存在惩罚的更多信息</a><br>• <strong><code>logit_bias</code> （map，选填，Defaults to null）</strong><br>修改完成时指定标记出现的可能性。<br>接受一个JSON对象，将标记（由分词器中的标记ID指定）映射到从 -100 到 100 的相关偏差值。在采样之前，模型生成的logits会加上这个偏差。确切的影响因模型而异，但是 -1 到 1 之间的值应该会减少或增加选择概率；像 -100 或 100 这样的值应该会导致相关标记被禁止或独占选择。<br>• <strong><code>user</code> （string，选填）</strong><br>一个唯一的标识符，代表您的终端用户，可以帮助OpenAI监测和检测滥用。<a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fsafety-best-practices%2Fend-user-ids">了解更多信息</a>。</p><h2 id="七-edits-编辑">七. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fedits">Edits</a> 编辑</h2><p>给定一个提示和一条指令，模型将返回提示的编辑版本。</p><h3 id="1-create-edit">1. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fedits%2Fcreate">Create edit</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST</span><br><span class="line">https://api.openai.com/v1/edits</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>为提供的输入、指令和参数创建一个新的编辑。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/edits \</span><br><span class="line">  -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -d &#x27;&#123;</span><br><span class="line">    &quot;model&quot;: &quot;text-davinci-edit-001&quot;,</span><br><span class="line">    &quot;input&quot;: &quot;What day of the wek is it?&quot;,</span><br><span class="line">    &quot;instruction&quot;: &quot;Fix the spelling mistakes&quot;</span><br><span class="line">  &#125;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;edit&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created&quot;</span><span class="punctuation">:</span> <span class="number">1589478378</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;choices&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;What day of the week is it?&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;usage&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prompt_tokens&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;completion_tokens&quot;</span><span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;total_tokens&quot;</span><span class="punctuation">:</span> <span class="number">57</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Request body(入参详解)</strong><br>• <strong><code>model</code> （string，必填）</strong><br>要使用的模型ID。您可以在此端点中使用 <code>text-davinci-edit-001</code> 或 <code>code-davinci-edit-001</code> 模型。<br>• <strong><code>input</code> （string，选填，Defaults to ‘’）</strong><br>用作编辑起点的输入文本。<br>• <strong><code>instruction</code> （string，必填）</strong><br>指导模型如何编辑提示的说明。<br>• <strong><code>n</code> （integer，选填，Defaults to 1）</strong><br>输入和指令需要生成多少次编辑。<br>• <strong><code>temperature</code> （number，选填，Defaults to 1）</strong><br>使用哪个采样温度，在 <strong>0和2之间</strong>。<br>较高的值，如0.8会使输出更随机，而较低的值，如0.2会使其更加集中和确定性。<br>我们通常建议修改这个（<code>temperature</code> ）为 <code>top_p</code> 但两者不能同时存在，二选一。<br>• <strong><code>top_p</code> （number，选填，Defaults to 1）</strong><br>一种替代温度采样的方法叫做核心采样，模型会考虑到具有 top_p 概率质量的标记结果。因此，0.1 表示只有占前 10% 概率质量的标记被考虑。<br>我们通常建议修改这个（<code>top_p</code> ）或者 <code>temperature</code>，但不要同时修改两者。</p><h2 id="八-images-图像">八. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fimages">Images</a> 图像</h2><p>给定一个提示和/或输入图像，模型将生成一张新的图像。</p><p>相关指南：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fimages">图像生成</a>。</p><h3 id="1-create-image">1. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fimages%2Fcreate">Create image</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST</span><br><span class="line">https://api.openai.com/v1/images/generations</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>根据提示创建图像。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/images/generations \</span><br><span class="line">  -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -d &#x27;&#123;</span><br><span class="line">    &quot;prompt&quot;: &quot;A cute baby sea otter&quot;,</span><br><span class="line">    &quot;n&quot;: 2,</span><br><span class="line">    &quot;size&quot;: &quot;1024x1024&quot;</span><br><span class="line">  &#125;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;created&quot;</span><span class="punctuation">:</span> <span class="number">1589478378</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://...&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://...&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>Request body(入参详解)</strong><br>• <strong><code>prompt</code> （string，必填）</strong><br>所需图像的文本描述。最大长度为1000个字符。<br>• <strong><code>n</code> （integer，选填，Defaults to 1）</strong><br>要生成的图像数量。必须在1到10之间。<br>• <strong><code>size</code> （string，选填，Defaults to 1024x1024）</strong><br>生成图像的尺寸。必须是 <code>256x256</code> 、<code>512x512</code> 或 <code>1024x1024</code> 之一。<br>• <strong><code>response_format</code> （string，选填，Defaults to url）</strong><br>生成的图像返回格式。必须是 <code>url</code> 或 <code>b64_json</code> 之一。<br>• <strong><code>user</code> （string，选填）</strong><br>一个唯一的标识符，代表您的终端用户，可以帮助OpenAI监测和检测滥用。<a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fsafety-best-practices%2Fend-user-ids">了解更多信息</a>。</p><p>作者：天怎么不会塌链接：<a href="https://juejin.cn/post/7225126264663605309%E6%9D%A5%E6%BA%90%EF%BC%9A%E7%A8%80%E5%9C%9F%E6%8E%98%E9%87%91%E8%91%97%E4%BD%9C%E6%9D%83%E5%BD%92%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E5%95%86%E4%B8%9A%E8%BD%AC%E8%BD%BD%E8%AF%B7%E8%81%94%E7%B3%BB%E4%BD%9C%E8%80%85%E8%8E%B7%E5%BE%97%E6%8E%88%E6%9D%83%EF%BC%8C%E9%9D%9E%E5%95%86%E4%B8%9A%E8%BD%AC%E8%BD%BD%E8%AF%B7%E6%B3%A8%E6%98%8E%E5%87%BA%E5%A4%84%E3%80%82">https://juejin.cn/post/7225126264663605309来源：稀土掘金著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</a></p><h3 id="2-create-image-edit">2. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fimages%2Fcreate-edit">Create image edit</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST</span><br><span class="line">https://api.openai.com/v1/images/edits</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>根据原始图像和提示创建编辑或扩展的图像。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/images/edits \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -F image=&quot;@otter.png&quot; \</span><br><span class="line">  -F mask=&quot;@mask.png&quot; \</span><br><span class="line">  -F prompt=&quot;A cute baby sea otter wearing a beret&quot; \</span><br><span class="line">  -F n=2 \</span><br><span class="line">  -F size=&quot;1024x1024&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span>  <span class="attr">&quot;created&quot;</span><span class="punctuation">:</span> <span class="number">1589478378</span><span class="punctuation">,</span>  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>    <span class="punctuation">&#123;</span>      <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://...&quot;</span>    <span class="punctuation">&#125;</span><span class="punctuation">,</span>    <span class="punctuation">&#123;</span>      <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://...&quot;</span>    <span class="punctuation">&#125;</span>  <span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>Request body(入参详解)</strong><br>• <strong><code>image</code> （string，必填）</strong><br>要编辑的图像。必须是有效的PNG文件，小于4MB且为正方形。如果未提供遮罩，则图像必须具有透明度，该透明度将用作遮罩。<br>• <strong><code>mask</code> （string，选填）</strong><br>一个额外的图像，其完全透明的区域（例如 alpha 值为零的区域）指示应该编辑图像的位置。<code>image</code> 必须是有效的 PNG 文件，小于 4MB，并且具有与 <code>image</code> 相同的尺寸。<br>• <strong><code>prompt</code> （string，必填）</strong><br>所需图像的文本描述。最大长度为1000个字符。<br>• <strong><code>n</code> （integer，选填，Defaults to 1）</strong><br>要生成的图像数量。必须在1到10之间。<br>• <strong><code>size</code> （string，选填，Defaults to 1024x1024）</strong><br>生成图像的尺寸。必须是 <code>256x256</code> 、<code>512x512</code> 或 <code>1024x1024</code> 之一。<br>• <strong><code>response_format</code> （string，选填，Defaults to url）</strong><br>生成的图像返回格式。必须是 <code>url</code> 或 <code>b64_json</code> 之一。<br>• <strong><code>user</code> （string，选填）</strong><br>一个唯一的标识符，代表您的终端用户，可以帮助OpenAI监测和检测滥用。<a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fsafety-best-practices%2Fend-user-ids">了解更多信息</a>。</p><h3 id="3-create-image-variation">3. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fimages%2Fcreate-variation">Create image variation</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST</span><br><span class="line">https://api.openai.com/v1/images/variations</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建给定图像的变体。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/images/variations \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -F image=&quot;@otter.png&quot; \</span><br><span class="line">  -F n=2 \</span><br><span class="line">  -F size=&quot;1024x1024&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">json复制代码</span><br><span class="line"><span class="punctuation">&#123;</span>  <span class="attr">&quot;created&quot;</span><span class="punctuation">:</span> <span class="number">1589478378</span><span class="punctuation">,</span>  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>    <span class="punctuation">&#123;</span>      <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://...&quot;</span>    <span class="punctuation">&#125;</span><span class="punctuation">,</span>    <span class="punctuation">&#123;</span>      <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://...&quot;</span>    <span class="punctuation">&#125;</span>  <span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>Request body(入参详解)</strong><br>• <strong><code>image</code> （string，必填）</strong><br>用作变体基础的图像。必须是有效的PNG文件，小于4MB，并且为正方形。<br>• <strong><code>n</code> （integer，选填，Defaults to 1）</strong><br>要生成的图像数量。必须在1到10之间。<br>• <strong><code>size</code> （string，选填，Defaults to 1024x1024）</strong><br>生成图像的尺寸。必须是 <code>256x256</code> 、<code>512x512</code> 或 <code>1024x1024</code> 之一。<br>• <strong><code>response_format</code> （string，选填，Defaults to url）</strong><br>生成的图像返回格式。必须是 <code>url</code> 或 <code>b64_json</code> 之一。<br>• <strong><code>user</code> （string，选填）</strong><br>一个唯一的标识符，代表您的终端用户，可以帮助OpenAI监测和检测滥用。<a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fsafety-best-practices%2Fend-user-ids">了解更多信息</a>。</p><h2 id="九-embeddings-嵌入">九. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fembeddings">Embeddings</a> 嵌入</h2><p>获得一个给定输入的向量表示，可以轻松地被机器学习模型和算法使用。</p><p>相关指南：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fembeddings">嵌入</a></p><h3 id="1-create-embeddings">1. <strong><a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fembeddings%2Fcreate">Create embeddings</a></strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">http复制代码</span><br><span class="line">POST</span><br><span class="line">https://api.openai.com/v1/embeddings</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建一个嵌入向量，代表输入的文本。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">http复制代码</span><br><span class="line">curl https://api.openai.com/v1/embeddings \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">  -d &#x27;&#123;</span><br><span class="line">    &quot;input&quot;: &quot;The food was delicious and the waiter...&quot;,</span><br><span class="line">    &quot;model&quot;: &quot;text-embedding-ada-002&quot;</span><br><span class="line">  &#125;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;embedding&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;embedding&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">0.0023064255</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">-0.009327292</span><span class="punctuation">,</span></span><br><span class="line">        .... (<span class="number">1536</span> floats total for ada<span class="number">-002</span>)</span><br><span class="line">        <span class="number">-0.0028842222</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text-embedding-ada-002&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;usage&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prompt_tokens&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;total_tokens&quot;</span><span class="punctuation">:</span> <span class="number">8</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Request body(入参详解)</strong><br>• <strong><code>model</code> （string，必填）</strong><br>要使用的 <strong>模型ID</strong>。您可以使用 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fmodels%2Flist">列出模型</a> API查看所有可用模型，或者请参阅我们的 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fmodels%2Foverview">模型概述</a> 以了解它们的描述。<br>• <strong><code>input</code> （string or array，必填）</strong><br>输入文本以获取嵌入，编码为字符串或令牌数组。要在单个请求中获取多个输入的嵌入，请传递字符串数组或令牌数组的数组。每个输入长度<strong>不得超过 8192 个标记</strong>。<br>• <strong><code>user</code> （string，选填）</strong><br>一个唯一的标识符，代表您的终端用户，可以帮助OpenAI监测和检测滥用。<a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fsafety-best-practices%2Fend-user-ids">了解更多信息</a>。</p><h2 id="十-audio-音频">十. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Faudio">Audio</a> 音频</h2><p>了解如何将音频转换为文本。</p><p>相关指南：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fspeech-to-text">语音转文本</a></p><h3 id="1-create-transcription">1. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Faudio%2Fcreate">Create transcription</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST</span><br><span class="line">https://api.openai.com/v1/audio/transcriptions</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将音频转录为输入语言。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/audio/transcriptions \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -H &quot;Content-Type: multipart/form-data&quot; \</span><br><span class="line">  -F file=&quot;@/path/to/file/audio.mp3&quot; \</span><br><span class="line">  -F model=&quot;whisper-1&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">json复制代码</span><br><span class="line"><span class="punctuation">&#123;</span>  <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Imagine the wildest idea that you&#x27;ve ever had, and you&#x27;re curious about how it might scale to something that&#x27;s a 100, a 1,000 times bigger. This is a place where you can get to do that.&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>Request body(入参详解)</strong><br>• <strong><code>file</code> （string，必填）</strong><br>要转录的音频文件，格式为以下之一：mp3、mp4、mpeg、mpga、m4a、wav 或 webm。<br>• <strong><code>model</code> （string，必填）</strong><br>要使用的模型ID。目前仅有 <code>whisper-1</code> 可用。<br>• <strong><code>prompt</code> （string，选填）</strong><br>一个可选的文本，用于指导模型的风格或继续之前的音频片段。 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fspeech-to-text%2Fprompting">prompt</a> 应该与音频语言相匹配。<br>• <strong><code>response_format</code> （string，选填，Defaults to json）</strong><br>转录输出的格式，可选项包括：json、文本、srt、verbose_json或vtt。<br>• <strong><code>temperature</code> （number，选填，Defaults to 0）</strong><br>采样温度介于0和1之间。较高的值（如0.8）会使输出更随机，而较低的值（如0.2）则会使其更加集中和确定性。如果设置为0，则模型将使用 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FLog_probability">log probability(对数概率)</a> 自动增加温度，直到达到某些阈值。<br>• <strong><code>language</code> （string，选填）</strong><br>输入音频的语言。以 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FList_of_ISO_639-1_codes">ISO-639-1</a> 格式提供输入语言将提高准确性和延迟。</p><h3 id="2-create-translation">2. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Faudio%2Fcreate">Create translation</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST</span><br><span class="line">https://api.openai.com/v1/audio/translations</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将音频翻译成英语。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">http复制代码</span><br><span class="line">curl https://api.openai.com/v1/audio/translations \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -H &quot;Content-Type: multipart/form-data&quot; \</span><br><span class="line">  -F file=&quot;@/path/to/file/german.m4a&quot; \</span><br><span class="line">  -F model=&quot;whisper-1&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">json复制代码</span><br><span class="line"><span class="punctuation">&#123;</span>  <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hello, my name is Wolfgang and I come from Germany. Where are you heading today?&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>Request body(入参详解)</strong><br>• <code>file</code> （string，必填）<br>要翻译的音频文件必须是以下格式之一：mp3、mp4、mpeg、mpga、m4a、wav或webm。<br>• <strong><code>model</code> （string，必填）</strong><br>要使用的模型ID。目前仅有 <code>whisper-1</code> 可用。<br>• <strong><code>prompt</code> （string，选填）</strong><br>一个可选的文本，用于指导模型的风格或继续之前的音频片段。 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fspeech-to-text%2Fprompting">prompt</a> 应该与音频语言相匹配。<br>• <strong><code>response_format</code> （string，选填，Defaults to json）</strong><br>转录输出的格式，可选项包括：json、文本、srt、verbose_json或vtt。<br>• <strong><code>temperature</code> （number，选填，Defaults to 0）</strong><br>采样温度介于0和1之间。较高的值（如0.8）会使输出更随机，而较低的值（如0.2）则会使其更加集中和确定性。如果设置为0，则模型将使用 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FLog_probability">log probability(对数概率)</a> 自动增加温度，直到达到某些阈值。</p><h2 id="十一-files-文件">十一. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffiles">Files</a> 文件</h2><p><strong>Files</strong> 用于上传文档，可与 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffine-tunes">Fine-tuning</a> 等功能一起使用。</p><h3 id="1-list-files">1. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffiles%2Flist">List files</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET</span><br><span class="line">https://api.openai.com/v1/files</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>返回属于用户组织的文件列表。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/files \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-ccdDZrC3iZVNiQVeEA6Z66wf&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;bytes&quot;</span><span class="punctuation">:</span> <span class="number">175</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1613677385</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;train.jsonl&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;purpose&quot;</span><span class="punctuation">:</span> <span class="string">&quot;search&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-XjGxS3KTG0uNmNOK362iJua3&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;bytes&quot;</span><span class="punctuation">:</span> <span class="number">140</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1613779121</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;puppy.jsonl&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;purpose&quot;</span><span class="punctuation">:</span> <span class="string">&quot;search&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-upload-file">2. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffiles%2Fupload">Upload file</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST</span><br><span class="line">https://api.openai.com/v1/files</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上传包含文档的文件以在各个端点/功能之间使用。目前，一个组织上传的所有文件的大小可以高达1 GB。如果您需要增加存储限制，请与我们联系。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/files \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -F purpose=&quot;fine-tune&quot; \</span><br><span class="line">  -F file=&quot;@mydata.jsonl&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-XjGxS3KTG0uNmNOK362iJua3&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;bytes&quot;</span><span class="punctuation">:</span> <span class="number">140</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1613779121</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mydata.jsonl&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;purpose&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="none"></h3><p><strong>Request body(入参详解)</strong><br>• <code>file</code> （string，必填）<br>要上传的 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fjsonlines.readthedocs.io%2Fen%2Flatest%2F">JSON Lines</a> 文件名。<br>如果 <code>purpose</code> 设置为 <strong>“fine-tune”</strong>，则每行都是一个JSON记录，其中包含“prompt”和“completion”字段，表示您的 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Ffine-tuning%2Fprepare-training-data">training examples(训练示例)</a>。<br>• <code>purpose</code> （string，必填）<br>上传文档的预期用途。<br>使用 <strong>“fine-tune”</strong> 进行 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffine-tunes">Fine-tuning(微调)</a>。这样可以验证上传文件的格式。</p><h3 id="3-delete-file">3. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffiles%2Fdelete">Delete file</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">DELETE</span><br><span class="line">https://api.openai.com/v1/files/&#123;file_id&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>删除文件。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/files/file-XjGxS3KTG0uNmNOK362iJua3 \</span><br><span class="line">  -X DELETE \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中，<code>&#123;file_id&#125;</code> 为 string类型的必填项，用于此请求的文件的 ID</p><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">json复制代码</span><br><span class="line"><span class="punctuation">&#123;</span>  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-XjGxS3KTG0uNmNOK362iJua3&quot;</span><span class="punctuation">,</span>  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file&quot;</span><span class="punctuation">,</span>  <span class="attr">&quot;deleted&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="4-retrieve-file">4. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffiles%2Fretrieve">Retrieve file</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET</span><br><span class="line">https://api.openai.com/v1/files/&#123;file_id&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>返回有关特定文件的信息。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/files/file-XjGxS3KTG0uNmNOK362iJua3 \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中，<code>&#123;file_id&#125;</code> 为 string类型的必填项，用于此请求的文件的 ID</p><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">json复制代码</span><br><span class="line"><span class="punctuation">&#123;</span>  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-XjGxS3KTG0uNmNOK362iJua3&quot;</span><span class="punctuation">,</span> </span><br><span class="line">   <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file&quot;</span><span class="punctuation">,</span>  <span class="attr">&quot;bytes&quot;</span><span class="punctuation">:</span> <span class="number">140</span><span class="punctuation">,</span> </span><br><span class="line">   <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1613779657</span><span class="punctuation">,</span> </span><br><span class="line">   <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mydata.jsonl&quot;</span><span class="punctuation">,</span> </span><br><span class="line">   <span class="attr">&quot;purpose&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="5-retrieve-file-content">5. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffiles%2Fretrieve-content">Retrieve file content</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET</span><br><span class="line">https://api.openai.com/v1/files/&#123;file_id&#125;/content</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>返回指定文件的内容。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/files/file-XjGxS3KTG0uNmNOK362iJua3/content \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; &gt; file.jsonl</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中，<code>&#123;file_id&#125;</code> 为 string类型的必填项，用于此请求的文件的 ID</p><h2 id="十二-fine-tunes-微调">十二. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffine-tunes">Fine-tunes</a> 微调</h2><p>管理微调作业以将模型定制为您的特定训练数据。</p><p>相关指南：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Ffine-tuning">Fine-tune models(微调模型)</a></p><h3 id="1-create-fine-tune">1. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffine-tunes%2Fcreate">Create fine-tune</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">http复制代码</span><br><span class="line">POST</span><br><span class="line">https://api.openai.com/v1/fine-tunes</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建一个工作，从给定的数据集中微调指定模型。</p><p>响应包括已入队的作业的详细信息，包括 作业状态 和 完成后微调模型的名称。</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Ffine-tuning">了解有关微调的更多信息</a>。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">http复制代码</span><br><span class="line">curl https://api.openai.com/v1/fine-tunes \</span><br><span class="line">  -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -d &#x27;&#123;</span><br><span class="line">    &quot;training_file&quot;: &quot;file-XGinujblHPwGLSztz8cPS8XY&quot;</span><br><span class="line">  &#125;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ft-AF1WoRqd3aJAHsqc9NY7iL8F&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;curie&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807352</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;events&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-event&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807352</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;info&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Job enqueued. Waiting for jobs ahead to complete. Queue number: 0.&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;fine_tuned_model&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hyperparams&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;batch_size&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;learning_rate_multiplier&quot;</span><span class="punctuation">:</span> <span class="number">0.1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;n_epochs&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prompt_loss_weight&quot;</span><span class="punctuation">:</span> <span class="number">0.1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;organization_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org-...&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result_files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pending&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;validation_files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;training_files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-XGinujblHPwGLSztz8cPS8XY&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;bytes&quot;</span><span class="punctuation">:</span> <span class="number">1547276</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1610062281</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my-data-train.jsonl&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;purpose&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-train&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;updated_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807352</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Request body(入参详解)</strong><br>• <code>training_file</code> （string，必填）<br>包含 <strong>训练数据</strong> 的已上传文件的ID。<br>请参阅 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffiles%2Fupload">upload file</a> 以了解如何上传文件。<br>您的数据集必须格式化为 <strong>JSONL文件</strong>，其中每个训练示例都是一个带有 “prompt” 和 “completion” keys 的 JSON对象。此外，您必须上传带有 <code>fine-tune</code> 目的的文件。<br>有关更多详细信息，请参阅 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Ffine-tuning%2Fcreating-training-data">微调指南</a>。<br>• <code>validation_file</code> （string，选填）<br>包含 <strong>验证数据</strong> 的已上传文件的ID。<br>如果您提供此文件，则数据将在微调期间定期用于生成验证指标。这些指标可以在 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Ffine-tuning%2Fanalyzing-your-fine-tuned-model">微调结果文件</a> 中查看。您的训练和验证数据应该是互斥的。<br>您的数据集必须格式化为 <strong>JSONL文件</strong>，其中每个验证示例都是一个带有 “prompt” 和 “completion” keys 的 JSON对象。此外，您必须上传带有 <code>fine-tune</code> 目的的文件。<br>有关更多详细信息，请参阅 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Ffine-tuning%2Fcreating-training-data">微调指南</a>。<br>• <code>model</code> （string，选填，Defaults to curie）<br>要微调的基础模型名称。<br>您可以选择其中之一：“ada”、“babbage”、“curie”、“davinci”，或 2022年4月21日 后创建的经过微调的模型。要了解这些模型的更多信息，请参阅 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fmodels">Models</a> 文档。<br>• <code>n_epochs</code> （integer，选填，Defaults to 4）<br>训练模型的时期数。一个 epoch 指的是完整地遍历一次训练数据集<br>• <code>batch_size</code> （integer，选填，Defaults to null）<br>用于训练的批次大小。批次大小是用于训练单个前向和后向传递的训练示例数量。<br>默认情况下，批量大小将动态配置为训练集示例数量的约 0.2％，上限为256。<br>通常，我们发现较大的批量大小对于更大的数据集效果更好。<br>• <code>learning_rate_multiplier</code> （number，选填，Defaults to null）<br>用于训练的学习率倍增器。微调学习率 是预训练时使用的 原始学习率 乘以 此值 得到的。<br>默认情况下，学习率的倍增器为 0.05、0.1 或 0.2，具体取决于最终 <code>batch_size</code>（较大的批量大小通常使用较大的学习率效果更好）。我们建议尝试在 0.02 到 0.2 范围内实验不同值以找出产生最佳结果的值。<br>• <code>prompt_loss_weight</code> （number，选填，Defaults to 0.01）<br>用于提示 tokens 损失的权重。这控制了模型尝试学习生成提示的程度（与始终具有 1.0 权重的完成相比），并且可以在完成很短时为训练添加稳定效果。<br>如果提示非常长（相对于完成而言），那么减少此权重可能是有意义的，以避免过度优先考虑学习提示。<br>• <code>compute_classification_metrics</code> （boolean，选填，Defaults to false）<br>如果设置了，我们会在每个 epoch 结束时使用验证集计算特定于分类的指标，例如准确率和 F-1 分数。这些指标可以在 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Ffine-tuning%2Fanalyzing-your-fine-tuned-model">结果文件</a> 中查看。<br>为了计算分类指标，您必须提供一个<code>validation_file(验证文件)</code>。此外，对于多类分类，您必须指定 <code>classification_n_classes</code>；对于二元分类，则需要指定 <code>classification_positive_class</code>。<br>• <code>classification_n_classes</code> （integer，选填，Defaults to null）<br>分类任务中的类别数量。<br>这个参数在多分类任务中是必需的。<br>• <code>classification_positive_class</code> （string，选填，Defaults to null）<br>二元分类中的正类。<br>在进行二元分类时，需要此参数来生成精确度、召回率和 F1 指标。<br>• <code>classification_betas</code> （array，选填，Defaults to null）<br>如果提供了这个参数，我们会在指定的 beta 值上计算 F-beta分数。F-beta分数 是 F-1分数 的一般化。这仅用于二元分类。<br>当 beta 为1时（即F-1分数），精确度和召回率被赋予相同的权重。较大的 beta 值更加注重召回率而不是精确度。较小的 beta 值更加注重精确度而不是召回率。<br>• <code>suffix</code> （string，选填，Defaults to null）<br>一个长度最多为 40个字符 的字符串，将被添加到您的 微调模型名称 中。<br>例如，<code>suffix</code>  为 “custom-model-name” 会生成一个模型名称，如 <code>ada:ft-your-org:custom-model-name-2022-02-15-04-21-04</code>。</p><h3 id="2-list-fine-tunes">2. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffine-tunes%2Flist">List fine-tunes</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET</span><br><span class="line">https://api.openai.com/v1/fine-tunes</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>列出组织的微调作业</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/fine-tunes \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ft-AF1WoRqd3aJAHsqc9NY7iL8F&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;curie&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807352</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fine_tuned_model&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;hyperparams&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> ... <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;organization_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org-...&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;result_files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pending&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;validation_files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;training_files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> ... <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;updated_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807352</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span> ... <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span> ... <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-retrieve-fine-tune">3. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffine-tunes%2Fretrieve">Retrieve fine-tune</a>.</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET</span><br><span class="line">https://api.openai.com/v1/fine-tunes/&#123;fine_tune_id&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>获取有关微调作业的信息。</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Ffine-tuning">了解更多关于微调的内容</a>。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/fine-tunes/ft-AF1WoRqd3aJAHsqc9NY7iL8F \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中，<code>fine_tune_id</code> 为 string类型 的字符串，<strong>必传</strong>；微调作业的 ID</p><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ft-AF1WoRqd3aJAHsqc9NY7iL8F&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;curie&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807352</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;events&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-event&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807352</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;info&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Job enqueued. Waiting for jobs ahead to complete. Queue number: 0.&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-event&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807356</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;info&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Job started.&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-event&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807861</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;info&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Uploaded snapshot: curie:ft-acmeco-2021-03-03-21-44-20.&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-event&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807864</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;info&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Uploaded result files: file-QQm6ZpqdNwAaVC3aSz5sWwLT.&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-event&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807864</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;info&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Job succeeded.&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;fine_tuned_model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;curie:ft-acmeco-2021-03-03-21-44-20&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hyperparams&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;batch_size&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;learning_rate_multiplier&quot;</span><span class="punctuation">:</span> <span class="number">0.1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;n_epochs&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prompt_loss_weight&quot;</span><span class="punctuation">:</span> <span class="number">0.1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;organization_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org-...&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result_files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-QQm6ZpqdNwAaVC3aSz5sWwLT&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;bytes&quot;</span><span class="punctuation">:</span> <span class="number">81509</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807863</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;compiled_results.csv&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;purpose&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-results&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;succeeded&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;validation_files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;training_files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-XGinujblHPwGLSztz8cPS8XY&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;bytes&quot;</span><span class="punctuation">:</span> <span class="number">1547276</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1610062281</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my-data-train.jsonl&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;purpose&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-train&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;updated_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807865</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="4-cancel-fine-tune">4. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffine-tunes%2Fcancel">Cancel fine-tune</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST</span><br><span class="line">https://api.openai.com/v1/fine-tunes/&#123;fine_tune_id&#125;/cancel</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>立即取消微调工作。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/fine-tunes/ft-AF1WoRqd3aJAHsqc9NY7iL8F/cancel \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中，<code>fine_tune_id</code> 为 string类型 的字符串，<strong>必传</strong>；微调作业的 ID</p><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ft-xhrpBbvVUzYGo8oUO1FY4nI7&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;curie&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807770</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;events&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span> ... <span class="punctuation">&#125;</span> <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;fine_tuned_model&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hyperparams&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> ... <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;organization_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org-...&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result_files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cancelled&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;validation_files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;training_files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-XGinujblHPwGLSztz8cPS8XY&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;bytes&quot;</span><span class="punctuation">:</span> <span class="number">1547276</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1610062281</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my-data-train.jsonl&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;purpose&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-train&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;updated_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807789</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-list-fine-tune-events">5. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffine-tunes%2Fevents">List fine-tune events</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET</span><br><span class="line">https://api.openai.com/v1/fine-tunes/&#123;fine_tune_id&#125;/events</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>获取微调作业的精细状态更新。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/fine-tunes/ft-AF1WoRqd3aJAHsqc9NY7iL8F/events \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中，<code>fine_tune_id</code> 为 string类型 的字符串，<strong>必传</strong>；微调作业的 ID；</p><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-event&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807352</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;info&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Job enqueued. Waiting for jobs ahead to complete. Queue number: 0.&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-event&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807356</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;info&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Job started.&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-event&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807861</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;info&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Uploaded snapshot: curie:ft-acmeco-2021-03-03-21-44-20.&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-event&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807864</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;info&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Uploaded result files: file-QQm6ZpqdNwAaVC3aSz5sWwLT.&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fine-tune-event&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1614807864</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;info&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Job succeeded.&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="query-parameters">Query parameters</h3><blockquote><p><code>stream</code> （boolean，选填，Defaults to false）</p><p>是否对微调作业进行事件流。</p><p>如果设置为 true，则事件将作为数据 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FAPI%2FServer-sent_events%2FUsing_server-sent_events%23event_stream_format">服务器发送的事件</a> 随时可用。当作业完成（成功、取消或失败）时，流将以 <code>data：[DONE]</code> 消息终止。</p><p>如果设置为 false，则仅返回到目前为止生成的事件。</p></blockquote><h3 id="6-delete-fine-tune-model">6. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Ffine-tunes%2Fdelete-model">Delete fine-tune model</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">DELETE</span><br><span class="line">https://api.openai.com/v1/models/&#123;model&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>删除微调的模型。您必须在组织中具有所有者的角色。</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/models/curie:ft-acmeco-2021-03-03-21-44-20 \</span><br><span class="line">  -X DELETE \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中，<code>model</code> 为 string类型 的字符串，<strong>必传</strong>；要删除的模型</p><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">json复制代码</span><br><span class="line"><span class="punctuation">&#123;</span>  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;curie:ft-acmeco-2021-03-03-21-44-20&quot;</span><span class="punctuation">,</span>  </span><br><span class="line">   <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;model&quot;</span><span class="punctuation">,</span>  </span><br><span class="line">   <span class="attr">&quot;deleted&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="十三-moderations-审核">十三. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fmoderations">Moderations</a> 审核</h2><p>给定一个输入文本，输出模型是否将其分类为违反 OpenAI 内容政策。</p><p>相关指南：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fmoderation">Moderations</a></p><h3 id="1-create-moderation">1. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fmoderations%2Fcreate">Create moderation</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST</span><br><span class="line">https://api.openai.com/v1/moderations</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分类判断文本是否违反 OpenAI 的内容政策</p><p>请求演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl https://api.openai.com/v1/moderations \</span><br><span class="line">  -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">  -H &quot;Authorization: Bearer $OPENAI_API_KEY&quot; \</span><br><span class="line">  -d &#x27;&#123;</span><br><span class="line">    &quot;input&quot;: &quot;I want to kill them.&quot;</span><br><span class="line">  &#125;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;modr-5MWoLO&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text-moderation-001&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;results&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;categories&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;hate&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hate/threatening&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;self-harm&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sexual&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sexual/minors&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;violence&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;violence/graphic&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;category_scores&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;hate&quot;</span><span class="punctuation">:</span> <span class="number">0.22714105248451233</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hate/threatening&quot;</span><span class="punctuation">:</span> <span class="number">0.4132447838783264</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;self-harm&quot;</span><span class="punctuation">:</span> <span class="number">0.005232391878962517</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sexual&quot;</span><span class="punctuation">:</span> <span class="number">0.01407341007143259</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sexual/minors&quot;</span><span class="punctuation">:</span> <span class="number">0.0038522258400917053</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;violence&quot;</span><span class="punctuation">:</span> <span class="number">0.9223177433013916</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;violence/graphic&quot;</span><span class="punctuation">:</span> <span class="number">0.036865197122097015</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;flagged&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="request-body-入参详解">Request body(入参详解)</h3><blockquote><p>• <code>input</code> （string or array，必填）<br>要分类的输入文本<br>• <code>model</code> （string，选填，Defaults to text-moderation-latest）<br>有两个内容审核模型可用：<code>text-moderation-stable</code> 和 <code>text-moderation-latest</code>。<br>默认情况下，使用的是 <code>text-moderation-latest</code> 模型，该模型会随着时间自动升级。这确保您始终使用我们最准确的模型。如果您使用 <code>text-moderation-stable</code>，则在更新模型之前我们将提供高级通知。<code>text-moderation-stable</code> 的准确性可能略低于 <code>text-moderation-latest</code>。</p></blockquote><h2 id="十五-parameter-details-参数细节">十五. <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fparameter-details">Parameter details</a> 参数细节</h2><p><strong>频率和存在惩罚</strong></p><p>在 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fapi-reference%2Fcompletions">Completions API</a> 中发现的频率和存在惩罚可以用于减少采样重复令牌序列的可能性。它们通过直接向 logits（未归一化的对数概率）添加贡献来进行修改。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">python复制代码</span><br><span class="line">mu[j] -&gt; mu[j] - c[j] * alpha_frequency - <span class="built_in">float</span>(c[j] &gt; <span class="number">0</span>) * alpha_presence</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Where:</p><ul><li><code>mu[j]</code> is the logits of the j-th token</li><li><code>c[j]</code> is how often that token was sampled prior to the current position</li><li><code>float(c[j] &gt; 0)</code> is 1 if <code>c[j] &gt; 0</code> and 0 otherwise</li><li><code>alpha_frequency</code> is the frequency penalty coefficient</li><li><code>alpha_presence</code> is the presence penalty coefficient</li></ul><p>正如我们所看到的，存在惩罚是一次性的加法贡献，适用于所有已经被采样至少一次的标记，并且频率惩罚是与特定标记已经被采样的频率成比例的贡献。</p><p>如果目的只是稍微减少重复样本，那么惩罚系数的合理值大约在 0.1 到 1 之间。如果目的是强烈抑制重复，则可以将系数增加到 2，但这可能会明显降低样本质量。负值可用于增加重复出现的可能性。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> LLM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> LLM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为Linux新增用户</title>
      <link href="/2023/10/10/%E4%B8%BALinux%E6%96%B0%E5%A2%9E%E7%94%A8%E6%88%B7/"/>
      <url>/2023/10/10/%E4%B8%BALinux%E6%96%B0%E5%A2%9E%E7%94%A8%E6%88%B7/</url>
      
        <content type="html"><![CDATA[<p>创建新用户所使用的命令是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo useradd -r -m -s /bin/bash <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>命令来设置新用户的密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>上面命令的参数意义如下：</p><ul><li>r：建立系统账号</li><li>m：自动建立用户的登入目录</li><li>s：指定用户登入后所使用的shell</li></ul><p>输入ls /home/可以看到用户目录被成功创建了</p><p>然后需要登陆新用户,为新用户创建密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su <span class="built_in">test</span></span><br><span class="line">[<span class="built_in">test</span>@host ~]$ ssh-keyge</span><br></pre></td></tr></table></figure><p>在 当前 用户的家目录中生成了一个 .ssh 的隐藏目录，内含两个密钥文件。id_rsa 为私钥，id_rsa.pub 为公钥。<br>为了确保连接成功，要保证以下文件权限正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="built_in">test</span>@host ~]$ <span class="built_in">cd</span> .ssh</span><br><span class="line">[<span class="built_in">test</span>@host .ssh]$ <span class="built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure><p>在服务器上安装公钥<br>键入以下命令，在服务器上安装公钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">[root@host .ssh]$ <span class="built_in">chmod</span> 600 authorized_keys</span><br><span class="line">[root@host .ssh]$ <span class="built_in">chmod</span> 700 ~/.ssh</span><br></pre></td></tr></table></figure><p>将私钥id_rsa下载到本地，可以通过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /home/test/.ssh/id_rsa /home/test/id_rsa</span><br></pre></td></tr></table></figure><p>然后将密钥下载到本地</p><p>为新建的用户添加root权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/sudoers</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改/etc/sudoers</span></span><br><span class="line"><span class="comment"># 新增：</span></span><br><span class="line"><span class="comment">## Allow root to run any commands anywhere</span></span><br><span class="line">root    <span class="variable constant_">ALL</span>=(<span class="variable constant_">ALL</span>)       <span class="variable constant_">ALL</span></span><br><span class="line">test    <span class="variable constant_">ALL</span>=(<span class="variable constant_">ALL</span>)       <span class="variable constant_">ALL</span></span><br><span class="line"><span class="comment"># 退出时，需要强制保存，因为该文件是只读的</span></span><br><span class="line"><span class="symbol">:wq!</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fine Turn BLIP2</title>
      <link href="/2023/08/22/Fine-Turn-BLIP2/"/>
      <url>/2023/08/22/Fine-Turn-BLIP2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!pip install -q datasets</span><br></pre></td></tr></table></figure><pre><code>[1m[[0m[34;49mnotice[0m[1;39;49m][0m[39;49m A new release of pip is available: [0m[31;49m23.1.1[0m[39;49m -&gt; [0m[32;49m23.2.1[0m[1m[[0m[34;49mnotice[0m[1;39;49m][0m[39;49m To update, run: [0m[32;49mpip install --upgrade pip[0m</code></pre><p>教程网址：<br>Fine-tune BLIP using Hugging Face transformers and datasets 🤗<br><a href="https://colab.research.google.com/drive/1lbqiSiA0sDF7JDWPeS0tccrM85LloVha?usp=sharing">https://colab.research.google.com/drive/1lbqiSiA0sDF7JDWPeS0tccrM85LloVha?usp=sharing</a></p><p>讨论区：<br><a href="https://github.com/salesforce/BLIP/issues/37">https://github.com/salesforce/BLIP/issues/37</a></p><p>数据集制作方法：<br><a href="https://colab.research.google.com/drive/1HLxgrG7xZJ9FvXckNG61J72FkyrbqKAA?usp=sharing">https://colab.research.google.com/drive/1HLxgrG7xZJ9FvXckNG61J72FkyrbqKAA?usp=sharing</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">root = <span class="string">&quot;image_in_rainly_river/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> datasets <span class="keyword">import</span> load_dataset </span><br></pre></td></tr></table></figure><pre><code>/home/huyifan/anaconda3/envs/yolov5/lib/python3.8/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html  from .autonotebook import tqdm as notebook_tqdm</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataset = load_dataset(<span class="string">&quot;imagefolder&quot;</span>,data_dir=root,split=<span class="string">&quot;train&quot;</span>)</span><br></pre></td></tr></table></figure><pre><code>Resolving data files: 100%|████████████████████████████████████████████████████████████████| 171/171 [00:00&lt;00:00, 201524.58it/s]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataset</span><br></pre></td></tr></table></figure><pre><code>Dataset(&#123;    features: ['image', 'caption'],    num_rows: 170&#125;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">example = dataset[<span class="number">0</span>]</span><br><span class="line">image = example[<span class="string">&quot;image&quot;</span>]</span><br><span class="line">width, height = image.size</span><br><span class="line">display(image.resize((<span class="built_in">int</span>(<span class="number">0.3</span>*width), <span class="built_in">int</span>(<span class="number">0.3</span>*height))))</span><br></pre></td></tr></table></figure><p><img src="https://picture.fanfer.top/Test_pics/IMG_5022.JPG" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">example[<span class="string">&quot;caption&quot;</span>]</span><br></pre></td></tr></table></figure><pre><code>'a narrow river in the city with buildings on both sides'</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ImageCaptioningDataset</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, dataset, processor</span>):</span><br><span class="line">        self.dataset = dataset</span><br><span class="line">        self.processor = processor</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.dataset)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, idx</span>):</span><br><span class="line">        item = self.dataset[idx]</span><br><span class="line"></span><br><span class="line">        encoding = self.processor(images=item[<span class="string">&quot;image&quot;</span>], text=item[<span class="string">&quot;caption&quot;</span>], padding=<span class="string">&quot;max_length&quot;</span>,return_tensors=<span class="string">&quot;pt&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># remove batch dimension</span></span><br><span class="line">        encoding = &#123;k:v.squeeze() <span class="keyword">for</span> k,v <span class="keyword">in</span> encoding.items()&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> encoding</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> Blip2Processor, Blip2ForConditionalGeneration</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">processor = Blip2Processor.from_pretrained(<span class="string">&quot;Salesforce/blip2-opt-2.7b&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model = Blip2ForConditionalGeneration.from_pretrained(<span class="string">&quot;Salesforce/blip2-opt-2.7b&quot;</span>)</span><br></pre></td></tr></table></figure><pre><code>Loading checkpoint shards: 100%|██████████████████████████████████████████████████| 2/2 [00:14&lt;00:00,  7.09s/it]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_dataset = ImageCaptioningDataset(dataset, processor)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line">train_dataloader = DataLoader(train_dataset, shuffle=<span class="literal">True</span>, batch_size=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">optimizer = torch.optim.AdamW(model.parameters(), lr=<span class="number">5e-5</span>)</span><br><span class="line">device = <span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span></span><br><span class="line">model.to(device)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">model.train()</span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;Epoch:&quot;</span>, epoch)</span><br><span class="line">  <span class="keyword">for</span> idx, batch <span class="keyword">in</span> <span class="built_in">enumerate</span>(train_dataloader):</span><br><span class="line">    input_ids = batch.pop(<span class="string">&quot;input_ids&quot;</span>).to(device)</span><br><span class="line">    pixel_values = batch.pop(<span class="string">&quot;pixel_values&quot;</span>).to(device)</span><br><span class="line"></span><br><span class="line">    outputs = model(input_ids=input_ids,</span><br><span class="line">                    pixel_values=pixel_values,</span><br><span class="line">                    labels=input_ids)</span><br><span class="line">    </span><br><span class="line">    loss = outputs.loss</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Loss:&quot;</span>, loss.item())</span><br><span class="line"></span><br><span class="line">    loss.backward()</span><br><span class="line"></span><br><span class="line">    optimizer.step()</span><br><span class="line">    optimizer.zero_grad()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac 连接配置多个Github账号</title>
      <link href="/2023/08/21/mac-%E8%BF%9E%E6%8E%A5%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAGithub%E8%B4%A6%E5%8F%B7/"/>
      <url>/2023/08/21/mac-%E8%BF%9E%E6%8E%A5%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAGithub%E8%B4%A6%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<h3 id="1-生成多个ssh密钥">1. 生成多个SSH密钥:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#bash# 将email修改为你的第一账户的email，建议为常用的账号</span></span><br><span class="line">ssh-keygen -q -t rsa -C <span class="string">&quot;your_email_1@example.com&quot;</span> -f ~/.ssh/id_rsa_github_1 --N <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 将email修改为你的第二账户的email</span></span><br><span class="line">ssh-keygen -q -t rsa -C <span class="string">&quot;your_email_2@example.com&quot;</span> -f ~/.ssh/id_rsa_github_2 -N <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>上述命令将将会生成两个SSH密钥对<code>id_rsa_github_1</code>和<code>id_rsa_github_2</code>,分别对应两个GitHub账号。</p><h3 id="2-添加ssh密钥到github账号">2. 添加SSH密钥到GitHub账号:</h3><p>分别将<code>id_rsa_github_1.pub</code>和<code>id_rsa_github_2.pub</code>文件的内容添加到对应的GitHub账号的SSH Keys设置页面，注意别搞反了哦！</p><p>可以用以下命令将文件内容读取到剪贴板：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#bash</span></span><br><span class="line">pbcopy &lt; id_rsa_github_1.pub</span><br><span class="line">pbcopy &lt; id_rsa_github_2.pub</span><br></pre></td></tr></table></figure><h3 id="3-配置ssh-config文件">3. 配置SSH config文件:</h3><p>在<code>~/.ssh/</code>目录下创建<code>config</code>文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> ~/.ssh/config</span><br></pre></td></tr></table></figure><p>然后在文件中输入以下内容并保存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_github_1</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line"></span><br><span class="line">Host github_2.com </span><br><span class="line">HostName github.com</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_github_2</span><br><span class="line">PreferredAuthentications publickey</span><br></pre></td></tr></table></figure><p>这会将github.com对应到第一个GitHub账号,github_2.com对应到第二个GitHub账号。</p><p><strong>mac快捷键comman+shift+.可以查看隐藏文件，当用户不对时可以修改.ssh文件夹下的config更改git@github的内容来重新选择账号</strong></p><h3 id="4-把专用密钥添加到高速缓存中">4. 把专用密钥添加到高速缓存中</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#bash</span></span><br><span class="line">ssh-add --apple-use-keychain ~/.ssh/id_rsa_github_1</span><br><span class="line">ssh-add --apple-use-keychain ~/.ssh/id_rsa_github_2</span><br></pre></td></tr></table></figure><h3 id="5-测试ssh连接">5. 测试SSH连接:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*<span class="comment">#bash*</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T git@github_2.com</span><br></pre></td></tr></table></figure><p>正常情况下，你会得到如下消息:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi xxx! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><p>如果都可以成功登录,则SSH连接配置成功。</p><h3 id="6-清除global-config配置">6. 清除global config配置</h3><p>可以用<code>git config -l</code> 查看是否配置过<code>user.name</code>, <code>user.email</code>，如果配置过，则用以下命令unset:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> user.name </span><br><span class="line">git config --global --<span class="built_in">unset</span> user.email</span><br></pre></td></tr></table></figure><h3 id="7-恭喜">7.恭喜！！！！</h3><blockquote><p>使用方法：注意，在克隆仓库时用不用账户要使用对应的Host.</p></blockquote><p>当克隆第一个GitHub账号的仓库时,使用git@github.com:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*<span class="comment">#bash*</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:username/repo.git</span><br></pre></td></tr></table></figure><p>当克隆第二个GitHub账号的仓库时,使用git@github_2.com:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*<span class="comment">#bash* </span></span><br><span class="line">git <span class="built_in">clone</span> git@github_2.com:username/repo.git</span><br></pre></td></tr></table></figure><p>这会自动使用对应的SSH密钥与GitHub账号连接。</p><p>拉取成功后，为了方便，你可以在<code>cd</code>到对应的仓库目录下，用下述命令配置<code>user.name</code>和<code>user.email</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="built_in">local</span> user.name <span class="string">&quot;youname&quot;</span></span><br><span class="line">git config --<span class="built_in">local</span> user.email <span class="string">&quot;youemail@xx.com&quot;</span></span><br></pre></td></tr></table></figure><p>按照这些步骤,可以在一台Mac上配置任意多个GitHub账号,并可以方便地与之交互。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HuggingFace Accelerate</title>
      <link href="/2023/08/21/HuggingFace-Accelerate/"/>
      <url>/2023/08/21/HuggingFace-Accelerate/</url>
      
        <content type="html"><![CDATA[<h2 id="使用-🤗-accelerate-进行分布式训练"><strong><strong>使用 🤗 Accelerate 进行分布式训练</strong></strong></h2><p>随着模型变得越来越大，并行训练已经成为在有限的硬件上训练更大模型，并将训练速度提高几个数量级的必备策略。Hugging Face 创建了**<a href="https://huggingface.co/docs/accelerate">🤗 Accelerate</a>**库，在任何类型的分布式设置上轻松训练 🤗 Transformers 模型，无论是一台机器上的多个 GPU 还是跨多台机器的多个 GPU。</p><p>本文关于如何自定义 PyTorch 训练循环以在分布式环境中启用训练。</p><h2 id="setup"><strong>Setup</strong></h2><p>首先安装下载分布式训练库 <strong>🤗 Accelerate</strong> 并导入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">!pip install accelerate</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> accelerate <span class="keyword">import</span> Accelerator</span><br><span class="line"></span><br><span class="line">accelerator = Accelerator()</span><br></pre></td></tr></table></figure><p>如果你需要自己手动的分配每块GPU的内存，那么在初始化的时候需要传递参数<code>device_placement=False</code></p><p>然后将所有的训练相关的对象传递给prepare函数，包括用于训练和用于模型评估的Dataloader、model和optimizer</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">train_dataloader, eval_dataloader, model, optimizer = accelerator.prepare(</span><br><span class="line">    train_dataloader, eval_dataloader, model, optimizer</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>训练的实际批量大小将是所使用的设备数量乘以您在脚本中设置的批量大小:例如，在创建train_dataloader时设置的批量大小为16的4个GPU上的训练将在实际批量大小为64时进行训练。</p><p>或者，可以在创建和初始化加速器时使用<code>split_batches=True</code>选项，在这种情况下，无论您在1、2、4或64个GPU上运行脚本，批处理大小都将保持不变。</p><p>在执行此方法时，您的训练数据加载器可能会更改长度:如果您在X个GPU上运行，它的长度将除以X(因为您的实际批处理大小将乘以X)，除非设置<code>split_batches=True</code>。</p><h2 id="反向传递">反向传递</h2><p>将loss.backward()替换成accelerate的backward方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(num_epochs):</span><br><span class="line">    <span class="keyword">for</span> batch <span class="keyword">in</span> train_dataloader:</span><br><span class="line">        outputs = model(**batch)</span><br><span class="line">        loss = outputs.loss</span><br><span class="line">        accelerator.backward(loss)</span><br><span class="line"></span><br><span class="line">        optimizer.step()</span><br><span class="line">        lr_scheduler.step()</span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        progress_bar.update(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>只需要做以下修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">+ <span class="keyword">from</span> accelerate <span class="keyword">import</span> Accelerator</span><br><span class="line">  <span class="keyword">from</span> transformers <span class="keyword">import</span> AdamW, AutoModelForSequenceClassification, get_scheduler</span><br><span class="line"></span><br><span class="line">+ accelerator = Accelerator()</span><br><span class="line"></span><br><span class="line">  model = AutoModelForSequenceClassification.from_pretrained(checkpoint, num_labels=<span class="number">2</span>)</span><br><span class="line">  optimizer = AdamW(model.parameters(), lr=<span class="number">3e-5</span>)</span><br><span class="line"></span><br><span class="line">- device = torch.device(<span class="string">&quot;cuda&quot;</span>) <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> torch.device(<span class="string">&quot;cpu&quot;</span>)</span><br><span class="line">- model.to(device)</span><br><span class="line"></span><br><span class="line">+ train_dataloader, eval_dataloader, model, optimizer = accelerator.prepare(</span><br><span class="line">+     train_dataloader, eval_dataloader, model, optimizer</span><br><span class="line">+ )</span><br><span class="line"></span><br><span class="line">  num_epochs = <span class="number">3</span></span><br><span class="line">  num_training_steps = num_epochs * <span class="built_in">len</span>(train_dataloader)</span><br><span class="line">  lr_scheduler = get_scheduler(</span><br><span class="line">      <span class="string">&quot;linear&quot;</span>,</span><br><span class="line">      optimizer=optimizer,</span><br><span class="line">      num_warmup_steps=<span class="number">0</span>,</span><br><span class="line">      num_training_steps=num_training_steps</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  progress_bar = tqdm(<span class="built_in">range</span>(num_training_steps))</span><br><span class="line"></span><br><span class="line">  model.train()</span><br><span class="line">  <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(num_epochs):</span><br><span class="line">      <span class="keyword">for</span> batch <span class="keyword">in</span> train_dataloader:</span><br><span class="line">-         batch = &#123;k: v.to(device) <span class="keyword">for</span> k, v <span class="keyword">in</span> batch.items()&#125;</span><br><span class="line">          outputs = model(**batch)</span><br><span class="line">          loss = outputs.loss</span><br><span class="line">-         loss.backward()</span><br><span class="line">+         accelerator.backward(loss)</span><br><span class="line"></span><br><span class="line">          optimizer.step()</span><br><span class="line">          lr_scheduler.step()</span><br><span class="line">          optimizer.zero_grad()</span><br><span class="line">          progress_bar.update(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="模型训练">模型训练</h2><h3 id="train-with-a-script"><strong>Train with a script</strong></h3><p>首先创建并保存accelerate config，该配置被保存在/home/username/.cache/huggingface/accelerate/default_config.yaml路径下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">accelerate config</span><br></pre></td></tr></table></figure><p>如果不需要使用一些其他配置，也可以直接运行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;from accelerate.utils import write_basic_config; write_basic_config(mixed_precision=&#x27;fp16&#x27;)&quot;</span></span><br></pre></td></tr></table></figure><p>然后使用下面的指令进行训练</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">accelerate launch train.py</span><br></pre></td></tr></table></figure><p>使用下面的指令可以查看accelerate的配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">accelerate env</span><br></pre></td></tr></table></figure><p>例如我的训练环境为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">- `Accelerate` version: <span class="number">0.21</span><span class="number">.0</span></span><br><span class="line">- Platform: Linux-<span class="number">5.4</span><span class="number">.0</span>-<span class="number">92</span>-generic-x86_64-<span class="keyword">with</span>-glibc2<span class="number">.10</span></span><br><span class="line">- Python version: <span class="number">3.8</span><span class="number">.16</span></span><br><span class="line">- Numpy version: <span class="number">1.24</span><span class="number">.3</span></span><br><span class="line">- PyTorch version (GPU?): <span class="number">2.0</span><span class="number">.0</span>+cu117 (<span class="literal">True</span>)</span><br><span class="line">- PyTorch XPU available: <span class="literal">False</span></span><br><span class="line">- PyTorch NPU available: <span class="literal">False</span></span><br><span class="line">- System RAM: <span class="number">125.56</span> GB</span><br><span class="line">- GPU <span class="built_in">type</span>: NVIDIA GeForce RTX <span class="number">3090</span></span><br><span class="line">- `Accelerate` default config:</span><br><span class="line">        - compute_environment: LOCAL_MACHINE</span><br><span class="line">        - distributed_type: MULTI_GPU</span><br><span class="line">        - mixed_precision: fp16</span><br><span class="line">        - use_cpu: <span class="literal">False</span></span><br><span class="line">        - num_processes: <span class="number">3</span></span><br><span class="line">        - machine_rank: <span class="number">0</span></span><br><span class="line">        - num_machines: <span class="number">1</span></span><br><span class="line">        - rdzv_backend: static</span><br><span class="line">        - same_network: <span class="literal">False</span></span><br><span class="line">        - main_training_topction: main</span><br><span class="line">        - downcast_bf16: <span class="literal">False</span></span><br><span class="line">        - tpu_use_cluster: <span class="literal">False</span></span><br><span class="line">        - tpu_use_sudo: <span class="literal">False</span></span><br></pre></td></tr></table></figure><h3 id="train-with-a-notebook"><strong>Train with a notebook</strong></h3><p>🤗 Accelerate 也可以使用notebook进行训练 <strong><a href="https://huggingface.co/docs/accelerate/v0.21.0/en/package_reference/launchers#accelerate.notebook_launcher">notebook_launcher</a></strong>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> accelerate <span class="keyword">import</span> notebook_launcher</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>notebook_launcher(training_topction)</span><br></pre></td></tr></table></figure><h2 id="模型评估">模型评估</h2><p>至于您的训练数据加载器，这将意味着(如果您在多个设备上运行您的脚本)，每个设备将只能看到部分评估数据。这意味着你需要将你的预测组合在一起。使用gather_for_metrics()方法很容易做到这一点。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> inputs, targets <span class="keyword">in</span> validation_dataloader:</span><br><span class="line">    predictions = model(inputs)</span><br><span class="line">    <span class="comment"># Gather all predictions and targets</span></span><br><span class="line">    all_predictions, all_targets = accelerator.gather_for_metrics((predictions, targets))</span><br><span class="line">    <span class="comment"># Example of use with a *Datasets.Metric*</span></span><br><span class="line">    metric.add_batch(all_predictions, all_targets)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> HuggingFace </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> HuggingFace </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HuggingFace Pipeline</title>
      <link href="/2023/08/18/HuggingFace-Pipeline/"/>
      <url>/2023/08/18/HuggingFace-Pipeline/</url>
      
        <content type="html"><![CDATA[<h2 id="huggingface-中的pipeline">HuggingFace 中的pipeline</h2><p>pipline是使用模型进行推理的一种很好且简单的方法。使用pipline()可以使用**<a href="https://huggingface.co/models">Hub</a>**中的任何模型来推理任何语言、计算机视觉、语音和多模式任务。而不用考虑模型底层代码。</p><p>这些pipline是从库中抽象出大部分复杂代码的对象，提供专用于多个任务的简单 API</p><h3 id="简单使用">简单使用</h3><p>每个任务都有其关联的pipline，使用应用于特定任务的pipeline的时候，能够自动加载默认模型和能够处理该任务的预处理类</p><ol><li>首先创建**<a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.pipeline">pipeline()</a>**并指定推理任务：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> pipeline</span><br><span class="line"></span><br><span class="line">generator = pipeline(task=<span class="string">&quot;automatic-speech-recognition&quot;</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>将输入文本传递给**<a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.pipeline">pipeline()</a>**：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">generator(<span class="string">&quot;https://huggingface.co/datasets/Narsil/asr_dummy/resolve/main/mlk.flac&quot;</span>)</span><br></pre></td></tr></table></figure><p>3.也可以更换参数量更大的模型进行推理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">generator = pipeline(model=<span class="string">&quot;openai/whisper-large&quot;</span>)</span><br><span class="line">generator(<span class="string">&quot;https://huggingface.co/datasets/Narsil/asr_dummy/resolve/main/mlk.flac&quot;</span>)</span><br></pre></td></tr></table></figure><p>4.可以将pipline用在批量数据或者数据集上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">generator(</span><br><span class="line">    [</span><br><span class="line">        <span class="string">&quot;https://huggingface.co/datasets/Narsil/asr_dummy/resolve/main/mlk.flac&quot;</span>,</span><br><span class="line">        <span class="string">&quot;https://huggingface.co/datasets/Narsil/asr_dummy/resolve/main/1.flac&quot;</span>,</span><br><span class="line">    ]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="parameters">Parameters</h2><p>参数列表如下：</p><ul><li><p><strong>task</strong> (<code>str</code>) — The task defining which pipeline will be returned. Currently accepted tasks are:</p><ul><li><code>&quot;audio-classification&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.AudioClassificationPipeline">AudioClassificationPipeline</a></strong>.</li><li><code>&quot;automatic-speech-recognition&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.AutomaticSpeechRecognitionPipeline">AutomaticSpeechRecognitionPipeline</a></strong>.</li><li><code>&quot;conversational&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.ConversationalPipeline">ConversationalPipeline</a></strong>.</li><li><code>&quot;depth-estimation&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.DepthEstimationPipeline">DepthEstimationPipeline</a></strong>.</li><li><code>&quot;document-question-answering&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.DocumentQuestionAnsweringPipeline">DocumentQuestionAnsweringPipeline</a></strong>.</li><li><code>&quot;feature-extraction&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.FeatureExtractionPipeline">FeatureExtractionPipeline</a></strong>.</li><li><code>&quot;fill-mask&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.FillMaskPipeline">FillMaskPipeline</a></strong>:.</li><li><code>&quot;image-classification&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.ImageClassificationPipeline">ImageClassificationPipeline</a></strong>.</li><li><code>&quot;image-segmentation&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.ImageSegmentationPipeline">ImageSegmentationPipeline</a></strong>.</li><li><code>&quot;image-to-text&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.ImageToTextPipeline">ImageToTextPipeline</a></strong>.</li><li><code>&quot;mask-generation&quot;</code>: will return a <code>MaskGenerationPipeline</code>.</li><li><code>&quot;object-detection&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.ObjectDetectionPipeline">ObjectDetectionPipeline</a></strong>.</li><li><code>&quot;question-answering&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.QuestionAnsweringPipeline">QuestionAnsweringPipeline</a></strong>.</li><li><code>&quot;summarization&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.SummarizationPipeline">SummarizationPipeline</a></strong>.</li><li><code>&quot;table-question-answering&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.TableQuestionAnsweringPipeline">TableQuestionAnsweringPipeline</a></strong>.</li><li><code>&quot;text2text-generation&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.Text2TextGenerationPipeline">Text2TextGenerationPipeline</a></strong>.</li><li><code>&quot;text-classification&quot;</code> (alias <code>&quot;sentiment-analysis&quot;</code> available): will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.TextClassificationPipeline">TextClassificationPipeline</a></strong>.</li><li><code>&quot;text-generation&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.TextGenerationPipeline">TextGenerationPipeline</a></strong>:.</li><li><code>&quot;token-classification&quot;</code> (alias <code>&quot;ner&quot;</code> available): will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.TokenClassificationPipeline">TokenClassificationPipeline</a></strong>.</li><li><code>&quot;translation&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.TranslationPipeline">TranslationPipeline</a></strong>.</li><li><code>&quot;translation_xx_to_yy&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.TranslationPipeline">TranslationPipeline</a></strong>.</li><li><code>&quot;video-classification&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.VideoClassificationPipeline">VideoClassificationPipeline</a></strong>.</li><li><code>&quot;visual-question-answering&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.VisualQuestionAnsweringPipeline">VisualQuestionAnsweringPipeline</a></strong>.</li><li><code>&quot;zero-shot-classification&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.ZeroShotClassificationPipeline">ZeroShotClassificationPipeline</a></strong>.</li><li><code>&quot;zero-shot-image-classification&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.ZeroShotImageClassificationPipeline">ZeroShotImageClassificationPipeline</a></strong>.</li><li><code>&quot;zero-shot-audio-classification&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.ZeroShotAudioClassificationPipeline">ZeroShotAudioClassificationPipeline</a></strong>.</li><li><code>&quot;zero-shot-object-detection&quot;</code>: will return a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/pipelines#transformers.ZeroShotObjectDetectionPipeline">ZeroShotObjectDetectionPipeline</a></strong>.</li></ul></li><li><p><strong>model</strong> (<code>str</code> or <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/model#transformers.PreTrainedModel">PreTrainedModel</a></strong> or <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/model#transformers.TFPreTrainedModel">TFPreTrainedModel</a></strong>, <em>optional</em>) — The model that will be used by the pipeline to make predictions. This can be a model identifier or an actual instance of a pretrained model inheriting from <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/model#transformers.PreTrainedModel">PreTrainedModel</a></strong> (for PyTorch) or <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/model#transformers.TFPreTrainedModel">TFPreTrainedModel</a></strong> (for TensorFlow).</p><p>If not provided, the default for the <code>task</code> will be loaded.</p></li><li><p><strong>config</strong> (<code>str</code> or <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/configuration#transformers.PretrainedConfig">PretrainedConfig</a></strong>, <em>optional</em>) — The configuration that will be used by the pipeline to instantiate the model. This can be a model identifier or an actual pretrained model configuration inheriting from <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/configuration#transformers.PretrainedConfig">PretrainedConfig</a></strong>.</p><p>If not provided, the default configuration file for the requested model will be used. That means that if <code>model</code> is given, its default configuration will be used. However, if <code>model</code> is not supplied, this <code>task</code>’s default model’s config is used instead.</p></li><li><p><strong>tokenizer</strong> (<code>str</code> or <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/tokenizer#transformers.PreTrainedTokenizer">PreTrainedTokenizer</a></strong>, <em>optional</em>) — The tokenizer that will be used by the pipeline to encode data for the model. This can be a model identifier or an actual pretrained tokenizer inheriting from <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/tokenizer#transformers.PreTrainedTokenizer">PreTrainedTokenizer</a></strong>.</p><p>If not provided, the default tokenizer for the given <code>model</code> will be loaded (if it is a string). If <code>model</code> is not specified or not a string, then the default tokenizer for <code>config</code> is loaded (if it is a string). However, if <code>config</code> is also not given or not a string, then the default tokenizer for the given <code>task</code> will be loaded.</p></li><li><p><strong>feature_extractor</strong> (<code>str</code> or <code>PreTrainedFeatureExtractor</code>, <em>optional</em>) — The feature extractor that will be used by the pipeline to encode data for the model. This can be a model identifier or an actual pretrained feature extractor inheriting from <code>PreTrainedFeatureExtractor</code>.</p><p>Feature extractors are used for non-NLP models, such as Speech or Vision models as well as multi-modal models. Multi-modal models will also require a tokenizer to be passed.</p><p>If not provided, the default feature extractor for the given <code>model</code> will be loaded (if it is a string). If <code>model</code> is not specified or not a string, then the default feature extractor for <code>config</code> is loaded (if it is a string). However, if <code>config</code> is also not given or not a string, then the default feature extractor for the given <code>task</code> will be loaded.</p></li><li><p><strong>framework</strong> (<code>str</code>, <em>optional</em>) — The framework to use, either <code>&quot;pt&quot;</code> for PyTorch or <code>&quot;tf&quot;</code> for TensorFlow. The specified framework must be installed.</p><p>If no framework is specified, will default to the one currently installed. If no framework is specified and both frameworks are installed, will default to the framework of the <code>model</code>, or to PyTorch if no model is provided.</p></li><li><p><strong>revision</strong> (<code>str</code>, <em>optional</em>, defaults to <code>&quot;main&quot;</code>) — When passing a task name or a string model identifier: The specific model version to use. It can be a branch name, a tag name, or a commit id, since we use a git-based system for storing models and other artifacts on <a href="http://huggingface.co">huggingface.co</a>, so <code>revision</code> can be any identifier allowed by git.</p></li><li><p><strong>use_fast</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) — Whether or not to use a Fast tokenizer if possible (a <strong><a href="https://huggingface.co/docs/transformers/v4.31.0/en/main_classes/tokenizer#transformers.PreTrainedTokenizerFast">PreTrainedTokenizerFast</a></strong>).</p></li><li><p><strong>use_auth_token</strong> (<code>str</code> or <em>bool</em>, <em>optional</em>) — The token to use as HTTP bearer authorization for remote files. If <code>True</code>, will use the token generated when running <code>huggingface-cli login</code> (stored in <code>~/.huggingface</code>).</p></li><li><p><strong>device</strong> (<code>int</code> or <code>str</code> or <code>torch.device</code>) — Defines the device (<em>e.g.</em>, <code>&quot;cpu&quot;</code>, <code>&quot;cuda:1&quot;</code>, <code>&quot;mps&quot;</code>, or a GPU ordinal rank like <code>1</code>) on which this pipeline will be allocated.</p></li><li><p><strong>device_map</strong> (<code>str</code> or <code>Dict[str, Union[int, str, torch.device]</code>, <em>optional</em>) — Sent directly as <code>model_kwargs</code> (just a simpler shortcut). When <code>accelerate</code> library is present, set <code>device_map=&quot;auto&quot;</code> to compute the most optimized <code>device_map</code> automatically (see <strong><a href="https://huggingface.co/docs/accelerate/main/en/package_reference/big_modeling#accelerate.cpu_offload">here</a></strong> for more information).</p><p>Do not use <code>device_map</code> AND <code>device</code> at the same time as they will conflict</p></li><li><p><strong>torch_dtype</strong> (<code>str</code> or <code>torch.dtype</code>, <em>optional</em>) — Sent directly as <code>model_kwargs</code> (just a simpler shortcut) to use the available precision for this model (<code>torch.float16</code>, <code>torch.bfloat16</code>, … or <code>&quot;auto&quot;</code>).</p></li><li><p><strong>trust_remote_code</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) — Whether or not to allow for custom code defined on the Hub in their own modeling, configuration, tokenization or even pipeline files. This option should only be set to <code>True</code> for repositories you trust and in which you have read the code, as it will execute code present on the Hub on your local machine.</p></li><li><p><strong>model_kwargs</strong> (<code>Dict[str, Any]</code>, <em>optional</em>) — Additional dictionary of keyword arguments passed along to the model’s <code>from_pretrained(..., **model_kwargs)</code> topction.</p></li><li><p><strong>kwargs</strong> (<code>Dict[str, Any]</code>, <em>optional</em>) — Additional keyword arguments passed along to the specific pipeline init (see the documentation for the corresponding pipeline class for possible values).</p></li></ul><h3 id="device">Device</h3><ul><li><strong>device</strong> (<code>int</code> or <code>str</code> or <code>torch.device</code>) — Defines the device (<em>e.g.</em>, <code>&quot;cpu&quot;</code>, <code>&quot;cuda:1&quot;</code>, <code>&quot;mps&quot;</code>, or a GPU ordinal rank like <code>1</code>) on which this pipeline will be allocated.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">generator = pipeline(model=<span class="string">&quot;openai/whisper-large&quot;</span>, device=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>如果模型太大，使用单张GPU不够，可以通过设置 device_map = “auto”使用 🤗 <strong><a href="https://huggingface.co/docs/accelerate">Accelerate</a></strong> 自动分配显存，加载模型参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!pip install accelerate</span></span><br><span class="line">generator = pipeline(model=<span class="string">&quot;openai/whisper-large&quot;</span>, device_map=<span class="string">&quot;auto&quot;</span>)</span><br></pre></td></tr></table></figure><p>如果你使用了device_map = “auto”，那么在实例化pipline的时候就不需要设置device参数的值</p><ul><li><strong>device_map</strong> (<code>str</code> or <code>Dict[str, Union[int, str, torch.device]</code>, <em>optional</em>) — Sent directly as <code>model_kwargs</code> (just a simpler shortcut). When <code>accelerate</code> library is present, set <code>device_map=&quot;auto&quot;</code> to compute the most optimized <code>device_map</code> automatically (see <strong><a href="https://huggingface.co/docs/accelerate/main/en/package_reference/big_modeling#accelerate.cpu_offload">here</a></strong> for more information).</li></ul><h3 id="batch-size">Batch Size</h3><p>默认情况下pipline不会进行批处理，但是可以通过下面的方式使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">generator = pipeline(model=<span class="string">&quot;openai/whisper-large&quot;</span>, device=<span class="number">0</span>, batch_size=<span class="number">2</span>)</span><br><span class="line">audio_filenames = [<span class="string">f&quot;audio_<span class="subst">&#123;i&#125;</span>.flac&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">texts = generator(audio_filenames)</span><br></pre></td></tr></table></figure><p>上述的代码使用pipline对10个音频文件进行推理，但是会按照两个批次传递给位于GPU上模型。</p><p>对于list或者dataset或者generator都可以使用批处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> pipeline</span><br><span class="line"><span class="keyword">from</span> transformers.pipelines.pt_utils <span class="keyword">import</span> KeyDataset</span><br><span class="line"><span class="keyword">import</span> datasets</span><br><span class="line"></span><br><span class="line">dataset = datasets.load_dataset(<span class="string">&quot;imdb&quot;</span>, name=<span class="string">&quot;plain_text&quot;</span>, split=<span class="string">&quot;unsupervised&quot;</span>)</span><br><span class="line">pipe = pipeline(<span class="string">&quot;text-classification&quot;</span>, device=<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> out <span class="keyword">in</span> pipe(KeyDataset(dataset, <span class="string">&quot;text&quot;</span>), batch_size=<span class="number">8</span>, truncation=<span class="string">&quot;only_first&quot;</span>):</span><br><span class="line">    <span class="built_in">print</span>(out)</span><br><span class="line">    <span class="comment"># [&#123;&#x27;label&#x27;: &#x27;POSITIVE&#x27;, &#x27;score&#x27;: 0.9998743534088135&#125;]</span></span><br><span class="line">    <span class="comment"># Exactly the same output as before, but the content are passed</span></span><br><span class="line">    <span class="comment"># as batches to the model</span></span><br></pre></td></tr></table></figure><p>但是批处理也不是都会给模型加速，可能会变慢，甚至导致内存泄漏</p><p><strong>Dataset1</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> pipeline</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset</span><br><span class="line"><span class="keyword">from</span> tqdm.auto <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line">pipe = pipeline(<span class="string">&quot;text-classification&quot;</span>, device=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyDataset</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">5000</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, i</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;This is a test&quot;</span></span><br><span class="line"></span><br><span class="line">dataset = MyDataset()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> batch_size <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">8</span>, <span class="number">64</span>, <span class="number">256</span>]:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-&quot;</span> * <span class="number">30</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Streaming batch_size=<span class="subst">&#123;batch_size&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> out <span class="keyword">in</span> tqdm(pipe(dataset, batch_size=batch_size), total=<span class="built_in">len</span>(dataset)):</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># On GTX 970</span></span><br><span class="line">------------------------------</span><br><span class="line">Streaming no batching</span><br><span class="line"><span class="number">100</span>%|██████████████████████████████████████████████████████████████████████| <span class="number">5000</span>/<span class="number">5000</span> [<span class="number">00</span>:<span class="number">26</span>&lt;<span class="number">00</span>:<span class="number">00</span>, <span class="number">187.52</span>it/s]</span><br><span class="line">------------------------------</span><br><span class="line">Streaming batch_size=<span class="number">8</span></span><br><span class="line"><span class="number">100</span>%|█████████████████████████████████████████████████████████████████████| <span class="number">5000</span>/<span class="number">5000</span> [<span class="number">00</span>:04&lt;<span class="number">00</span>:<span class="number">00</span>, <span class="number">1205.95</span>it/s]</span><br><span class="line">------------------------------</span><br><span class="line">Streaming batch_size=<span class="number">64</span></span><br><span class="line"><span class="number">100</span>%|█████████████████████████████████████████████████████████████████████| <span class="number">5000</span>/<span class="number">5000</span> [<span class="number">00</span>:02&lt;<span class="number">00</span>:<span class="number">00</span>, <span class="number">2478.24</span>it/s]</span><br><span class="line">------------------------------</span><br><span class="line">Streaming batch_size=<span class="number">256</span></span><br><span class="line"><span class="number">100</span>%|█████████████████████████████████████████████████████████████████████| <span class="number">5000</span>/<span class="number">5000</span> [<span class="number">00</span>:01&lt;<span class="number">00</span>:<span class="number">00</span>, <span class="number">2554.43</span>it/s]</span><br><span class="line">(diminishing returns, saturated the GPU)</span><br></pre></td></tr></table></figure><p><strong>Dataset2</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyDataset</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">5000</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, i</span>):</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">64</span> == <span class="number">0</span>:</span><br><span class="line">            n = <span class="number">100</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            n = <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;This is a test&quot;</span> * n</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">------------------------------</span><br><span class="line">Streaming no batching</span><br><span class="line"><span class="number">100</span>%|█████████████████████████████████████████████████████████████████████| <span class="number">1000</span>/<span class="number">1000</span> [<span class="number">00</span>:05&lt;<span class="number">00</span>:<span class="number">00</span>, <span class="number">183.69</span>it/s]</span><br><span class="line">------------------------------</span><br><span class="line">Streaming batch_size=<span class="number">8</span></span><br><span class="line"><span class="number">100</span>%|█████████████████████████████████████████████████████████████████████| <span class="number">1000</span>/<span class="number">1000</span> [<span class="number">00</span>:03&lt;<span class="number">00</span>:<span class="number">00</span>, <span class="number">265.74</span>it/s]</span><br><span class="line">------------------------------</span><br><span class="line">Streaming batch_size=<span class="number">64</span></span><br><span class="line"><span class="number">100</span>%|██████████████████████████████████████████████████████████████████████| <span class="number">1000</span>/<span class="number">1000</span> [<span class="number">00</span>:<span class="number">26</span>&lt;<span class="number">00</span>:<span class="number">00</span>, <span class="number">37.80</span>it/s]</span><br><span class="line">------------------------------</span><br><span class="line">Streaming batch_size=<span class="number">256</span></span><br><span class="line">  <span class="number">0</span>%|                                                                                 | <span class="number">0</span>/<span class="number">1000</span> [<span class="number">00</span>:<span class="number">00</span>&lt;?, ?it/s]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/home/nicolas/src/transformers/test.py&quot;</span>, line <span class="number">42</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">for</span> out <span class="keyword">in</span> tqdm(pipe(dataset, batch_size=<span class="number">256</span>), total=<span class="built_in">len</span>(dataset)):</span><br><span class="line">....</span><br><span class="line">    q = q / math.sqrt(dim_per_head)  <span class="comment"># (bs, n_heads, q_length, dim_per_head)</span></span><br><span class="line">RuntimeError: CUDA out of memory. Tried to allocate <span class="number">376.00</span> MiB (GPU <span class="number">0</span>; <span class="number">3.95</span> GiB total capacity; <span class="number">1.72</span> GiB already allocated; <span class="number">354.88</span> MiB free; <span class="number">2.46</span> GiB reserved <span class="keyword">in</span> total by PyTorch)</span><br></pre></td></tr></table></figure><p>由于第二个数据集中，存在个别特别长的数据，就导致同一批次的所有数据都要padding到400个token长，那个一个batch就会从之前的【64，4】变成【64，400】，当批次再增大到256的时候，程序就会崩溃。</p><p>但是对于这样的问题，没有通用的解决方案，只能根据经验和实际的数据进行测试</p><p>下面这些情况不要使用Batch</p><p>对于模型推理的实时性要求较高、如果使用CPU、如果对于可能的输入的sequence_length未知</p><p>如果使用了batching，那么需要注意OOMs(out of memory)</p><h3 id="pipeline-chunk-batching">Pipeline chunk batching</h3><p>像zero-shot- classification和QA问题这样的，一个输入可能需要对一个模型做多个前向传播，所以需要使用ChunkPipeline而不是普通的Pipeline</p><p>普通模型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">preprocessed = pipe.preprocess(inputs)</span><br><span class="line">model_outputs = pipe.forward(preprocessed)</span><br><span class="line">outputs = pipe.postprocess(model_outputs)</span><br></pre></td></tr></table></figure><p>chunk pipeline:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">all_model_outputs = []</span><br><span class="line"><span class="keyword">for</span> preprocessed <span class="keyword">in</span> pipe.preprocess(inputs):</span><br><span class="line">    model_outputs = pipe.forward(preprocessed)</span><br><span class="line">    all_model_outputs.append(model_outputs)</span><br><span class="line">outputs = pipe.postprocess(all_model_outputs)</span><br></pre></td></tr></table></figure><h2 id="在dataset上使用pipeline">在dataset上使用pipeline</h2><p>从🤗 <strong><a href="https://github.com/huggingface/datasets/">Datasets</a>加载并迭代数据集</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># KeyDataset is a util that will just output the item we&#x27;re interested in.</span></span><br><span class="line"><span class="keyword">from</span> transformers.pipelines.pt_utils <span class="keyword">import</span> KeyDataset</span><br><span class="line"><span class="keyword">from</span> datasets <span class="keyword">import</span> load_dataset</span><br><span class="line"></span><br><span class="line">pipe = pipeline(model=<span class="string">&quot;hf-internal-testing/tiny-random-wav2vec2&quot;</span>, device=<span class="number">0</span>)</span><br><span class="line">dataset = load_dataset(<span class="string">&quot;hf-internal-testing/librispeech_asr_dummy&quot;</span>, <span class="string">&quot;clean&quot;</span>, split=<span class="string">&quot;validation[:10]&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> out <span class="keyword">in</span> pipe(KeyDataset(dataset, <span class="string">&quot;audio&quot;</span>)):</span><br><span class="line">    <span class="built_in">print</span>(out)</span><br></pre></td></tr></table></figure><h2 id="在大模型上通过accelerate使用pipeline">在大模型上通过accelerate使用pipeline</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pip install accelerate</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> pipeline</span><br><span class="line"></span><br><span class="line">pipe = pipeline(model=<span class="string">&quot;facebook/opt-1.3b&quot;</span>, torch_dtype=torch.bfloat16, device_map=<span class="string">&quot;auto&quot;</span>)</span><br><span class="line">output = pipe(<span class="string">&quot;This is a cool example!&quot;</span>, do_sample=<span class="literal">True</span>, top_p=<span class="number">0.95</span>)</span><br></pre></td></tr></table></figure><p>也可以传递 8 位加载模型<code>load_in_8bit=True</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pip install accelerate bitsandbytes</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> pipeline</span><br><span class="line"></span><br><span class="line">pipe = pipeline(model=<span class="string">&quot;facebook/opt-1.3b&quot;</span>, device_map=<span class="string">&quot;auto&quot;</span>, model_kwargs=&#123;<span class="string">&quot;load_in_8bit&quot;</span>: <span class="literal">True</span>&#125;)</span><br><span class="line">output = pipe(<span class="string">&quot;This is a cool example!&quot;</span>, do_sample=<span class="literal">True</span>, top_p=<span class="number">0.95</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> HuggingFace </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> HuggingFace </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Transformers Quick Start</title>
      <link href="/2023/08/17/transformer-quick-start/"/>
      <url>/2023/08/17/transformer-quick-start/</url>
      
        <content type="html"><![CDATA[<h1 id="huggingface入门教程">HuggingFace入门教程</h1><h2 id="快速入门">快速入门</h2><p>在开始之前, 确保你已经安装了所有必要的库:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!pip install transformers datasets</span><br></pre></td></tr></table></figure><p>你还需要安装喜欢的机器学习框架: pytorch</p><p>使用<code>pipeline()</code>是利用预训练模型进行推理的最简单的方式. 你能够将<code>pipeline()</code>开箱即用地用于跨不同模态的多种任务. 它支持的任务列表:</p><p><img src="https://picture.fanfer.top/img/huggingface1.png" alt="Untitled"></p><h2 id="使用官方模型库中的模型">使用官方模型库中的模型</h2><p>使用BLIP2作为例子，这是一个image-captioning的Image2Language模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> Blip2Processor, Blip2ForConditionalGeneration</span><br></pre></td></tr></table></figure><p>使用GPU加速模型，通过processor将图片转化为模型输入，通过model实现输</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">processor = Blip2Processor.from_pretrained(<span class="string">&quot;Salesforce/blip2-opt-2.7b&quot;</span>)</span><br><span class="line">model = Blip2ForConditionalGeneration.from_pretrained(<span class="string">&quot;Salesforce/blip2-opt-2.7b&quot;</span>, device_map=<span class="string">&quot;auto&quot;</span>)</span><br><span class="line">device = <span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span></span><br></pre></td></tr></table></figure><p>读取一张照片完成推理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">image = Image.<span class="built_in">open</span>(requests.get(<span class="string">&quot;https://picture.fanfer.top/Test_pics/1681699301.322593.jpg&quot;</span>, stream=<span class="literal">True</span>).raw).convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line">inputs = processor(images=image, return_tensors=<span class="string">&quot;pt&quot;</span>).to(device, torch.float16)</span><br><span class="line">generated_ids = model.generate(**inputs)</span><br><span class="line">generated_text = processor.batch_decode(generated_ids, skip_special_tokens=<span class="literal">True</span>)[<span class="number">0</span>].strip()</span><br><span class="line"><span class="built_in">print</span>(generated_text)</span><br></pre></td></tr></table></figure><p>保存模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pt_save_directory = <span class="string">&quot;./pt_save_pretrained&quot;</span></span><br><span class="line">processor.save_pretrained(pt_save_directory)</span><br><span class="line">model.save_pretrained(pt_save_directory)</span><br></pre></td></tr></table></figure><p>重新从保存的模型处加在模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">processor = Blip2Processor.from_pretrained(tf_save_directory)</span><br><span class="line">pt_model = Blip2ForConditionalGeneration.from_pretrained(tf_save_directory, from_tf=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="根据config自定义模型">根据Config自定义模型</h2><p>可以修改模型的配置类来更改模型的构建方式。配置指定模型的属性，例如隐藏层或注意力头的数量。从自定义配置类初始化模型时，模型参数是随机初始化的，需要先训练模型，然后才能使用它来获得有意义的结果。</p><p><a href="https://huggingface.co/docs/transformers/main/en/create_a_model">Create a custom architecture</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoConfig</span><br><span class="line">my_config = AutoConfig.from_pretrained(<span class="string">&quot;distilbert-base-uncased&quot;</span>, n_heads=<span class="number">12</span>)</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoModel</span><br><span class="line">my_model = AutoModel.from_config(my_config)</span><br></pre></td></tr></table></figure><h2 id="训练模型">训练模型</h2><p>所有的模型都是 <strong><code>[torch.nn.Module](https://pytorch.org/docs/stable/nn.html#torch.nn.Module)</code></strong> 所以可以完成train loop. 🤗 Transformers 为PyTorch提供了 <strong><a href="https://huggingface.co/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a></strong> 类，可以按照下面的方法进行训练</p><p>1.导入预训练模型或者自定义模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoModelForSequenceClassification</span><br><span class="line">model = AutoModelForSequenceClassification.from_pretrained(<span class="string">&quot;distilbert-base-uncased&quot;</span>)</span><br></pre></td></tr></table></figure><p>2.**<a href="https://huggingface.co/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a>**包含可以更改的模型超参数，例如学习率、批量大小和训练周期数。如果不指定任何训练参数，则使用默认值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> TrainingArguments</span><br><span class="line"></span><br><span class="line">training_args = TrainingArguments(</span><br><span class="line">    output_dir=<span class="string">&quot;path/to/save/folder/&quot;</span>,</span><br><span class="line">    learning_rate=<span class="number">2e-5</span>,</span><br><span class="line">    per_device_train_batch_size=<span class="number">8</span>,</span><br><span class="line">    per_device_eval_batch_size=<span class="number">8</span>,</span><br><span class="line">    num_train_epochs=<span class="number">2</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>3.加载预处理类，例如tokenizer, image processor, feature extractor, processor</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoTokenizer</span><br><span class="line">tokenizer = AutoTokenizer.from_pretrained(<span class="string">&quot;distilbert-base-uncased&quot;</span>)</span><br></pre></td></tr></table></figure><p>4.加载数据集</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datasets <span class="keyword">import</span> load_dataset</span><br><span class="line">dataset = load_dataset(<span class="string">&quot;rotten_tomatoes&quot;</span>)  <span class="comment"># doctest: +IGNORE_RESULT</span></span><br></pre></td></tr></table></figure><p>5.对数据进行预处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">tokenize_dataset</span>(<span class="params">dataset</span>):</span><br><span class="line">...</span><br><span class="line">    <span class="keyword">return</span> tokenizer(dataset[<span class="string">&quot;text&quot;</span>])</span><br><span class="line"></span><br><span class="line">dataset = dataset.<span class="built_in">map</span>(tokenize_dataset, batched=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>6. <strong><a href="https://huggingface.co/docs/transformers/main/en/main_classes/data_collator#transformers.DataCollatorWithPadding">DataCollatorWithPadding</a></strong> 从dataset中创建batch</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> DataCollatorWithPadding</span><br><span class="line">data_collator = DataCollatorWithPadding(tokenizer=tokenizer)</span><br></pre></td></tr></table></figure><p>7.创建Trainer对象并训练</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> Trainer</span><br><span class="line"></span><br><span class="line">trainer = Trainer(</span><br><span class="line">    model=model,</span><br><span class="line">    args=training_args,</span><br><span class="line">    train_dataset=dataset[<span class="string">&quot;train&quot;</span>],</span><br><span class="line">    eval_dataset=dataset[<span class="string">&quot;test&quot;</span>],</span><br><span class="line">    tokenizer=tokenizer,</span><br><span class="line">    data_collator=data_collator,</span><br><span class="line">)  <span class="comment"># doctest: +SKIP</span></span><br><span class="line"></span><br><span class="line">trainer.train()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> HuggingFace </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> HuggingFace </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GameFormer</title>
      <link href="/2023/08/12/GameFormer/"/>
      <url>/2023/08/12/GameFormer/</url>
      
        <content type="html"><![CDATA[<p>Author: Zhiyu Huang, Haochen Liu, Chen Lv<br>Code: <a href="https://mczhi.github.io/GameFormer/">https://mczhi.github.io/GameFormer/</a><br>Comment: level-k game theory for planning<br>Key Words: Fusion, Object Detection<br>Score: ⭐️⭐️⭐️⭐️⭐️<br>Source: ICCV2023</p><p>“hierarchical game theory” 的中文翻译是 “分层博弈论”。</p><p>trajectories翻译成中文是“轨迹”。</p><p>motion prediction 运动预测</p><p>level-k 理论是一个在行为经济学和游戏理论中使用的人类行为模型。它假设参与战略游戏的玩家根据其他玩家的行动预测来决定自己的举动。玩家因此可以按照理解其他玩家举动的深度来分类。级别-k理论假设每个玩家都认为自己是游戏中最精明的人。这被归因于许多因素,如“维护成本”或单纯的过分自信。玩家因此根据玩家认为其他竞争者所处的复杂程度而被归类为k级别。你认为他人愈幼稚,你的分类就愈低。这种模式延续至更高级别的玩家,但每个玩家只有有限的推理深度,意味着个体玩家在战略思考的深度上有所限制。</p><h2 id="abstract">Abstract</h2><p>1.本文通过采用分层博弈论来阐述交互预测问题</p><p>2.提出了GameFormer框架：使用Transformer解码器结构，使用上一级的预测结果和环境背景来迭代地改进交互过程</p><p>3.提出一个学习过程，以调节agent在当前级别的行为，以响应上一级别其他agent的行为</p><h2 id="conclusion">Conclusion</h2><p>本论文介绍了 GameFormer，这是一种基于 Transformer 的模型，利用分层博弈论进行交互式预测和规划。我们提出的方法在预测模型中加入了新颖的level-k解码器，用于迭代地改善交互代理的未来轨迹，同时还有一个学习过程，根据上一级的预测结果来调节代理的预测行为。在 Waymo 开放数据集上的实验结果表明，我们的模型在交互预测方面达到了最先进的精度，并在开环和闭环规划测试中优于基线方法。</p><h2 id="introduction">Introduction</h2><p>问题：准确预测周围交通参与者的未来行为并做出安全的符合规范的决策（Motion Prediction and planning）</p><p>挑战：交通参与者的行为依赖于道路结构，交通规范和交通参与者之间的相互作用</p><p>Transformer模型：flexibility and effectiveness 擅长处理多种类别的混合信息，以及处理这些不同类别元素之间的关系。所以在运动模型预测中应用广泛</p><p>当前方法的问题：对于驾驶场景编码，利用agent过去的轨迹表示交互，缺少对未来交互的明确建模。缺少了自动驾驶车辆之间的交互。</p><p>条件预测模型：使用自动驾驶车辆的内部计划来预测其他代理对自动驾驶车辆的反应。这种单向交互方案仍然忽略了自动驾驶车辆和其他道路用户之间的动态相互影响。从博弈论的角度来看，当前的预测/规划模型可以被看作是具有有限交互层级的领导者-追随者博弈。</p><p><img src="https://picture.fanfer.top/img/gameformer1.png" alt="Gameformer1"></p><p>图一：</p><p>我们采用分层推理博弈以迭代的方式来建模代理之间的未来交互，以更好地反映认知推理过程。</p><p>首先，我们使用Transformer编码器将驾驶场景编码为背景信息，包括向量化地图和观察到的代理状态。在未来的解码阶段，我们遵循k-level博弈论，假设代理进行有限次的策略推理。</p><p>0层agent独立行动而不考虑其他代理，而k层agent则假定其他agent处于k-1层，并做出反应。具体而言，我们设置了一系列Transformer解码器来实现k-level推理。</p><p>level-0解码器仅使用初始的模态查询和编码的场景上下文作为键和值来预测代理的多模态未来轨迹。然后，在每个迭代k中，level-k解码器将来自level-(k-1)解码器的预测轨迹，以及背景信息作为输入，来预测当前级别下代理的轨迹。</p><p>此外，我们设计了一个学习过程，通过规范化代理的轨迹来避免与上一级其他代理的轨迹发生碰撞，同时也确保接近于人类驾驶数据。</p><p>本文贡献：</p><ol><li>我们提出了GameFormer，这是一个基于Transformer的交互预测和规划框架，利用分层推理来建模agent之间的交互。</li><li>我们设计了一个学习过程，基于level-k博弈来训练该框架。</li><li>在Waymo交互预测的benchmark中获得SOTA</li><li>我们验证了该框架在开环驾驶场景和闭环模拟中的规划性能，并研究了博弈论设置的影响。</li></ol><h2 id="methodology-game-former">Methodology（Game Former）</h2><p>提出的框架从代理交互的层次博弈模型中得到启发。该框架通过基于转换器的编码器将代理和地图的历史状态编码为背景信息。基于初始模态查询，0级代理的未来轨迹被独立解码。在level-k，一个代理响应level-(k-1)的所有其他代理。0级解码器使用模态嵌入和代理历史编码作为查询输入，以独立解码0级代理的未来轨迹和分数。k级解码器包含一个自我关注模块，以模拟在level-(k-1)级的未来交互，并将该信息附加到场景上下文编码中。<br><img src="https://picture.fanfer.top/img/gameformer2.png" alt="Gameformer2"></p><p>GameFormer架构（Encoder-Decoder）</p><p><img src="https://picture.fanfer.top/img/gameformer3.png" alt="Gameformer3"></p><h2 id="experiments">Experiments</h2><p><strong>open-loop and closed-loop</strong></p><p>close-loop是一个动作进行一次交互，得到新的状态。</p><p>open-loop是指观察第一个状态，然后返回一系列动作，这些都是agent自己想的。</p><p>数据集：Waymo Open Motion Dataset(包含1200h真实驾驶数据)<br>给定智能体过去 1 秒在相应地图上的轨迹，预测最多 8 名智能体未来 8 秒的位置。<br>测试集的真实未来数据隐藏。因此，测试集仅包含 1 秒的历史数据。<br>验证集包含用于模型开发的真实未来数据。<br>此外，测试集和验证集还提供了要预测的场景中最多 8 个对象轨迹的列表。</p><p>所有指标都是通过首先将所有对象存储到对象类型中来计算的。然后按类型计算指标。每种对象类型的指标（miniADE、miniFDE、Miss Rate、和 mAP）均在 3、5 和 8 秒时间点处计算</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> iccv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VoxelNet</title>
      <link href="/2023/07/21/VoxelNet/"/>
      <url>/2023/07/21/VoxelNet/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>本文消除了对3D点云的手动特征工程的需要，提出了VoxelNet，将特征提取和bounding box统一到单个阶段、端到端的可训练深度网络中。</p><p>VoxelNet将点云划分为等距的3D体素，通过引入提速特征编码（VFE）层将每个体素内的一组点转化为统一的特征表示。</p><h2 id="introduction">Introduction</h2><p>针对现在对于3D点云还需要手动特征工程的需求，我们提出了VoxelNet：这是一个通用的3D检测框架，它以端到端的方式同时从点云中学习有区别的特征表示，并预测精确的3D边界框</p><p><strong>主要贡献：</strong></p><ol><li>我们提出了一种新的端到端可训练的深度架构，用于基于点云的三维检测VoxelNet，直接在稀疏的三维点上操作，避免了人工特征工程引入的信息瓶颈。</li><li>我们提出了一种有效的方法来实现体素网，它既受益于稀疏点结构，又受益于体素网格上的高效并行处理。</li><li>我们在KITTI benchmark上进行实验，结果表明，在基于激光雷达的汽车、行人和自行车检测基准中，VoxelNet产生了SOTA结果</li></ol><h2 id="methodology">Methodology</h2><p>分为三个功能模块：特征学习网络、卷积神经网络、区域提取网络</p><p><img src="https://picture.fanfer.top/img/voxnet1.png" alt="Untitled"></p><p>特征学习网络将原始点云作为输入，将空间划分为体素，并将每个体素内的点转换为表征形状信息的矢量表示。这个空间被表示为一个稀疏的4D张量。卷积中间层处理4D张量以聚集空间上下文。最后，RPN生成3D检测</p><aside>💡 RPN：Region Proposal Network区域生成网络，用来提取候选框</aside><h3 id="feature-learning-network">Feature Learning Network</h3><ol><li><p>划分体素，将整个空间划分成大小相同的Voxel</p></li><li><p>分组，将激光雷达点分配到相应的Voxel中，由于雷达的稀疏和不均匀采样，不同的体素包含数量可变的激光雷达点。</p></li><li><p>随机采样。从包含超过T个点的体素中随机抽取固定数量T的点。这个策略有两个目的：(1)节省计算资源 (2)减少了体素之间点的数量的不均衡，减少了采样偏差，增加了更多的变化。</p></li><li><p><strong>体素特征编码 （stacked Voxel feature encoding）</strong></p><p><img src="https://picture.fanfer.top/img/voxnet2.png" alt="Untitled"></p><p><img src="https://picture.fanfer.top/img/voxnet3.png" alt="Untitled"></p><p>上图中Voxel有3个点云数据。作者先用一个FCN层（印象中FCN指的是全卷积层，但这里指的是全连接层）提取这3个点云数据的特征，获得3个Point-wise Feature。</p><p>因为这个操作是<strong>逐点运算</strong>的，并没有引入点与点之间的关系，也就是local feature。作者在此基础上引入Element-wise maxpool，获得<strong>Locally Aggregated Feature。<strong>Locally Aggregated Feature反应了这些点的一个</strong>局部</strong>关系。</p><p>作者将<strong>Point-wise Feature</strong>和<strong>Locally Aggregated Feature</strong>进行了简单的<strong>堆叠融合</strong>，作为下一个VFE层的输入。</p><p>这样连续堆叠几次VFE层后，就获得更丰富的特征表示。最后，使用一个Element-wise maxpool获得最后的一个Voxel-wise Feature。也就是第一张图片中的这个部分</p><p><img src="https://picture.fanfer.top/img/voxnet4.png" alt="Untitled"></p><p>用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mi>F</mi><mi>E</mi><mo>−</mo><mi>i</mi><mo stretchy="false">(</mo><msub><mi>c</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo separator="true">,</mo><msub><mi>c</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">VFE-i(c_{in},c_{out})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>表示第i个VFE层，该层将维度cin的输入特征转换为维度cout的输出特征。线性层学习一个大小为cin *(cout/2)的矩阵，逐点拼接产生维数为cout的输出。</p></li><li><p>Sparse Tensor Representation：仅仅处理非空体素，获得了体素特征列表，是一个4D 的稀疏张量 由于大量的是空体素，因此大大减少了内存使用和计算成本</p></li></ol><p><strong>补充Mask</strong></p><p>由于体素具有数量可变的点，因此通过mask的方式，进行处理后再交给gpu运算。</p><p><img src="https://picture.fanfer.top/img/voxnet5.png" alt="Untitled"></p><p>首先初始化一个K<em>T</em>7的张量来存储体素输入特征，K是非空体素的最大数量，T是每个体素的最大的点数，7是每个点的输入编码的维度。</p><p>注意再完成VFE的连接后，将空点所对应的特征重置为0.</p><h3 id="convolutional-middle-layers">Convolutional Middle Layers</h3><p>点云数据通过特征学习网络后可以被表示成一个<strong>稀疏的4D张量</strong>，维度记做（C,D′,H′,W′） 。其中， C 为Voxel-wise Feature的向量维度（也就是图3中向量的高度）， D′,H′,W′ 为空间的深度、高度和宽度（单位为Voxel数量）。</p><p>因为张量是4维的，作者就用3D卷积来构建这个中间卷积层。目的显然是为了扩大感受野，增加更多的信息描述。</p><h3 id="region-proposal-network">Region Proposal Network</h3><p><img src="https://picture.fanfer.top/img/voxnet6.png" alt="Untitled"></p><p>RPN层在2D物体检测中层出不穷，早在Faster-RCNN中就被提出来了。RPN层主要用来根据学习到的特征，并结合Anchor，在原图中找到物体所在<strong>检测框</strong>和<strong>对应的类别</strong>。</p><p>一般而言，RPN层有两个分支，一个用来输出<strong>类别的概率分布</strong>（通常叫做Score Map），一个用来输出<strong>Anchor到真实框的变化过程</strong>（通常叫做 Regression Map）</p><p>作者提出的RPN层的结构如下图所示。该网络以中间卷积层的输出特征图为输入，分别经过三次下采样（每次stride=2）获得三个不同维度的特征图。作者将这个三个特征图缩放至同一维度后进行拼接，有点FPN（特征金字塔网络）的感觉。最后，拼接的特征被映射成两个输出特征图</p><h2 id="损失函数">损失函数</h2><p>作者引入了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mrow><mi>p</mi><mi>o</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">n_{pos}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>个正anchor和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mrow><mi>n</mi><mi>e</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">N_{neg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>个负anchor。一个gt-3D 检测框可以用一个7维向量表示，分别是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msubsup><mi>x</mi><mi>c</mi><mi>g</mi></msubsup><mo separator="true">,</mo><msubsup><mi>y</mi><mi>c</mi><mi>g</mi></msubsup><mo separator="true">,</mo><msubsup><mi>z</mi><mi>c</mi><mi>g</mi></msubsup><mo separator="true">,</mo><msup><mi>l</mi><mi>g</mi></msup><mo separator="true">,</mo><msup><mi>w</mi><mi>g</mi></msup><mo separator="true">,</mo><msup><mi>h</mi><mi>g</mi></msup><mo separator="true">,</mo><msup><mi>θ</mi><mi>g</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_c^g,y_c^g,z_c^g,l^g,w^g,h^g,\theta^g)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.前三项是框的中心坐标点，然后是长宽高，最后是绕Z轴的偏航角</p><p>假设与gt-bbox匹配的positive anchor的参数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msubsup><mi>x</mi><mi>c</mi><mi>a</mi></msubsup><mo separator="true">,</mo><msubsup><mi>y</mi><mi>c</mi><mi>a</mi></msubsup><mo separator="true">,</mo><msubsup><mi>z</mi><mi>c</mi><mi>a</mi></msubsup><mo separator="true">,</mo><msup><mi>l</mi><mi>a</mi></msup><mo separator="true">,</mo><msup><mi>w</mi><mi>a</mi></msup><mo separator="true">,</mo><msup><mi>h</mi><mi>a</mi></msup><mo separator="true">,</mo><msup><mi>θ</mi><mi>a</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_c^a,y_c^a,z_c^a,l^a,w^a,h^a,\theta^a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。那么RPN层中的regression分支要学的东西，就是从positive anchor到gt-bbox的变化过程参数，定义如下：</p><p><img src="https://picture.fanfer.top/img/voxnet7.png" alt="Untitled"></p><p>那么损失函数的定义主要分为两部分，分别为（1）分类损失（3）上述7个参数的回归损失。</p><p>其中分类损失包括Positive anchor和Negative anchor的损失。</p><p>具体定义如下：<br><img src="https://picture.fanfer.top/img/voxnet8.png" alt="Untitled"></p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> cvpr </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BEVFusion</title>
      <link href="/2023/06/06/BEVFusion/"/>
      <url>/2023/06/06/BEVFusion/</url>
      
        <content type="html"><![CDATA[<h1 id="bevfusion-multi-task-multi-sensor-fusion-with-unified-bird-s-eye-view-representation">BEVFusion: Multi-Task Multi-Sensor Fusion with Unified Bird’s-Eye View Representation</h1><p>Author: MIT HanSong<br>Code: <a href="https://github.com/ADLab-AutoDrive/BEVFusion">https://github.com/ADLab-AutoDrive/BEVFusion</a><br>Comment: BEV , attention<br>Completed: December 11, 2022<br>Key Words: Fusion, Object Detection<br>Score: ⭐️⭐️⭐️⭐️⭐️<br>Source: CVPR2022</p><h2 id="abstract">Abstract</h2><p>将多传感器融合对于准确可靠的自动驾驶系统至关重要。最近提出的方法基于<strong>点级（point-level）融合</strong>：使用摄像头特征增强激光雷达点云。然而，摄像头到激光雷达的投影丢弃了摄像头特征的语义密度（semantic density），阻碍了此类方法的有效性，尤其是对于面向语义的任务（如3D场景分割）。</p><p>本文提出的BEVFusion是一种多任务多传感器融合框架，其统一BEV表征空间中的多模态特征，很好地保留了几何和语义信息。为实现这一点，优化BEV池化，诊断并解除视图转换中的关键效率瓶颈，将延迟减少了40倍。BEVFusion从根本上来说是任务无关的，无缝支持不同的3D感知任务，几乎没有架构的更改。</p><p>在nuScenes数据集的3D目标检测上实现1.3%的mAP和NDS提升，在BEV分割上实现了13.6%的mIoU提升，计算成本降低了1.9倍。</p><h2 id="introduction">Introduction</h2><p>用语义标注、CNN特征或2D图像中的虚拟点（virtual points）来增强激光雷达点云，然后应用现有基于激光雷达的检测器预测3D边框。尽管这些点级融合方法在大规模检测基准上表现出了卓越的性能，但几乎不适用于面向语义的任务，如BEV地图分割。这是因为摄像头到激光雷达的投影在语义上是有损的，而BEB Fusion就是想避免这个几何和语义的损失，建立BEV特征的融合表征，实现3D语义任务。</p><p>如图所示：对于典型的32线激光雷达扫描，只有5%的摄像头特征与激光雷达点匹配，而其他所有特征都将被删除。对于更稀疏的激光雷达（或成像雷达），这种密度差异将变得更加剧烈。</p><p><img src="https://picture.fanfer.top/img/bevfusion1.png" alt="Untitled"></p><p>在本文中，我们提出了BEVFusion 使用同一个BEV视图来表示空间中的多模态特征，同时保持了照相机的语义密度和激光雷达的空间特征，支持大多数的3D感知任务，同时发现转化效率的瓶颈主要是BEV池化操作，因此设计了具有预运算和缩短间隔的专用内核来消除瓶颈。最后使用全卷积BEV编码器来融合统一的BEV特征，并添加任务特定的检测头来支持不同的任务。</p><h2 id="methodology">Methodology</h2><p><img src="https://picture.fanfer.top/img/bevfusion2.png" alt="Untitled"></p><p>BEVFusion从多模态输入中提取特征，并通过视图转换转换成BEV空间，将统一的BEV特征和全卷积BEV编码器融合在一起，并支持具有特定任务头的不同任务。</p><blockquote><p><strong>BEVFusion Pipline:</strong></p><ol><li>对于不同的模态的数据采用不同的特征提取器提取特征</li><li>将多模态的特征转化成同一个共享BEV空间中，同时保留了空间几何信息和丰富的语义信息</li><li>使用预计算和缩短间隔来消除视图转换过程中的效率瓶颈，加速BEV池化</li><li>对BEV特征使用基于卷积的编码器</li><li>针对不同的任务使用不同的检测头</li></ol></blockquote><h3 id="unified-represetation">Unified Represetation</h3><p>采用BEV作为融合的统一表征，该视图对几乎所有感知任务都很友好，因为输出空间也在BEV。更重要的是，到BEV的转换同时保持了几何结构（来自激光雷达特征）和语义密度（来自摄像头特征）。一方面，LiDAR到BEV投影将稀疏LiDAR特征沿高度维度（height dimension）展平，因此不会产生几何失真。另一方面，摄像头到BEV投影将每个摄像头特征像素投射回3D空间的一条光线中（ray casting），这可以生成密集的BEV特征图，并保留了摄像头的全部语义信息。</p><h3 id="camera-to-bev-transformation">Camera-to-BEV Transformation</h3><p>摄像头到BEV的变换非常重要，因为与每个摄像头图像特征像素关联的深度（depth）本质上是不明确的。根据LSS，明确预测每个像素的离散深度分布。然后，沿着摄像头光线将每个特征像素分散成D个离散点，并根据相应的深度概率重缩放（rescale）相关特征。这将生成大小为N<strong>H</strong>W*D的摄像头特征点云，其中N是摄像头数，（H，W）是摄像头特征图大小。此类3D特征点云沿x、y轴量化，步长为r（例如，0.4m）。用BEV池化操作来聚合每个r×r BEV网格内的所有特征，并沿z轴展平特征</p><p>虽然简单，但BEV池化的效率和速度惊人地低，在RTX 3090 GPU上需要500毫秒以上（而模型的其余部分计算只需要100毫秒左右）。这是因为摄像头特征点云非常大，即典型的工作负载，每帧可能生成约200万个点，比激光雷达特征点云密度高两个数量级。为了消除这一效率瓶颈，建议通过预计算和间歇降低来优化BEV池化进程。</p><p><img src="https://picture.fanfer.top/img/bevfusion3.png" alt="Untitled"></p><p>如图所示：摄像机到BEV变换（a）是在统一的BEV空间进行传感器融合的关键步骤。然而，现有的实现速度非常慢，单个场景可能需要2秒的时间。文章提出了有效的BEV池化方法（b），通过预计算使间歇降低和加快网格关联，视图转换模块（c，d）的执行速度提高了40倍</p><h3 id="预计算">预计算</h3><p>BEV池化的第一步是将摄像头特征点云的每个点与BEV网格相关联。与激光雷达点云不同，摄像头特征点云的坐标是固定的（只要摄像头内参外参保持不变，通常在适当标定后）。基于此，预计算每个点的3D坐标和BEV网格索引。还有，根据网格索引对所有点进行排序，并记录每个点排名。在推理过程中，只需要根据预计算的排序对所有特征点重排序。这种缓存机制可以将网格关联的延迟从17ms减少到4ms。</p><h3 id="间歇降低">间歇降低</h3><p>网格关联后，同一BEV网格的所有点将在张量表征中连续。BEV池化的下一步是通过一些对称函数（例如，平均值、最大值和求和）聚合每个BEV网格内的特征。现有的实现方法首先计算所有点的前缀和（prefix sum），然后减去索引发生变化的边界值。然而，前缀和操作，需要在GPU进行树缩减（tree reduction），并生成许多未使用的部分和（因为只需要边界值），这两种操作都是低效的。为了加速特征聚合，文章里实现一个专门的GPU内核，直接在BEV网格并行化：为每个网格分配一个GPU线程，该线程计算其间歇和（interval sum）并将结果写回。该内核消除输出之间的依赖关系（因此不需要多级树缩减），并避免将部分和写入DRAM，从而将特征聚合的延迟从500ms减少到2ms。</p><aside>💡 通过优化的BEV池化，摄像头到BEV的转换速度提高了40倍：延迟从500ms减少到12ms（仅为模型端到端运行时间的10%），并且可以在不同的分特征辨率之间很好地扩展。在共享BEV表征中，这是统一多模态感知特征的关键促成因素。两项并行化工作也发现了纯摄像头3D检测的这一效率瓶颈。假设均匀深度分布，或截断每个BEV网格内的点，可以近似视图transformer计算。相比之下，该技术在没有任何近似的情况下是精确的，但仍然更快。</aside><h2 id="fully-convolutional-fusion">Fully-Convolutional Fusion</h2><p>将所有的感官特征转换为共享的BEV表示，我们可以很容易地将它们与元素操作符(例如拼接)融合在一起。尽管在同一空间中，由于视图转换器的深度不准确，LiDAR BEV特征和相机BEV特征仍然会在一定程度上出现空间错位。为此，我们应用了一个基于卷积的BEV编码器(带有一些剩余块)来补偿这种局部失调。我们的方法可能从更精确的深度估计中受益</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> cvpr </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数字图像处理</title>
      <link href="/2023/05/07/ImageTackle/"/>
      <url>/2023/05/07/ImageTackle/</url>
      
        <content type="html"><![CDATA[<h2 id="边缘提取基本原理">边缘提取基本原理</h2><p>​图像边缘是图像最基本的特征，所谓边缘(Edge) 是指图像局部特性的不连续性。灰度或结构等信息的突变处称之为边缘。例如，灰度级的突变、颜色的突变,、纹理结构的突变等。边缘是一个区域的结束，也是另一个区域的开始，利用该特征可以分割图像。</p><p>​图像的边缘有方向和幅度两种属性。边缘通常可以通过一阶导数或二阶导数检测得到。一阶导数是以最大值作为对应的边缘的位置，而二阶导数则以过零点作为对应边缘的位置。</p><p>​要得到一幅图像的梯度，则要求在图像的每个像素点位置处计算偏导数。我们处理的是数字量，因此要求关于一点的邻域上的偏导数的数字近似，因此一幅图像在(x,y)位置和x,y方向上的梯度大小计算如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>=</mo><munder><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mn>0</mn></mrow></munder><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>ϵ</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mi>ϵ</mi></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1.1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\frac {\partial f(x,y) } {\partial x }=\lim_{x \to 0} \frac{f(x+\epsilon,y)-f(x,y)}{\epsilon}  \tag{1.1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.144108em;vertical-align:-0.717108em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.382892em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.717108em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">ϵ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.144108em;vertical-align:-0.717108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span><span class="mord">.</span><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo>=</mo><munder><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mn>0</mn></mrow></munder><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>ϵ</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mi>ϵ</mi></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1.2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\frac {\partial f(x,y) } {\partial y }=\lim_{x \to 0} \frac{f(x+\epsilon,y)-f(x,y)}{\epsilon} \tag{1.2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.30744em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.144108em;vertical-align:-0.717108em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.382892em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.717108em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">ϵ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.30744em;vertical-align:-0.8804400000000001em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span><span class="mord">.</span><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>（1）一阶导数的边缘算子</p><p>通过模板作为核与图像的每个像素点做卷积和运算，然后选取合适的阈值来提取图像的边缘。常见的有Roberts算子、Sobel算子和Prewitt算子。</p><p>（2）二阶导数的边缘算子</p><p>依据于二阶导数过零点，常见的有Laplacian 算子，此类算子对噪声敏感。</p><p>（3）其他边缘算子</p><p>前面两类均是通过微分算子来检测图像边缘，还有一种就是Canny算子，其是在满足一定约束条件下推导出来的边缘检测最优化算子。</p><p>对于不同的滤波器模板得到的梯度是不同的，这也就衍生出很多算子，如Roberts、Prewitt、Sobel和Laplacian算子等。</p><h3 id="sobel算子">Sobel算子</h3><p>Sobel算子是一种用于边缘检测的离散微分算子，它结合了高斯平滑和微分求导。该算子用于计算图像明暗程度近似值，根据图像边缘旁边明暗程度把该区域内超过某个数的特定点记为边缘。Sobel算子在Prewitt算子的基础上增加了权重的概念，认为相邻点的距离远近对当前像素点的影响是不同的，距离越近的像素点对应当前像素的影响越大，从而实现图像锐化并突出边缘轮廓。</p><p>Sobel算子根据像素点上下、左右邻点灰度加权差，在边缘处达到极值这一现象检测边缘。对噪声具有平滑作用，提供较为精确的边缘方向信息。因为Sobel算子结合了高斯平滑和微分求导（分化），因此结果会具有更多的抗噪性，当对精度要求不是很高时，Sobel算子是一种较为常用的边缘检测方法。</p><p>Sobel算子的边缘定位更准确，常用于噪声较多、灰度渐变的图像。其算法模板如下面的公式所示，其中  表示水平方向， 表示垂直方向。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>x</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace width="1em"/><msub><mi>d</mi><mi>y</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace width="1em"/></mrow><annotation encoding="application/x-tex">d_x=\begin{bmatrix} -1 &amp; 0 &amp;1 \\ -2 &amp; 0 &amp; 2\\-1 &amp; 0 &amp;1 \end{bmatrix}\quad d_y=\begin{bmatrix} -1 &amp; -2 &amp;1 \\ 0 &amp; 0 &amp; 0\\1 &amp; 2 &amp;1 \end{bmatrix}\quad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span></span></span></span></span></p><h3 id="roberts算子">Roberts算子</h3><p>Roberts算子又称为交叉微分算法，它是基于交叉差分的梯度算法，通过局部差分计算检测边缘线条。常用来处理具有陡峭的低噪声图像，当图像边缘接近于正45度或负45度时，该算法处理效果更理想。其缺点是对边缘的定位不太准确，提取的边缘线条较粗。Roberts算子的模板分为水平方向和垂直方向，如下式所示，从其模板可以看出，Roberts算子能较好的增强正负45度的图像边缘。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>x</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace width="1em"/><msub><mi>d</mi><mi>y</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace width="1em"/></mrow><annotation encoding="application/x-tex">d_x=\begin{bmatrix} -1 &amp; 0 \\ 0 &amp; 1 \end{bmatrix}\quad d_y=\begin{bmatrix} 0 &amp; -1 \\ 1 &amp; 0 \end{bmatrix}\quad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:1em;"></span></span></span></span></span></p><h3 id="prewitt算子">Prewitt算子</h3><p>Prewitt算子是一种图像边缘检测的微分算子，其原理是利用特定区域内像素灰度值产生的差分实现边缘检测。由于Prewitt算子采用 33 模板对区域内的像素值进行计算，而Robert算子的模板为 22，故Prewitt算子的边缘检测结果在水平方向和垂直方向均比Robert算子更加明显。Prewitt算子适合用来识别噪声较多、灰度渐变的图像，其计算公式如下所示：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>x</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace width="1em"/><msub><mi>d</mi><mi>y</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace width="1em"/></mrow><annotation encoding="application/x-tex">d_x=\begin{bmatrix} -1 &amp; 0 &amp;1 \\ -1 &amp; 0 &amp;1\\-1 &amp; 0 &amp;1 \end{bmatrix}\quad d_y=\begin{bmatrix} -1 &amp; -1 &amp;-1 \\ 0 &amp; 0 &amp; 0\\1 &amp; 1 &amp;1 \end{bmatrix}\quad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span></span></span></span></span></p><h3 id="marr算子">Marr算子</h3><p>一种利用图像强度二阶导数的零交叉点来求边缘点的算法对噪声十分敏感，所以在边缘增强前滤除噪声。这是一种根据人类视觉特性提出了一种边缘检测的方法，该方法将高斯滤波和拉普拉斯检测算子结合在一起进行边缘检测的方法。Marr和Hildreth证明了边缘检测中灰度变化和图像的尺寸无关检测算子可以为不同尺度；灰度变化梯度在一阶导数的极值点，或在二阶导数为零的交叉点。</p><p>在laplace算子 中，满足f是标准差的二维高斯分布函数为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">f(x,y)=e^{-\frac{x^2+y^2}{2\sigma^2 } }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3013099999999997em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3013099999999997em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2112714285714286em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 求微分得：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mo>▽</mo><mn>2</mn></msup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mtext> </mtext><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac><mo>+</mo><mfrac><mrow><mtext> </mtext><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\bigtriangledown ^2f(x,y)=\frac{\ {\partial^2}  f(x,y)}{\partial x^2} +\frac{\ {\partial^2}  f(x,y)}{\partial y^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mbin">▽</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.371548em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mo>▽</mo><mn>2</mn></msup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mfrac><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow><msup><mi>σ</mi><mn>4</mn></msup></mfrac><mo fence="true">]</mo></mrow><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">\bigtriangledown ^2f(x,y)=\left [ \frac{x^2+y^2-2\sigma ^2}{\sigma ^4}  \right ]  e^{-\frac{x^2+y^2}{2\sigma ^2} }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mbin">▽</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.441138em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3013099999999997em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2112714285714286em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中上式被称为高斯拉普拉斯(LoG)，LoG的零点出现在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>=</mo><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">x^2+y^2=2\sigma^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>处。</p><h3 id="canny边缘检测">Canny边缘检测</h3><p>​Canny边缘检测算法是比较出色的算法，它包含以下四个步骤：</p><p>1.<strong>高斯滤波</strong></p><p>滤波的主要目的是降噪，一般的图像处理算法都需要先进行降噪。而高斯滤波主要使图像变得平滑（模糊），同时也有可能增大了边缘的宽度。</p><p>高斯函数是一个类似与正态分布的中间大两边小的函数。</p><p>对于一个位置（m,n）的像素点，其灰度值为f(m,n)。</p><p>那么经过高斯滤波后的灰度值将变为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mi>σ</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mrow><mn>2</mn><mi>π</mi><msup><mi>σ</mi><mn>2</mn></msup></mrow></msqrt></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><msup><mi>m</mi><mn>2</mn></msup><mo>+</mo><msup><mi>n</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup><mo>⋅</mo><mi>f</mi><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_\sigma (m,n)=\frac{ 1}{\sqrt{2\pi \sigma ^2}} e^{-\frac{m^2+n^2}{2\sigma^2} }\cdot f(m,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25144em;vertical-align:-0.93em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.154946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9550540000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.915054em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.08494599999999997em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.24644em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1328857142857145em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p><p>​简单说就是用一个高斯矩阵乘以每一个像素点及其邻域，取其带权重的平均值作为最后的灰度值。</p><p><strong>2. 计算梯度值和梯度方向</strong></p><p>​边缘是什么？边缘就是灰度值变化较大的的像素点的集合。一道黑边一道白边中间就是边缘，它的灰度值变化是最大的，在图像中，用梯度来表示灰度值的变化程度和方向。</p><p>​它可以通过点乘一个sobel或其它算子得到不同方向的梯度值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>g</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_x(m,n),g_y(m,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p><p>​梯度通过以下公式计算梯度值和梯度方向：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msqrt><mrow><msub><mi>g</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><msub><mi>g</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">G(m,n)=\sqrt{g_x(m,n)^2+g_y(m,n)^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.574179em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.265821em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.225821em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.574179em;"><span></span></span></span></span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>t</mi><mi>a</mi><mi>n</mi><mfrac><mrow><msub><mi>g</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>g</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\theta=arctan\frac{g_y(m,n)}{g_x(m,n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><strong>3. 过滤非最大值</strong></p><p>​在高斯滤波过程中，边缘有可能被放大了。这个步骤使用一个规则来过滤不是边缘的点，使边缘的宽度尽可能为1个像素点：如果一个像素点属于边缘，那么这个像素点在梯度方向上的梯度值是最大的。否则不是边缘，将灰度值设为0。</p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: equation at position 16: M_T(m,n)=\begin{̲e̲q̲u̲a̲t̲i̲o̲n̲}̲\left\{\begin…'>M_T(m,n)=\begin{equation}\left\{\begin{array}{lr}M(m,n) &amp; \textsf{if}\ M(m,n)&gt;T\\0 &amp; otherwise\\\end{array}\right.\end{equation}</p><p><strong>4. 使用上下阈值来检测边缘</strong></p><p>​一般情况下，使用一个阈值来检测边缘，但是这样做未免太武断了。如果能够使用启发式的方法确定一个上阀值和下阀值，位于下阀值之上的都可以作为边缘，这样就可能提高准确度。</p><h2 id="各类算子效果比较">各类算子效果比较</h2><p>（1）Roberts 算子</p><p>​Roberts算子利用局部差分算子寻找边缘，边缘定位精度较高，但容易丢失一部分边缘，不具备抑制噪声的能力。该算子对具有陡峭边缘且含噪声少的图像效果较好，尤其是边缘正负45度较多的图像，但定位准确率较差；</p><p>（2）Sobel 算子</p><p>​Sobel算子考虑了综合因素，对噪声较多的图像处理效果更好，Sobel 算子边缘定位效果不错，但检测出的边缘容易出现多像素宽度。</p><p>（3） Prewitt 算子</p><p>​Prewitt算子对灰度渐变的图像边缘提取效果较好，而没有考虑相邻点的距离远近对当前像素点的影响，与Sobel 算子类似，不同的是在平滑部分的权重大小有些差异；</p><p>（4）Marr算子</p><p>​Marr 算子不依赖于边缘方向的二阶微分算子，对图像中的阶跃型边缘点定位准确，该算子对噪声非常敏感，它使噪声成分得到加强，这两个特性使得该算子容易丢失一部分边缘的方向信息，造成一些不连续的检测边缘，同时抗噪声能力比较差.</p><p>（5）Canny边缘检测</p><p>​Canny边缘检测算子是所有边缘检测算子中最优秀的，具有低错误率。已定位的边缘尽可能的接近真实边缘，由检测子标记为边缘的一点和真实边缘的中心之间的距离最小。对于没一个真实的边缘点，检测子都只返回一个点，意味着真实边缘周围的局部最大数最小。</p><h2 id="实现">实现</h2><p>​本次实验过程中，采用的是经典的Model.jpg,在anaconda python版本3.7 Jupyter-notebook中进行实验。在读取图片后统一对图像进行了灰度化，并进行高斯滤波和阈值处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#读取图像</span></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;model.jpg&#x27;</span>)</span><br><span class="line">img_RGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) </span><br><span class="line"><span class="comment">#灰度化处理图像</span></span><br><span class="line">grayImage = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line"><span class="comment">#高斯滤波</span></span><br><span class="line">gaussianBlur = cv2.GaussianBlur(grayImage, (<span class="number">3</span>,<span class="number">3</span>), <span class="number">0</span>)</span><br><span class="line"><span class="comment">#阈值处理</span></span><br><span class="line">ret, binary = cv2.threshold(gaussianBlur, <span class="number">127</span>, <span class="number">255</span>, cv2.THRESH_BINARY)</span><br></pre></td></tr></table></figure><p>​在实验过程中，依次将图像经过自定义的函数进行处理提取图像边缘。</p><p>​使用Sobel算子进行边缘提取。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">usSobel</span>(<span class="params">grayImage</span>):</span><br><span class="line">    x = cv2.Sobel(grayImage, cv2.CV_16S, <span class="number">1</span>, <span class="number">0</span>)  <span class="comment"># 对x求一阶导</span></span><br><span class="line">    y = cv2.Sobel(grayImage, cv2.CV_16S, <span class="number">0</span>, <span class="number">1</span>)  <span class="comment"># 对y求一阶导</span></span><br><span class="line">    absX = cv2.convertScaleAbs(x)</span><br><span class="line">    absY = cv2.convertScaleAbs(y)</span><br><span class="line">    Sobel = cv2.addWeighted(absX, <span class="number">0.5</span>, absY, <span class="number">0.5</span>, <span class="number">0</span>) </span><br><span class="line">    ret, binary = cv2.threshold(Sobel, <span class="number">127</span>, <span class="number">255</span>, cv2.THRESH_BINARY)</span><br><span class="line">    plt.subplot(<span class="number">121</span>),plt.imshow(binary, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;二值图&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">    plt.subplot(<span class="number">122</span>),plt.imshow(Sobel, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;Sobel算子&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><p>​使用Roberts算子进行边缘提取。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">useRoberts</span>(<span class="params">grayImage</span>):</span><br><span class="line">    <span class="comment"># Roberts算子</span></span><br><span class="line">    kernelx = np.array([[-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>]], dtype=<span class="built_in">int</span>)</span><br><span class="line">    kernely = np.array([[<span class="number">0</span>, -<span class="number">1</span>], [<span class="number">1</span>, <span class="number">0</span>]], dtype=<span class="built_in">int</span>)</span><br><span class="line">    x = cv2.filter2D(grayImage, cv2.CV_16S, kernelx)</span><br><span class="line">    y = cv2.filter2D(grayImage, cv2.CV_16S, kernely)</span><br><span class="line">    <span class="comment"># 转uint8</span></span><br><span class="line">    absX = cv2.convertScaleAbs(x)</span><br><span class="line">    absY = cv2.convertScaleAbs(y)</span><br><span class="line">    Roberts = cv2.addWeighted(absX, <span class="number">0.5</span>, absY, <span class="number">0.5</span>, <span class="number">0</span>)</span><br><span class="line">    ret, binary = cv2.threshold(Roberts, <span class="number">127</span>, <span class="number">255</span>, cv2.THRESH_BINARY)</span><br><span class="line">    plt.subplot(<span class="number">121</span>),plt.imshow(binary, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;二值图&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">    plt.subplot(<span class="number">122</span>),plt.imshow(Roberts, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;Roberts算子&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><p>​使用Prewitt算子进行边缘提取。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">usePrewitt</span>(<span class="params">grayImage</span>):</span><br><span class="line">    <span class="comment"># Prewitt算子</span></span><br><span class="line">    kernelx = np.array([[<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>]], dtype=<span class="built_in">int</span>)</span><br><span class="line">    kernely = np.array([[-<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>], [-<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>], [-<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>]], dtype=<span class="built_in">int</span>)</span><br><span class="line">    x = cv2.filter2D(grayImage, cv2.CV_16S, kernelx)</span><br><span class="line">    y = cv2.filter2D(grayImage, cv2.CV_16S, kernely)</span><br><span class="line">    absX = cv2.convertScaleAbs(x)</span><br><span class="line">    absY = cv2.convertScaleAbs(y)</span><br><span class="line">    Prewitt = cv2.addWeighted(absX, <span class="number">0.5</span>, absY, <span class="number">0.5</span>, <span class="number">0</span>)</span><br><span class="line">    ret, binary = cv2.threshold(Prewitt, <span class="number">127</span>, <span class="number">255</span>, cv2.THRESH_BINARY)</span><br><span class="line">    plt.subplot(<span class="number">121</span>),plt.imshow(binary, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;二值图&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">    plt.subplot(<span class="number">122</span>),plt.imshow(Prewitt, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;Prewitt算子&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><p>​使用canny算子进行边缘提取。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">useCanny</span>(<span class="params">gaussianBlur</span>):</span><br><span class="line">    <span class="comment">#using system topction</span></span><br><span class="line">    Canny = cv2.Canny(gaussianBlur, <span class="number">50</span>, <span class="number">150</span>)</span><br><span class="line">    ret, binary = cv2.threshold(Canny, <span class="number">127</span>, <span class="number">255</span>, cv2.THRESH_BINARY)</span><br><span class="line">    plt.subplot(<span class="number">121</span>),plt.imshow(binary, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;二值图&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">    plt.subplot(<span class="number">122</span>), plt.imshow(Canny, cmap=plt.cm.gray), plt.title(<span class="string">&#x27;Canny算子&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br></pre></td></tr></table></figure><p>​使用Marr进行边缘提取。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">useMarr</span>(<span class="params">binary</span>):</span><br><span class="line">    dst = cv2.Laplacian(binary, cv2.CV_16S, ksize = <span class="number">3</span>)</span><br><span class="line">    Laplacian = cv2.convertScaleAbs(dst)</span><br><span class="line">    ret, binary = cv2.threshold(Laplacian, <span class="number">127</span>, <span class="number">255</span>, cv2.THRESH_BINARY)</span><br><span class="line">    plt.subplot(<span class="number">121</span>),plt.imshow(binary, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;二值图&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">    plt.subplot(<span class="number">122</span>),plt.imshow(Laplacian, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;Laplacian算子&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br></pre></td></tr></table></figure><p>​最后输出图像，比较结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.subplot(<span class="number">231</span>),plt.imshow(img_RGB),plt.title(<span class="string">&#x27;原始图像&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>) <span class="comment">#坐标轴关闭</span></span><br><span class="line">plt.subplot(<span class="number">232</span>),plt.imshow(binary, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;二值图&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">plt.subplot(<span class="number">233</span>),plt.imshow(Roberts, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;Roberts算子&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">plt.subplot(<span class="number">234</span>),plt.imshow(Prewitt, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;Prewitt算子&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">plt.subplot(<span class="number">235</span>),plt.imshow(Sobel, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;Sobel算子&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">plt.subplot(<span class="number">236</span>),plt.imshow(Laplacian, cmap=plt.cm.gray ),plt.title(<span class="string">&#x27;Laplacian算子&#x27;</span>), plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 相机 </tag>
            
            <tag> 图像 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TransFusion</title>
      <link href="/2023/05/06/TransFusion/"/>
      <url>/2023/05/06/TransFusion/</url>
      
        <content type="html"><![CDATA[<p>Author: Bai, Xuyang; Hu, Zeyu; Zhu, Xinge; Huang, Qingqiu; Chen, Yilun; Fu, Hongbo; Tai, Chiew-Lan;<br>Code: <a href="https://github.com/XuyangBai/TransFusion">https://github.com/XuyangBai/TransFusion</a><br>Comment: soft calibration , attention<br>Completed: December 11, 2022<br>Key Words: Fusion, Object Detection<br>Link: arXiv:2203.11496<br>Score: ⭐️⭐️⭐️⭐️⭐️<br>Source: CVPR2022<br>Status: once</p><h2 id="abstract">Abstract</h2><p>针对：Lidar-camera fusion ，劣质图像鲁棒性差这个问题，认为是由当下的hard-association (calibration)导致的。</p><p>We propose TransFusion, a robust solution to LiDAR-camera fusion with a soft-association mechanism to handle inferior image conditions.</p><h2 id="introduction-related-work">Introduction&amp;Related work</h2><p>VoxelNet \ PointPillar 仅仅使用Lidar信息就取得了很好的效果。由于点云的稀疏性，要使用Fusion</p><p>融合的方法一般分成三种：1.result-level：PoinNet、RoarNet 2.proposal-level:MV3D 、AVOD</p><ol><li>point-level（更好的效果）：一部分先将点云投射到鸟瞰图（BEV）平面上，然后将图像特征与BEV像素相融合</li></ol><blockquote><p>PI-RCNN: An efficient multi-sensor 3d object detector with point-based attentive<br>cont-conv fusion module. AAAI, 2020.</p><p>3D-CVF: Generating joint camera and lidar features using cross-view spatial feature fusion for 3d object detection. ECCV, 2020</p></blockquote><p><strong>Contributions:</strong></p><ol><li>采用soft-association</li><li>使用了基于transformer的融合方法进行细腻度融合来解决3D检测问题。有很好的鲁棒性</li><li>查询方法上的改进</li><li>nuScenes的SOTA效果</li></ol><h2 id="methodology">Methodology</h2><p><img src="https://img1.imgtp.com/2023/05/06/ewvQBfVs.png" alt="Untitled"></p><p>3D and 2D backbones to extract LiDAR BEV feature map and image feature map.有两个layer组成</p><p>（1）第一层使用一组稀疏的object query生成初始 3D 边界框，以<strong>input-dependent</strong>和<strong>category-aware</strong>的方式进行初始化。 （2）第二层将第一阶段的object query（带有初始预测）与图像特征密切关联并融合，产生丰富的纹理和颜色线索，以获得更好的检测结果。引入了空间调制交叉注意 (SMCA) 机制以涉及局部诱导偏差(locality inductive bias)并帮助网络更好地关注相关图像区域。我们还提出了一种图像image-guided query initialization策略，以涉及 LiDAR BEV 上的image guidance。该策略有助于生成在稀疏 LiDAR 点云中难以检测到的object query。</p><h3 id="preliminary">Preliminary</h3><p>第一层解码器：使用一组稀疏的object query从 LIDAR 点云预测初始边界框</p><p>与2D中的 input-dependent object query不同，我们使object queryinput-dependent和category-aware，更好丰富query的位置和类别信息。</p><p>object query：用transformer架构学习一小组嵌入(embeddings)（向量集合）</p><p>在我们的工作中，每个object query都包含一个提供对象定位的query positions和一个编码实例信息的query feature，例如框的大小、方向等。</p><h3 id="query-initialization">Query Initialization</h3><p>如果能对object queries 又较好的初始化效果，可以弥补1-layer 和6-layers的效果差距。经过我们的观察，我们提出一个 基于<strong>center-heatmap</strong> 的 <strong>input-dependent</strong> 的初始化策略，仅仅使用一层layer就获得很好的效果。</p><aside>💡 heatmap：即热力图，在目标检测的图像处理中，采用二维高斯核来表示关键点。以box的中心点坐标取整作为高斯圆的圆心，以box的大小确定高斯圆的半径，代入高斯公式，填充高斯函数计算值（0-1），圆心的值最大，沿半径向外递减，在图像中，中心点最亮，沿半径向外变暗。热力图中，不是中心点的地方全部设为0，即黑色区域。</aside><aside>💡 具体来说，给定一个d维LIDAR BEV特征图 X*Y*D，我们首先预测一个class-specific的heatmap(X*Y*K)，其中 X × Y 描述了 BEV 特征图的大小，K 是类别的数量。然后我们将heatmap视为 X × Y × K 对象候选，并选择所有类别的前 N 个候选对象作为我们的初始object query。<p>为了避免空间上too closed queries，我们选择局部最大元素作为我们的object query，其值大于或等于它们的8-connected neighbors。否则，需要大量的query来覆盖BEV平面。所选候选者的positions 和features用于初始化 query positions and query features。这样，我们的初始object query将定位在潜在对象中心或附近，从而无需多个解码器层 来完善位置。</p></aside><h2 id="category-aware">Category-aware</h2><p>BEV 平面上的物体都是具有绝对比例的，在同一类别中的比例差异很小。因此通过给每一个类别embedding的方式使得object queries 是 category  aware 的。</p><p>具体做法是，通过将类别的one-hot编码线性投影成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mi>d</mi></msup></mrow><annotation encoding="application/x-tex">R^d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span></span></span>向量，然后利用这个编码和query feature相加，这样的category-aware带来了两个好处：</p><ol><li>一方面在self-attention模块建立object-object relations \ cross-attention 建立object-context relations 时提供了side information</li><li>另一方面，在预测阶段，它可以提供有价值的先验知识，使得网络专注于类别内的差异，从而有利于属性预测</li></ol><h2 id="transformer-decoder-and-ffn-前馈神经网络">Transformer Decoder and FFN(前馈神经网络)</h2><h3 id="transformer-decoder">Transformer Decoder</h3><p><strong>object query</strong>和<strong>feature maps</strong> (来自点云或图像) 之间的交叉注意力将相关上下文聚集到候选对象上，而<strong>object query之间的self attention</strong>则导致不同候选对象之间的成对关系。</p><p>query positions通过多层感知器 (MLP) 嵌入到d-dimensional positional encoding中，并与query features按element-wisely（list对应元素相加）相加。这使网络能够共同推理上下文和位置。</p><h3 id="前馈网络-feed-forward-network-ffn"><strong>前馈网络 feed-forward network(FFN)</strong></h3><p>将包含丰富实例信息的 <strong>N</strong>个<strong>object query</strong>独立解码为<strong>框</strong>和<strong>类标签</strong>。<br>根据Center-Point，我们的FFN预测从query position的中心偏移量center offset为δx，δy，边界框高度为z，大小l，w，h为log（l），log（w），log（h），偏航角yaw angle α为sin（α），cos(α)，速度（如果可用）为v_x,v_y。</p><p>我们还预测了 K 个语义类的每类概率p∈[0,1]。每个属性由单独的两层 1×1 卷积计算。通过将每个object query解码为预测，我们得到一组预测 ，其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">b_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是第i个query的预测边界框。</p><p>我们采用辅助解码机制，在每个解码层之后添加FFN和监督。因此，我们可以从第一个解码器层获得初始边界框预测。 我们利用 LiDAR-camera fusion module中的此类初始预测来限制交叉注意力.</p><h2 id="lidar-camera-fusion">LiDAR-Camera Fusion</h2><h3 id="image-feature-fetching">Image Feature Fetching.</h3><p><strong>point-level融合方法</strong>带来改进，但融合质量在很大程度上受到 LiDAR 点的稀疏性的限制。当一个物体只包含少量的激光雷达点时，它只能获取相同数量的图像特征，浪费了高分辨率图像丰富的语义信息。</p><p>因此我们没有使用hard association.保留了所有的图像特征$$F_C ∈ R^{Nv×H×W×d}$$作为memory bank，在transformer 解码器中使用交叉注意力，以sparse-to-dense和自适应方法实现特征融合。</p><h3 id="smca-for-image-feature-fusion">SMCA for Image Feature Fusion.</h3><p>Multi-head attention是一种流行的在两组输入之间进行信息交换和建立软关联的机制，它已被广泛用于特征匹配任务。为了减轻硬关联策略带来的对传感器校准和劣质图像特征的敏感性，我们利用交叉注意机制在激光雷达和图像之间建立软关联，使网络能够自适应地确定应该从图像中获取哪些信息。</p><aside>💡 首先在使用先前的预测以及校准矩阵定位object query，然后在object query和相应的图像特征图之间执行交叉注意力cross attention。但是，由于 LiDAR 特征和图像特征来自完全不同的空间域，所以object query可能会关注与要预测的边界框无关的视觉区域，导致网络需要很长时间才能准确识别图像上的正确区域。</aside><p>我们设计了一个<strong>空间调制交叉注意力 (SMCA)</strong> 模块 ，它通过围绕每个<strong>query</strong>的投影 2D 中心的 2D 圆形<strong>高斯掩码Gaussian mask</strong>对<strong>交叉注意力</strong>进行<strong>加权</strong>。2D <strong>Gaussian</strong> 权重<strong>mask M</strong>的生成方式与 <strong>CenterNet</strong> 类似。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mtext>−</mtext><mfrac><mrow><mo stretchy="false">(</mo><mi>i</mi><mtext>−</mtext><mi>c</mi><mi>x</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>j</mi><mtext>−</mtext><mi>c</mi><mi>y</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mi>σ</mi><msup><mi>r</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M_{ij} = exp(−\frac{(i−cx)^2+(j−cy)^2}{σr^2} )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord">−</span><span class="mord mathdefault">c</span><span class="mord mathdefault">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord">−</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><blockquote><p>(i, j) 是权重掩码 M 的空间索引</p><p>(cx, cy) 是通过将query预测投影到图像平面上计算的 2D 中心</p><p>r是三维边界框投影角的最小外切圆的半径</p><p>σ 是调制高斯分布带宽的超参数</p></blockquote><p>然后，这个weight map与所有attention heads之间的cross-attention map按元素相乘。这样，每个object query只关注投影的 2D 框周围的相关区域，这样网络就可以更好更快地根据输入的 LiDAR 特征学习在哪里选择图像特征。注意力图的可视化如图 3 所示。该网络通常倾向于关注靠近对象中心的前景像素而忽略不相关的像素，为对象分类和边界框回归提供有价值的语义信息。 在 SMCA 之后，我们使用另一个 FFN（上面） 使用包含 LiDAR 和图像信息的object query来生成最终的边界框预测。</p><p><img src="https://img1.imgtp.com/2023/05/06/5IKRezV8.png" alt="Untitled"></p><p>图3 第一行显示输入图像和投影在图像上的<strong>object query</strong>的预测，第二行显示交叉注意力图。我们的融合策略能够<strong>动态</strong>选择相关的图像像素，并且不受 LiDAR 点数的限制。</p><h2 id="label-assignment-and-losses">Label Assignment and Losses</h2><p>使用Hungarian Algorithm（匈牙利算法）计算匹配成本。其中匹配成本由分类、回归、和IoU成本的加权和定义。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>m</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi></mrow></msub><mo>=</mo><msub><mi>λ</mi><mn>1</mn></msub><msub><mi>L</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mover accent="true"><mi>p</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mo>+</mo><msub><mi>λ</mi><mn>2</mn></msub><msub><mi>L</mi><mrow><mi>r</mi><mi>e</mi><mi>g</mi></mrow></msub><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mover accent="true"><mi>b</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mo>+</mo><msub><mi>λ</mi><mn>3</mn></msub><msub><mi>L</mi><mrow><mi>i</mi><mi>o</mi><mi>u</mi></mrow></msub><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mover accent="true"><mi>b</mi><mo>^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_{match}=\lambda_1L_{cls}(p,\hat{p})+\lambda_2L_{reg}(b,\hat{b})+\lambda_3L_{iou}(b,\hat{b})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2439879999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>其中，Lcls是二元交叉熵损失，Lreg是预测的BEV中心和ground truth中心之间的L1损失（都在[0，1]中归一化），Liou是预测的方框和ground truth boxes之间的IoU损失。</p><p>考虑到所有的匹配对，我们为分类计算focal loss。用L1 loss 仅针对positive pairs 计算边界盒回归。对于heatmap prediction,我们采用 penalty reduced focal loss(Center Point采用的方法)</p><p>对于两个解码层采用一样的标签分配策略和损失公式。</p><h2 id="image-guided-query-initialization">image-guided query initialization</h2><p>为了进一步利用高分辨率图像检测小物体的能力并使我们的算法对稀疏的 LiDAR 点云更加鲁棒，我们提出了一种Image-Guided Query Initialization策略，该策略利用 <strong>LiDAR</strong> 和<strong>camera</strong>信息来选择<strong>object query</strong>。</p><p><img src="https://img1.imgtp.com/2023/05/06/ZeUbu1wt.png" alt="Untitled"></p><p>我们首先沿垂直维度浓缩图像特征，然后利用LiDAR BEV特征的交叉注意将这些特征投射到BEV平面上。每幅图像都由一个单独的多头关注层处理，它捕捉到图像列和BEV位置之间的关系。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> cvpr </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Data Fusion</title>
      <link href="/2023/05/06/Data-Fusion/"/>
      <url>/2023/05/06/Data-Fusion/</url>
      
        <content type="html"><![CDATA[<h2 id="基本概念">基本概念</h2><p>1.1 多传感器信息融合是用于包含处于不同位置的多个或多种传感器的信息处理技术</p><p>1.2 根据融合层次可以分为：数据级、特征级、决策级</p><ul><li><p>特征级融合</p><p>先从各个传感器提供的原始数据中提取代表性特征，再把这些特征融合成单一特征向量；其中选择合适的特征进行融合是关键；特征信息包括边缘、方向、速度、形状</p><ul><li><p>可以划分为目标状态融合和目标特性融合</p><ul><li>目标状态融合：主要应用于多传感器的目标跟踪领域；融合系统首先对传感器数据进行预处理以完成数据配准，在数据配准之后，融合处理主要实现参数关联和状态估计。</li><li>目标特性融合：就是特征层联合识别，它的实质就是模式识别问题；在融合前必须先对特征进行关联处理，再对特征矢量分类成有意义的组合</li></ul>  <aside>  📌 我感觉意思就是一个是先把数据配齐，然后一起放进去，一个是要把数据关联成一个大的特征向量  </aside></li></ul></li><li><p>决策级融合</p><ul><li>属于高层次级融合，是对数据高层次级的抽象，输出是一个联合决策结果，在理论上这个联合决策应比任何单传感器决策更精确或更明确；</li><li>决策层融合在信息处理方面具有很高的灵活性，系统对信息传输带宽要求很低，能有效地融合反映环境或目标各个侧面的不同类型信息，而且可以处理非同步信息；</li><li>由于环境和目标的时变动态特性、先验知识获取的困难、知识库的巨量特性、面向对象的系统设计要求等，决策层融合理论与技术的发展仍受到一定的限制；</li></ul></li></ul><h2 id="信息融合相关条件">信息融合相关条件</h2><ul><li><p>2.1 融合的先决条件</p><ul><li>运动补偿</li></ul><p>自身的运动补偿和来自于其他目标的运动补偿。简单说就是采集一圈的时间周期内，无人车自身会有一定的位移，同时其他运动物体也会由于自身运动产生相对位移</p><ul><li>时间同步</li></ul><p>通过统一的主机给各个传感器提供基准时间，各传感器根据已经校准的时间各自独立采集数据并加上时间戳，以做到所有的传感器时间戳同步，但那时由于各个传感器各自采集周期相互独立，无法保证同一时刻采集到相同的信息</p><ul><li>空间同步</li></ul><p>将不同传感器坐标系下的测量值转化到同一个坐标系中。（传感器标定）</p></li><li><p>2.2 多传感器融合的基本思路</p><p>摄像头与激光雷达数据融合的基本思路</p><ul><li><p>障碍物的检测可以使用激光雷达进行物体聚类，但是对于较远物体过于稀疏的激光线数聚类的效果较差，因此利用视觉图像信息进行目标检测，进而获取障碍物的位置，同时视觉还可以给出障碍物类别信息；</p></li><li><p>融合的关键是需要将摄像头和激光雷达进行联合标定，获取两者坐标系的空间转换关系；可以通过标定的方式，把激光雷达投射到图像的坐标系中，建立图像的像素点，和激光雷达投影后的点之间做匹配，然后通过某种优化方程，来解决匹配问题；</p>  <aside>  📌 这里应该就是和老师提到的将 激光雷达 和 摄像头 的像素点 时空配准  </aside></li><li><p>激光雷达可以得到目标的3D 数据（x, y , z)，通过标定参数，以及相机本身的内参，可以把激光雷达的3D点投射到图像上，图像上的某些像素就会获得激光雷达的深度信息，然后便可以做基于图像的分割或者深度学习模型</p></li></ul></li></ul><h2 id="相关论文">相关论文</h2><ul><li><p>[ ]  从伪标定对象中建立虚拟点对应关系实现激光雷达-相机系统的外部标定</p></li><li><p>[ ]  融合3D-2D和3D-3D点对应关系的激光雷达-相机系统几何标定</p></li><li><p>[ ]  基于Lambertian模型的标准引导深度补全 激光雷达-相机系统</p></li><li><p>[ ]  一种基于灰度加权窗口的红外与可见光图像配准算法</p></li></ul><aside>✍️ 前两篇论文都是在讲LiDSAR-Camera Calibration，重点在于提出了什么样的方法解决激光雷达和摄像机 像素点之间的时空配准问题。第三篇关于激光雷达和摄像机的深度补全的内容，属于立体计算机视觉领域。最后一篇仅关于图像配准算法，属于图像融合的领域。</aside><h2 id="名词解释">名词解释</h2><h3 id="lidar-camera-calibration">LiDAR-camera Calibration</h3><p>激光雷达和摄像头联合标定：</p><p>标定就是找到雷达到相机的空间转换关系，在不同的坐标系之间转换需要旋转矩阵 R 和平移矩阵 T，为后续的雷达和相机数据融合做准备</p><p>通常，标定激光和相机之间的外参数有两类方法：一类是利用 3D-3D 的约束，即利用激光测量的三维激光点 (3D) 和相机测量的标定板三维坐标 (3D) 两者来构建约束；另一类是利用 3D-2D 的约束，即利用激光测量的三维激光点 (3D) 和图像二维特征（2D、点特征、线段特征）来构建约束。</p><h3 id="image-registration">Image Registration</h3><p>图像配准：</p><p>图像配准目的在于<strong>比较或融合针对同一对象在不同条件下获取的图像</strong>，例如图像会来自不同的采集设备，取自不同的时间，不同的拍摄视角等等，有时也需要用到针对不同对象的图像配准问题。</p><p>具体地说，对于一组图像数据集中的两幅图像，通过寻找一种空间变换把一幅图像（浮动图像，moving image）映射到另一幅图像（参考图像，fixed image）上，使得两图中对应于空间同一位置的点一一对应起来，从而达到信息融合的目的。</p><p>图像配准常为图像融合的一个预处理步骤。经过精确图像配准的图像对，通常可获得更好的融合效果。</p><h3 id="depth-completion">Depth Completion</h3><p>深度补全：</p><p>深度补全任务的目标是从稀疏和不规则点云生成密集的深度预测，然后将预测的深度信息映射到2D平面。</p><h3 id="lidar-camera-system">LiDAR-Camera System</h3><p>基于光束测量的距离，LiDAR通过生成稀疏的点云来检测周围的环境。单眼相机在其视场（FOV）内捕获2D密集的RGB信息。通过融合LiDAR数据和图像，LiDAR-相机系统可以处理高级感知视觉任务，如3D物体检测。</p><p>然而，LiDAR-相机系统的传感器融合需要相机和LiDAR坐标系的刚性转换。这种刚性转换被定义为LiDAR-相机系统的外在参数。它可以由一个旋转矩阵R和一个平移矢量T表示。R和T是LiDAR-相机系统的外在参数。外部标定的目的是估计它们。</p><h3 id="pose-estimation">Pose Estimation</h3><h3 id="pnp-问题-epnp-算法">PnP 问题 、EPnP 算法</h3><p>PnP(Perspective-n-Point)是求解3D到2D点对运动的方法，目的是求解相机坐标系相对世界坐标系的位姿。它描述了已知n个3D点的坐标(相对世界坐标系)以及这些点的像素坐标时，如何估计相机的位姿(即求解世界坐标系到相机坐标系的旋转矩阵R和平移向量t)。</p><h2 id="实验要求">实验要求</h2><p><strong>目的要求：</strong></p><ol><li>培养学生的调查研究、收集信息、查找文献的能力</li><li>检验、巩固、提升学生对计算机视觉、深度学习的基本知识、基本理论与基本技能的掌握程度；</li><li>熟悉相机与激光雷达相关的软硬件的使用</li></ol><p>要求学生独立观察、分析、判断、提出科学问题，用发散思维和集中思维，构思多种解决方案并继而优选决策，解决问题，整理加工，形成论文</p><p>**主要内容：**针对无人艇在水面环境下的目标检测任务。</p><ol><li>熟悉相机以及激光雷达的硬件知识，在开发板上实现对相机与激光雷达的调用</li><li>完成相机与激光雷达的标定，实现空间对齐</li><li>根据水面环境单一、特征信息弱的特点设计水面3D目标检测模型，细化激光雷达与相机的位置配准，并基于对激光雷达与相机特征层融合，实现水面目标3D检测。并在公开数据集上对网络进行预训练。</li><li>收集真实水面点云与图像数据，将预训练模型迁移到水面场景并测试。进一步基于卡尔曼滤波方法，通过激光雷达与点云的决策融合进提升目标检测的准确率。</li><li>测试与模型调整，对结果进行分析与总结，完成论文攥写</li></ol><p><strong>预期目标：</strong></p><ol><li>实现算法的设计，实现双目相机与激光雷达的优势互补，在特征级与决策级实现激光雷达与相机的融合，能准确地对水面不同尺寸的目标进行检测，并得到目标船只的相对位置。</li><li>算法在一定程度上适应水面环境的特殊性，在颠簸情况下也有一定效果。</li><li>算法速率基本满足无人艇实时运作需求。</li></ol><p><strong>参考资料：</strong></p><p>[1] Y. Li <em>et al</em>., “DeepFusion: Lidar-Camera Deep Fusion for Multi-Modal 3D Object Detection,” <em>2022 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)</em>,2022, pp. 17161-17170, doi: 10.1109/CVPR52688.2022.01667.</p><p>[2] Pei An <em>et al</em>., “Geometric calibration for LiDAR-camera system fusing 3D-2D and 3D-3D point correspondences,” Opt. Express 28, 2122-2141 (2020)</p><p>[3] Pei An <em>et al</em>., “LiDAR-camera system extrinsic calibration by establishing virtual point correspondences from pseudo calibration objects,” Opt. Express 28, 18261-18282 (2020)</p><h2 id="不同的融合策略">不同的融合策略</h2><p><strong>物体检测的策略分为：决策层融合，决策+特征层融合，以及特征层融合</strong>。在决策层融合中，图像和点云分别得到物体检测结果（BoundingBox），转换到统一坐标系后再进行合并。这种策略中用到的大都是一些传统的方法，比如IoU计算，卡尔曼滤波等，与深度学习关系不大。下面重点来讲讲后两种融合策略。</p><h3 id="2-1-决策-特征层融合"><strong>2.1 决策+特征层融合</strong></h3><p>这种策略的主要思路是将<strong>先通过一种数据生成物体的候选框（Proposal）</strong>。如果采用图像数据，那么生成的就是2D候选框，如果采用点云数据，那么生成的就是3D候选框。<strong>然后将候选框与另外一种数据相结合来生成最终的物体检测结果</strong>（也可以再重复利用生成候选框的数据）。这个结合的过程就是将候选框和数据统一到相同的坐标系下，可以是3D点云坐标（比如F-PointNet），也可以是2D图像坐标（比如IPOD）。</p><p><strong>F-PointNet[2]由图像数据生成2D物体候选框，然后将这些候选框投影到3D空间</strong>。每个2D候选框在3D空间对应一个视椎体（Frustum），并将落到视椎体中所有点合并起来作为该候选框的特征。视椎体中的点可能来自前景的遮挡物体或者背景物体，所以需要进行3D实例分割来去除这些干扰，只保留物体上的点，用来进行后续的物体框估计（类似PointNet中的处理方式）。这种基于视椎的方法，其缺点在于每个视椎中只能处理一个要检测的物体，这对于拥挤的场景和小目标（比如行人）来说是不能满足要求的。</p><p><img src="https://pic4.zhimg.com/80/v2-90fb34ae1106462e0a6025020cb8fe73_720w.webp" alt="https://pic4.zhimg.com/80/v2-90fb34ae1106462e0a6025020cb8fe73_720w.webp"></p><p>F-PointNet网络结构图</p><p>针对视椎的上述问题，<strong>IPOD[3]提出采用2D语义分割来替换2D物体检测</strong>。首先，图像上的语义分割结果被用来去除点云中的背景点，这是通过将<strong>点云投影到2D图像空间</strong>来完成的。接下来，在每个前景点处生成候选物体框，并采用NMS去除重叠的候选框，最后每帧点云大约保留500个候选框。同时，PointNet++网格被用来进行点特征提取。有了候选框和点特征，最后一步采用一个小规模的PointNet++来预测类别和准确的物体框（当然这里也可以用别的网络，比如MLP）。IPOD在语义分割的基础上生成了稠密的候选物体框，因此在含有大量物体和互相遮挡的场景中效果比较好。</p><p><img src="https://pic3.zhimg.com/80/v2-6b0a3c68cd36530e8c55c93147bd5bee_720w.webp" alt="https://pic3.zhimg.com/80/v2-6b0a3c68cd36530e8c55c93147bd5bee_720w.webp"></p><p>IPOD网络结构图</p><p>上面两个方法分别通过2D图像上的物体检测和语义分割结果来生成候选框，然后只在点云数据上进行后续的处理。<strong>SIFRNet[4]提出在视椎体上融合点云和图像特征</strong>，以增强视椎体所包含的信息量，用来进一步提高物体框预测的质量。</p><p><img src="https://pic1.zhimg.com/80/v2-45b55a9b33b0645add1187ce290e83d4_720w.webp" alt="https://pic1.zhimg.com/80/v2-45b55a9b33b0645add1187ce290e83d4_720w.webp"></p><p>SIFRNet网络结构图</p><p>近年来，随着3D物体检测技术的快速发展，<strong>物体候选框的选取也从逐渐从2D向3D转变</strong>。**MV3D[5]**是基于3D候选框的代表性工作。首先，<strong>它将3D点云映射到BEV视图，并基于此视图生成3D物体候选框</strong>。然后，将这些3D候选框映射到点云的前视图以及图像视图，并将相应的特征进行融合。特征融合是以候选框为基础，并通过ROI pooling来完成的。</p><p><img src="https://pic4.zhimg.com/80/v2-6c0177ef8bfd90bd77368d4ddb01cdf3_720w.webp" alt="https://pic4.zhimg.com/80/v2-6c0177ef8bfd90bd77368d4ddb01cdf3_720w.webp"></p><p>MV3D网络结构图</p><p>**AVOD[6]**的思路也是在3D候选框的基础上融合图像和点云特征。<strong>但是原始候选框的生成并不是通过点云处理得到，而是通过先验知识在BEV视图下均匀采样生成的</strong>（间隔0.5米，大小为各个物体类的均值）。点云数据用来辅助去除空的候选框，这样最终每帧数据会产生8万到10万个候选框。这些候选框通过融合的图像和点云特征进行进一步筛选后，作为最终的候选再送入第二阶段的检测器。<strong>因此，也可以认为AVOD的候选框是同时在图像和点云上得到的</strong>。</p><p><img src="https://pic4.zhimg.com/80/v2-06bd200bf426fc4b5fe3b6a4a8e37ba7_720w.webp" alt="https://pic4.zhimg.com/80/v2-06bd200bf426fc4b5fe3b6a4a8e37ba7_720w.webp"></p><p>AVOD网络结构图</p><h3 id="2-2-特征层融合"><strong>2.2 特征层融合</strong></h3><p>决策+特征层融合的特点是以物体候选框为中心来融合不同的特征，融合的过程中一般会用到ROI pooling（比如双线性插值），而这个操作会导致空间细节特征的丢失。**另外一种思路是特征层融合，也就是直接融合多种特征。**比如说将点云映射到图像空间，作为带有深度信息的额外通道与图像的RGB通道进行合并。这种思路简单直接，对于2D物体检测来说效果不错。但是融合的过程丢失了很多3D空间信息，因此对于3D物体检测来说效果并不好。由于3D物体检测领域的迅速发展，<strong>特征层融合也更倾向于在3D坐标下完成，这样可以为3D物体检测提供更多信息</strong>。</p><p>**ContFuse[7]采用连续卷积（Continuous Convolution）来融合点云和图像特征。融合过程在BEV视图下完成。**对于BEV上的一个像素（网格），首先在点云数据中找到其K个最邻近的点，然后将这些3D空间中的点映射到图像空间，以此得到每个点的图像特征。同时，每个点的几何特征则是该点到相应BEV像素的XY偏移量。将图像特征和几何特征合并作为点特征，然后按照连续卷积的做法对其进行加权求和（权重依赖于XY偏移量），以得到相应BEV像素处的特征值。对BEV的每个像素进行类似处理，就得到了一个BEV特征图。这样就完成了图像特征到BEV视图的转换，之后就可以很方便的与来自点云的BEV特征进行融合。ContFuse中在多个空间分辨率下进行了上述的特征融合，以提高对不同大小物体的检测能力。</p><p><img src="https://pic1.zhimg.com/80/v2-3947a9429eb1c72edf07a8ef296c1ac0_720w.webp" alt="https://pic1.zhimg.com/80/v2-3947a9429eb1c72edf07a8ef296c1ac0_720w.webp"></p><p>利用连续卷积将图像特征投影到BEV视图</p><p>**PointPainting[8]**把点云投影到图像语义分割的结果中，这与IPOD中的做法类似。但是，**PointPainting没有利用语义分割的结果来分离前景点，而是直接将语义分割的信息附加到点云上。**这样做的好处是，融合之后的数据还是点云（但是具有更为丰富的语义信息），可以采用任何点云物体检测网络来处理，比如PointRCNN，VoxelNet，PointPillar等等。</p><p><img src="https://pic4.zhimg.com/80/v2-6df5b45a9eda063e9db991b0ae8290a7_720w.webp" alt="https://pic4.zhimg.com/80/v2-6df5b45a9eda063e9db991b0ae8290a7_720w.webp"></p><p>PointPainting的融合流程图</p><p>PointPainting中附加给点云的是2D图像的语义信息，这已经是高度抽象之后的信息，而原始的图像特征则被丢弃了。从融合的角度来看，底层特征的融合可以更大程度的保留信息，利用不同特征之间的互补性，理论上说也就更有可能提升融合的效果。**MVX-Net[9]**利用一个实现训练好的2D卷积网络来提取图像特征，然后通过点云和图像之间的映射关系将图像特征附加到每个点上。之后再采用VoxelNet来处理融合后的点特征。除了这种点融合策略，MVX-Net还提出了在voxel层次上融合，其主要的不同就在于将voxel而不是point投影到图像空间，因此图像特征是被附加在voxel之上。从实验结果来看，point融合比voxel融合结果略好，这也进一步说明了较低的融合层次可能会带来更好的效果。</p><p><img src="https://pic1.zhimg.com/80/v2-0c67ac7786073e73df84c03c29804144_720w.webp" alt="https://pic1.zhimg.com/80/v2-0c67ac7786073e73df84c03c29804144_720w.webp"></p><p>MVX-Net中的Point融合方法</p><p>**语义分割任务中的融合一般都是在特征层上进行，之前介绍的特征融合方法理论上来说可以用来进行语义分割。**比如说，ContFuse在BEV网格上融合了图像和点云特征，这个特征就可以用来进行网格级别的语义分割，而PointPainting将图像特征附加到点云上，后续可以采用任何基于点云语义分割的算法来对每个点进行语义分类，甚至也可以进行实例分割和全景分割。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 相机 </tag>
            
            <tag> 激光雷达 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Image Gallery</title>
      <link href="/2023/05/06/Image-Gallery/"/>
      <url>/2023/05/06/Image-Gallery/</url>
      
        <content type="html"><![CDATA[<div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁紙</div>  <p>收藏的一些壁纸</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>关于漫威的图片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>关于OH MY GIRL的图片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>  </div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/05/05/hello-world/"/>
      <url>/2023/05/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to Fanfer’s Blog(<a href="https://fanfer.top">https://fanfer.top</a>)! This is your very first post.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="basic-usage">basic usage</h2><h3 id="图床更新">图床更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="comment"># 将更改提交</span></span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">&quot;更新图片&quot;</span></span><br><span class="line">$ <span class="comment"># 推送至github仓库</span></span><br><span class="line">$ git push</span><br></pre></td></tr></table></figure><h3 id="部署更新">部署更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean; hexo generate; hexo deploy </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
